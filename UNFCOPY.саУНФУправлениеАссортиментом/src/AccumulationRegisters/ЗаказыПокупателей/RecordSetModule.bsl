Функция ПолучитьДоставку()
	МассивДоставка = Новый Массив(2);
	МассивДоставка[0] = Справочники.Номенклатура.НайтиПоКоду("УК-00022475");
	МассивДоставка[1] = Справочники.Номенклатура.НайтиПоКоду("УУ-00024990");
	Возврат МассивДоставка;
КонецФункции // ()
 


&Вместо("РассчитатьГрафикВыполненияЗаказов")
Процедура саУНФ_РассчитатьГрафикВыполненияЗаказов()
	ТаблицаЗаказов = ДополнительныеСвойства.ТаблицаЗаказов;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказов", ТаблицаЗаказов.ВыгрузитьКолонку("ЗаказПокупателя"));
	Запрос.УстановитьПараметр("МассивДоставка", ПолучитьДоставку());


	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказыПокупателейОстатки.Организация КАК Организация,
	|	ЗаказыПокупателейОстатки.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ЗаказыПокупателейОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыПокупателейОстатки.Характеристика КАК Характеристика,
	|	ЗаказыПокупателейОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Остатки(, ЗаказПокупателя В (&МассивЗаказов)) КАК ЗаказыПокупателейОстатки
	|ГДЕ
	|НЕ ЗаказыПокупателейОстатки.Номенклатура В  (&МассивДоставка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ЗаказПокупателя,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Таблица.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(Таблица.Период, ДЕНЬ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(Таблица.ДатаОтгрузки, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.ЗаказПокупателя КАК ЗаказПокупателя,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	СУММА(Таблица.Количество) КАК КоличествоПлан
	|ПОМЕСТИТЬ ВТ_ПланДвижения
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей КАК Таблица
	|ГДЕ
	|	Таблица.ЗаказПокупателя В(&МассивЗаказов)
	|	И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Таблица.Количество > 0
	|	И Таблица.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Таблица.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(Таблица.Период, ДЕНЬ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(Таблица.ДатаОтгрузки, ДЕНЬ)
	|	КОНЕЦ,
	|	Таблица.Организация,
	|	Таблица.ЗаказПокупателя,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ЗаказПокупателя,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Таблица.Период КАК Период,
	|	ВТ_Таблица.Организация КАК Организация,
	|	ВТ_Таблица.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ВТ_Таблица.Номенклатура КАК Номенклатура,
	|	ВТ_Таблица.Характеристика КАК Характеристика,
	|	ВТ_Таблица.КоличествоПлан КАК КоличествоПлан,
	|	ЕСТЬNULL(ВТ_Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток
	|ИЗ
	|	ВТ_ПланДвижения КАК ВТ_Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|		ПО ВТ_Таблица.Организация = ВТ_Остатки.Организация
	|			И ВТ_Таблица.ЗаказПокупателя = ВТ_Остатки.ЗаказПокупателя
	|			И ВТ_Таблица.Номенклатура = ВТ_Остатки.Номенклатура
	|			И ВТ_Таблица.Характеристика = ВТ_Остатки.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказПокупателя,
	|	Номенклатура,
	|	Характеристика,
	|	Период УБЫВ";
	
	НаборЗаписей = РегистрыСведений.ГрафикВыполненияЗаказов.СоздатьНаборЗаписей();
	Выборка = Запрос.Выполнить().Выбрать();
	ЕстьЗаписиВВыборке = Выборка.Следующий();
	Пока ЕстьЗаписиВВыборке Цикл
		
		ТекПериод = Неопределено;
		ТекОрганизация = Неопределено;
		ТекНоменклатура = Неопределено;
		ТекХарактеристика = Неопределено;
		ТекЗаказПокупателя = Выборка.ЗаказПокупателя;
		
		НаборЗаписей.Отбор.Заказ.Установить(ТекЗаказПокупателя);
		
		// Из таблицы удаляем отработанный заказ.
		ТаблицаЗаказов.Удалить(ТаблицаЗаказов.Найти(ТекЗаказПокупателя, "ЗаказПокупателя"));
		
		// Цикл по строкам одного заказа.
		ВсегоПлан = 0;
		ВсегоОстаток = 0;
		СтруктураНаборЗаписей = Новый Структура;
		Пока ЕстьЗаписиВВыборке И Выборка.ЗаказПокупателя = ТекЗаказПокупателя Цикл
			
			ВсегоПлан = ВсегоПлан + Выборка.КоличествоПлан;
			
			Если ТекНоменклатура <> Выборка.Номенклатура
				ИЛИ ТекХарактеристика <> Выборка.Характеристика
				ИЛИ ТекОрганизация <> Выборка.Организация Тогда
				
				ТекНоменклатура = Выборка.Номенклатура;
				ТекХарактеристика = Выборка.Характеристика;
				ТекОрганизация = Выборка.Организация;
				
				ВсегоКоличествоОстаток = 0;
				Если Выборка.КоличествоОстаток > 0 Тогда
					ВсегоКоличествоОстаток = Выборка.КоличествоОстаток;
				КонецЕсли;
				
				ВсегоОстаток = ВсегоОстаток + Выборка.КоличествоОстаток;
				
			КонецЕсли;
			
			ТекКоличество = Мин(Выборка.КоличествоПлан, ВсегоКоличествоОстаток);
			Если ТекКоличество > 0 И ?(ЗначениеЗаполнено(ТекПериод), ТекПериод > Выборка.Период, Истина) Тогда
				
				СтруктураНаборЗаписей.Вставить("Период", Выборка.Период);
				СтруктураНаборЗаписей.Вставить("ЗаказПокупателя", Выборка.ЗаказПокупателя);
				
				ТекПериод = Выборка.Период;
				
			КонецЕсли;
			
			ВсегоКоличествоОстаток = ВсегоКоличествоОстаток - ТекКоличество;
			
			// Переход к следующей записи в выборке.
			ЕстьЗаписиВВыборке = Выборка.Следующий();
			
		КонецЦикла;
		
		// АссистентУправления: отгруженность заказа до записи движений.
		НаборЗаписей.Прочитать();
		СостояниеОтгрузкиДо = СтатусОтгрузкиЗаказа(НаборЗаписей);
		НаборЗаписей.Очистить();
		
		// Запись и очистка набора.
		Если СтруктураНаборЗаписей.Количество() > 0 Тогда
			Запись = НаборЗаписей.Добавить();
			Запись.Период = СтруктураНаборЗаписей.Период;
			Запись.Заказ = СтруктураНаборЗаписей.ЗаказПокупателя;
			Запись.Выполнено = ВсегоПлан - ВсегоОстаток;
		КонецЕсли;
		
		НаборЗаписей.Записать(Истина);
		
		// АссистентУправления: отгруженность заказа после записи движений.
		СостояниеОтгрузкиПосле = СтатусОтгрузкиЗаказа(НаборЗаписей);
		НаборЗаписей.Очистить();
		
		АссистентУправленияПриСрабатыванииСобытия(ТекЗаказПокупателя, Отбор.Регистратор.Значение, СостояниеОтгрузкиДо, СостояниеОтгрузкиПосле);
		
	КонецЦикла;
	
	// По неотработанным заказам нужно очистить движения.
	Если ТаблицаЗаказов.Количество() > 0 Тогда
		Для Каждого СтрокаТаб Из ТаблицаЗаказов Цикл
			
			НаборЗаписей.Отбор.Заказ.Установить(СтрокаТаб.ЗаказПокупателя);
			НаборЗаписей.Записать(Истина);
			НаборЗаписей.Очистить();
			
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры
