&НаСервере
Функция ПолучитьГарантийныйСрок(Гарантия)	
        Если Гарантия>36 Тогда
        ГарантийныйСрок = Перечисления.саУНФ_СрокиГарантииДубль._48_месяцев;
        ИначеЕсли Гарантия>24 Тогда
        ГарантийныйСрок = Перечисления.саУНФ_СрокиГарантииДубль._36_месяцев;	
        ИначеЕсли Гарантия>12 Тогда
        ГарантийныйСрок = Перечисления.саУНФ_СрокиГарантииДубль._24_месяца;		
        ИначеЕсли Гарантия>6 Тогда
        ГарантийныйСрок = Перечисления.саУНФ_СрокиГарантииДубль._12_месяцев;	
        Иначе
        ГарантийныйСрок = Перечисления.саУНФ_СрокиГарантииДубль._6_месяцев;	
        КонецЕсли;	
        
        Возврат ГарантийныйСрок;
КонецФункции

&НаСервере
Процедура ТалоныКСозданию(Ссылка)
	НаборЗаписей = РегистрыСведений["саУНФГарантийныеТалоны"].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Ссылка);
	НаборЗаписей.Записать();
	ТаблицаСерийныйНомер.Очистить();
	
	СписокРеквизитов = "Дата,Номер";
	
	ПараметрыДляВставки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, СписокРеквизитов);
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПрефиксацияОбъектов")  Тогда
		МодульПрефиксацияОбъектовКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПрефиксацияОбъектовКлиентСервер");
		ПараметрыДляВставки.Номер = МодульПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ПараметрыДляВставки.Номер,Истина,Истина);
	КонецЕсли; 
	    ПараметрыДляВставки.Дата=Формат(ПараметрыДляВставки.Дата,"ДФ=ddMMyyyy;"); 
	    ДлинаСтрокиНомера = СтрДлина(ПараметрыДляВставки.Номер);
	    Если  ДлинаСтрокиНомера>6 Тогда
	    	ПараметрыДляВставки.Номер = Прав(ПараметрыДляВставки.Номер,6);	    
	    ИначеЕсли ДлинаСтрокиНомера <6 Тогда
	    	ПараметрыДляВставки.Номер = Прав(ПараметрыДляВставки.Номер,6);
	    	Для i=1 По 6-ДлинаСтрокиНомера Цикл
	    		ПараметрыДляВставки.Номер ="0"+ПараметрыДляВставки.Номер;
	    	КонецЦикла;
	    КонецЕсли;
	   
	   Лев_Номер =  ПараметрыДляВставки.Номер+"-"+Строка(ПараметрыДляВставки.Дата)+"-";
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЗаказПокупателяЗапасы.Номенклатура,
	|	ЗаказПокупателяЗапасы.Номенклатура.ГарантийныйСрок КАК ГарантийныйСрок,
	|	ЗаказПокупателяЗапасы.Количество,
	|	ЗаказПокупателяЗапасы.НомерСтроки
	|ПОМЕСТИТЬ ВТ_ЗАКАЗ
	|ИЗ
	|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|ГДЕ
	|	ЗаказПокупателяЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка
	|ПОМЕСТИТЬ ВТ_ХАРАКТЕРИСТИКА
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Имя = &Имя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ЗАКАЗ.Номенклатура
	|ПОМЕСТИТЬ ВТ_НОМ
	|ИЗ
	|	ВТ_ЗАКАЗ КАК ВТ_ЗАКАЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗАКАЗ.Номенклатура,
	|	ВТ_ЗАКАЗ.ГарантийныйСрок,
	|	ВТ_ЗАКАЗ.Количество,
	|	ВТ_ЗАКАЗ.НомерСтроки
	|ИЗ
	|	ВТ_ЗАКАЗ КАК ВТ_ЗАКАЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НОМ.Номенклатура,
	|	НоменклатураДополнительныеРеквизиты.Свойство,
	|	НоменклатураДополнительныеРеквизиты.Значение
	|ИЗ
	|   Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НОМ КАК ВТ_НОМ
	|       ПО НоменклатураДополнительныеРеквизиты.Ссылка = ВТ_НОМ.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ХАРАКТЕРИСТИКА КАК ВТ_ХАРАКТЕРИСТИКА		 	  
	|		ПО НоменклатураДополнительныеРеквизиты.Свойство = ВТ_ХАРАКТЕРИСТИКА.Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Имя", "Гарантия_0320171166cd41768d71c9c4afd0320c");

	РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
    РезультатЗапроса = РезультатЗапросаПакет[3];
    ТаблицаГарантии  = РезультатЗапросаПакет[4].Выгрузить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НомСтр = СокрЛП(Строка(ВыборкаДетальныеЗаписи.НомерСтроки));
		Если СтрДлина(НомСтр) = 1 Тогда
			НомСтр="0" + НомСтр;
		КонецЕсли;
		ГарантийныйСрок = Перечисления.саУНФ_СрокиГарантииДубль._6_месяцев;
		Отбор = Новый Структура("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		Если ТаблицаГарантии.Количество()>0 Тогда
			 МассивГарантии = ТаблицаГарантии.НайтиСтроки(Отбор);
			 Если МассивГарантии.Количество()>0 Тогда
			 	 Гарантия = ЛЕВ(МассивГарантии[0].Значение.Наименование,2);
			 	 Гарантия = СтрЗаменить(Гарантия,"." ,"" );
			 	 Гарантия = СтрЗаменить(Гарантия,"мес" ,"" );
			 	 Гарантия = СокрЛП(Гарантия);
			 	 Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Гарантия) Тогда
					Гарантия = Число(Гарантия);
					ГарантийныйСрок = ПолучитьГарантийныйСрок(Гарантия);
				КонецЕсли;	
			 КонецЕсли;
		КонецЕсли;

        	
		
		Для i = 1 По ВыборкаДетальныеЗаписи.Количество Цикл
			НоваяСтрока = ТаблицаСерийныйНомер.Добавить();
			НомКол=СокрЛП(Строка(i));
			НоваяСтрока.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			НоваяСтрока.Номер = Лев_Номер +НомСтр+"/"+НомКол;
			НоваяСтрока.СрокГарантии = ГарантийныйСрок;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВидимостьЭлементов()
	Элементы.ТаблицаСерийныйНомерАвтомобиль.Видимость = ИнфоПоАвтомобилю;
	Элементы.ИнфоДвигатель.Видимость = ИнфоПоАвтомобилю;
	Элементы.ИнфоПоАвто.Видимость = ИнфоПоАвтомобилю;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Свойство("Документ") Тогда
		Отказ = Истина;
	КонецЕсли;
	ВидимостьЭлементов();
	Документ = Параметры.Документ;
	ТалоныКСозданию(Параметры.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнфоПоАвтомобилюПриИзменении(Элемент)
	ВидимостьЭлементов();
КонецПроцедуры


&НаКлиенте
Процедура СоздатьГарантийныеТалоны(Команда)
	СоздатьГарантийныеТалоныНаСервере();
	Закрыть(Истина);
КонецПроцедуры

&НаСервере
Функция ПроверкаЗаполнения()
	Отказ = Ложь;
	Для Каждого СтрТаб Из ТаблицаСерийныйНомер Цикл
		Если Не ЗначениеЗаполнено(СтрТаб.СерийныйНомер) Тогда
			Индекс = ТаблицаСерийныйНомер.Индекс(СтрТаб)+1;
			ТекстСообщения = СтрШаблон("В строке %1 не заполнен серийный номер",Индекс);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;	
	КонецЦикла;
	Возврат Отказ;
КонецФункции

&НаСервере
Процедура СоздатьГарантийныеТалоныНаСервере()
	Если ПроверкаЗаполнения() Тогда
		Возврат;
	КонецЕсли;
	
	
	НаборЗаписей = РегистрыСведений["саУНФГарантийныеТалоны"].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	Для Каждого СтрТаб Из ТаблицаСерийныйНомер Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, СтрТаб);
		Запись.Пользователь = Пользователи.ТекущийПользователь();
		Запись.Документ = Документ;
		Запись.Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Контрагент");
		Запись.Количество = 1;
		Индекс = Перечисления.саУНФ_СрокиГарантииДубль.Индекс(СтрТаб.СрокГарантии);
		Запись.СрокГарантии = Перечисления["саУНФ_СрокГарантии"].Получить(Индекс);
	КонецЦикла;
	НаборЗаписей.Записать();
КонецПроцедуры

