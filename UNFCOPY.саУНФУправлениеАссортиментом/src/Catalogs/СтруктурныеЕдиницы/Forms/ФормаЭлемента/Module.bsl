 


&НаСервере
Процедура саУНФ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если Объект.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
		
		ПолеВвода = Элементы.Добавить(
				"КонтролироватьАссортимент",
				Тип("ПолеФормы"),
				ЭтаФорма.Элементы["ГруппаРеквизиты"]);
				
		ПолеВвода.Заголовок = "Контролировать ассортимент(са)";
		ПолеВвода.Вид = ВидПоляФормы.ПолеФлажка;
		ПолеВвода.ЦветТекстаЗаголовка = Новый Цвет(0,0,255);
		
		ПолеВвода.ПутьКДанным = "Объект.саУНФ_КонтролироватьАссортимент";
		ПолеВвода.УстановитьДействие("ПриИзменении", "ПриИзмененииКонролироватьАссортимент");
		
		ПолеВвода = Элементы.Добавить(
				"ФорматМагазина",
				Тип("ПолеФормы"),
				ЭтаФорма.Элементы["ГруппаРеквизиты"]);
				
		ПолеВвода.Заголовок = "Формат магазина(са)";
		ПолеВвода.Вид = ВидПоляФормы.ПолеФлажка;
		ПолеВвода.ЦветТекстаЗаголовка = Новый Цвет(0,0,255);
		
		ПолеВвода.ПутьКДанным = "Объект.саУНФ_ФорматМагазина";
		
		Элементы.ФорматМагазина.Доступность = Объект.саУНФ_КонтролироватьАссортимент;
		
		//***Начало***17.05.2021***МурашкоВ
		#Область ДобавлениеЭлементовФормы
		ГруппаФормы = Элементы.Тип;
		// Элементы
		
		НовыйЭлемент = Элементы.Добавить("AK_Филиал", Тип("ПолеФормы"), ГруппаФормы);
		НовыйЭлемент.ПутьКДанным                    =   "Объект.AK_Филиал";
		НовыйЭлемент.Вид                            =   ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ТолькоПросмотр                 =   Ложь;
		НовыйЭлемент.Подсказка                      =   "С этого склада снабжаются РТТ";
		НовыйЭлемент.ОтображениеПодсказки           =   ОтображениеПодсказки.Кнопка;
		НовыйЭлемент.ПоложениеЗаголовка             =   ПоложениеЗаголовкаЭлементаФормы.Право;
		НовыйЭлемент.УстановитьДействие(
		"ПриИзменении", 		    //Имя события
		"ПриИзмененииФилиала"); //Имя процедуры обработчика
		
		
		Если Параметры.Ключ.Пустая() ИЛИ Объект.ТипСтруктурнойЕдиницы<>Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
			НовыйЭлемент.Доступность = Ложь;
		Иначе	
			НовыйЭлемент.Доступность = Истина;
		КонецЕсли;	
		//--------------------------------------------------------------
		ГруппаФормы = Элементы.ГруппаРеквизиты;
		
		НовыйЭлемент = Элементы.Добавить("саУНФ_ЛетнееРасписание", Тип("ПолеФормы"), ГруппаФормы);
		НовыйЭлемент.ПутьКДанным                    		=   "Объект.саУНФ_ЛетнееРасписание";
		НовыйЭлемент.Вид                           				=   ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ТолькоПросмотр                 	=   Ложь;
		НовыйЭлемент.Подсказка                      			=   "Летнее расписание магазина";
		НовыйЭлемент.ОтображениеПодсказки       	=   ОтображениеПодсказки.Кнопка;
		НовыйЭлемент.ПоложениеЗаголовка             =   ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ЦветТекстаЗаголовка			=	 Новый Цвет(0,0,255);
	
		
		Если Параметры.Ключ.Пустая() ИЛИ Объект.ТипСтруктурнойЕдиницы<>Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
			НовыйЭлемент.Доступность = Ложь;
		Иначе	
			НовыйЭлемент.Доступность = Истина;
		КонецЕсли;	

		НовыйЭлемент = Элементы.Добавить("саУНФ_СезонЗима", Тип("ПолеФормы"), ГруппаФормы);
		НовыйЭлемент.ПутьКДанным                    		=   "Объект.саУНФ_СезонЗима";
		НовыйЭлемент.Вид                           				=   ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ТолькоПросмотр                 		=   Ложь;
		НовыйЭлемент.Подсказка                      			=   "Если стоит флажок, то сезон зима";
		НовыйЭлемент.ОтображениеПодсказки       		=   ОтображениеПодсказки.Кнопка;
		НовыйЭлемент.ПоложениеЗаголовка             	=   ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ЦветТекстаЗаголовка					=	 Новый Цвет(0,0,255);
        Если Объект.саУНФ_СезонЗима  Тогда
		       НовыйЭлемент.Заголовок		=	"Сезон: ЗИМА";
		Иначе
		       НовыйЭлемент.Заголовок		=	"Сезон: ЛЕТО";
		КонецЕсли;
		
		Если Параметры.Ключ.Пустая() ИЛИ Объект.ТипСтруктурнойЕдиницы<>Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
			НовыйЭлемент.Доступность = Ложь;
		Иначе	
			НовыйЭлемент.Доступность = Истина;
		КонецЕсли;	

		НовыйЭлемент = Элементы.Добавить("саУНФ_ЗимнееРасписание", Тип("ПолеФормы"), ГруппаФормы);
		НовыйЭлемент.ПутьКДанным                    		=   "Объект.саУНФ_ЗимнееРасписание";
		НовыйЭлемент.Вид                           				=   ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ТолькоПросмотр                 	=   Ложь;
		НовыйЭлемент.Подсказка                      			=   "Зимнее расписание магазина";
		НовыйЭлемент.ОтображениеПодсказки       	=   ОтображениеПодсказки.Кнопка;
		НовыйЭлемент.ПоложениеЗаголовка             =   ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ЦветТекстаЗаголовка			=	 Новый Цвет(0,0,255);
	
		
		Если Параметры.Ключ.Пустая() ИЛИ Объект.ТипСтруктурнойЕдиницы<>Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
			НовыйЭлемент.Доступность = Ложь;
		Иначе	
			НовыйЭлемент.Доступность = Истина;
		КонецЕсли;	

		НовыйЭлемент = Элементы.Добавить("НаправлениеДоставки", Тип("ПолеФормы"), ГруппаФормы);
		НовыйЭлемент.ПутьКДанным                    		=   "Объект.НаправлениеДоставки";
		НовыйЭлемент.Вид                           				=   ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ТолькоПросмотр                 	=   Ложь;
		НовыйЭлемент.Подсказка                      			=   "Логистическое направление доставки";
		НовыйЭлемент.ОтображениеПодсказки       	=   ОтображениеПодсказки.Кнопка;
		НовыйЭлемент.ПоложениеЗаголовка             =   ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ЦветТекстаЗаголовка			=	 Новый Цвет(0,0,255);

		
		
		// Элементы
		
		НовыйЭлемент = Элементы.Добавить("саУНФ_ГрафикДоставки", Тип("ПолеФормы"), ГруппаФормы);
		НовыйЭлемент.ПутьКДанным                    	=   "Объект.саУНФ_ГрафикДоставки";
		НовыйЭлемент.Вид                           			=   ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ТолькоПросмотр                 	=   Ложь;
		НовыйЭлемент.Подсказка                      		=   "По каким дням доставляется товар";
		НовыйЭлемент.ОтображениеПодсказки         =   ОтображениеПодсказки.Кнопка;
		НовыйЭлемент.ПоложениеЗаголовка             =   ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ЦветТекстаЗаголовка				=	 Новый Цвет(0,0,255);
	
		
		Если Параметры.Ключ.Пустая() ИЛИ Объект.ТипСтруктурнойЕдиницы<>Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
			НовыйЭлемент.Доступность = Ложь;
		Иначе	
			НовыйЭлемент.Доступность = Истина;
		КонецЕсли;	

		
		 Элементы.ФорматМагазина.Доступность = ?(Объект.саУНФ_КонтролироватьАссортимент, Объект.саУНФ_КонтролироватьАссортимент, Объект.AK_Филиал);
		
		#КонецОбласти
		//***Конец***17.05.2021***МурашкоВ
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКонролироватьАссортимент()

	ПриИзмененииКонтролироватьАссортиментНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКонтролироватьАссортиментНаСервере()

	Элементы.ФорматМагазина.Доступность = Объект.саУНФ_КонтролироватьАссортимент;
	    	
КонецПроцедуры // ПриИзмененииКонтролироватьАссортиментНаСервере()

//***Начало***17.05.2021***МурашкоВ
&НаСервере
Процедура ПриИзмененииФилиалаНаСервере()
    Если Объект.ТипСтруктурнойЕдиницы<>Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Филиал может быть только у структурной единицы с типом склад";
        Сообщение.Поле = "Объект.ТипСтруктурнойЕдиницы";
        Сообщение.Сообщить();
        
        Возврат;
    КонецЕсли; 
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.caУНФ_ФилиалыДляАвтозаказа.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.Филиал.Установить(Объект.Ссылка);
    НаборЗаписей.Прочитать();
    Если НаборЗаписей.Количество()>0 Тогда
        Для каждого Запись Из НаборЗаписей Цикл
            Запись.Включить     =   Объект.AK_Филиал;
        КонецЦикла; 
    ИначеЕсли Объект.AK_Филиал Тогда
        Запись = НаборЗаписей.Добавить();
        Запись.Филиал         =   Объект.Ссылка;
        Запись.Включить       =   Объект.AK_Филиал;
    КонецЕсли; 
    Попытка
        
    Если НаборЗаписей.Количество()>0 Тогда
        НаборЗаписей.Записать();
    КонецЕсли;     
    Если ПривилегированныйРежим() Тогда    
	УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
   Исключение
	   Если ПривилегированныйРежим() Тогда    
		   УстановитьПривилегированныйРежим(Ложь);
	   КонецЕсли;

        Описание=ОписаниеОшибки();

		саУНФ_АтозаказВызовСервера.ЗаписьОшибкиВЖурнал("Установка флажка Филиал",Объект.Ссылка,Объект.Ссылка,Описание);
		
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = Описание;
        Сообщение.Сообщить();
    КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииФилиала(Элемент)
    Если Параметры.Ключ.Пустая() Тогда
        Режим = РежимДиалогаВопрос.ДаНет;
        Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
        ПоказатьВопрос(Оповещение, НСтр("ru = 'Перед установкой филиала нужно записать элемент справочника. Хотите записать?';"
        + " en = 'Do you want to save?'"), Режим, 0);
    Иначе
        ПриИзмененииФилиалаНаСервере();
    КонецЕсли; 
    
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
        Элементы.AK_Филиал.Доступность = Истина;
        Записать();
        ПриИзмененииФилиалаНаСервере();
    Иначе
        Элементы.AK_Филиал.Доступность = Ложь;
    КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура саУНФ_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	Если ТекущийОбъект.ТипСтруктурнойЕдиницы=Перечисления.ТипыСтруктурныхЕдиниц.Склад Тогда
        ЭтаФорма.Элементы.AK_Филиал.Доступность = Истина;
    КонецЕсли; 

КонецПроцедуры

//***Конец***17.05.2021***МурашкоВ