
&НаСервере
Процедура саУНФ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
		ПолеВвода = Элементы.Добавить(
				"СтруктурнаяЕдиница",
				Тип("ПолеФормы"),
				ЭтаФорма.Элементы["ГруппаПрочие"]);
				
		ПолеВвода.Заголовок = "Структурная единица";
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ЦветТекстаЗаголовка = Новый Цвет(0,0,255);
		ПолеВвода.ПутьКДанным = "Объект.саУНФ_СтруктурнаяЕдиница";
		Элементы.СтруктурнаяЕдиница.Доступность = ИСТИНА;
		
		ГруппаФормы = Элементы.ГруппаПрочие;

		НовыйЭлемент = Элементы.Добавить("НаправлениеДоставки", Тип("ПолеФормы"), ГруппаФормы);
		НовыйЭлемент.ПутьКДанным                    		=   "Объект.НаправлениеДоставки";
		НовыйЭлемент.Вид                           				=   ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ТолькоПросмотр                 	=   Ложь;
		НовыйЭлемент.Подсказка                      			=   "Логистическое направление доставки";
		НовыйЭлемент.ОтображениеПодсказки       	=   ОтображениеПодсказки.Кнопка;
		НовыйЭлемент.ПоложениеЗаголовка             =   ПоложениеЗаголовкаЭлементаФормы.Лево;
		НовыйЭлемент.ЦветТекстаЗаголовка			=	 Новый Цвет(0,0,255);

		// Создадим команду
		Команда		= ЭтаФорма.Команды.Добавить("ДополнительныеАдреса");
		Команда.Действие	= "ДополнительныеАдреса";
		
		// Создадим кнопку и привяжем к ней команду
		Кнопка		= ЭтаФорма.Элементы.Добавить("ДополнительныеАдреса", Тип("КнопкаФормы"), ЭтаФорма.Элементы.КонтактнаяИнформация);
		Кнопка.Заголовок	= "Еще один адрес доставки";
		Кнопка.ИмяКоманды	= "ДополнительныеАдреса";
		
		Если ЗначениеЗаполнено(Параметры.Ключ)  Тогда
		      Элементы.ФормаЗаполнитьРеквизитыПоДаннымЕГР.Видимость=Ложь;
		Иначе	
		      Элементы.ФормаЗаполнитьРеквизитыПоДаннымЕГР.Заголовок="Заполнить по УНП" ;
		КонецЕсли; 
		Если Объект.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ЮридическоеЛицо ИЛИ
			Объект.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ИндивидуальныйПредприниматель Тогда
		    ГруппаФормы    =  Элементы.КомандыВажно;
			// Создадим команду
			Команда		= ЭтаФорма.Команды.Добавить("Проверен");
			Команда.Действие	= "УстановитьПроверен";
			
			// Создадим кнопку и привяжем к ней команду
			Кнопка		= ЭтаФорма.Элементы.Добавить("Проверен", Тип("КнопкаФормы"), ГруппаФормы);
			
			Кнопка.Заголовок	= "Проверен";
			
			Кнопка.ИмяКоманды	= "Проверен";
			ЦветКнопкиПроверен();

			ГруппаФормы    =  Элементы.ЮридическиеДанные;
			
			НовыйЭлемент = Элементы.Добавить("ID_ЛК", Тип("ПолеФормы"), ГруппаФормы);
			НовыйЭлемент.ПутьКДанным                    			=   "Объект.ID_ЛК";
			НовыйЭлемент.Вид                           					=   ВидПоляФормы.ПолеНадписи;
			НовыйЭлемент.ПоложениеЗаголовка             		=   ПоложениеЗаголовкаЭлементаФормы.Лево;
			НовыйЭлемент.ЦветТекстаЗаголовка						=	 Новый Цвет(0,0,255);
            НовыйЭлемент.Заголовок										=	"Личный кабинет";
			
			
			ГруппаФормы    =  Элементы.ГруппаПрочие;
			НовыйЭлемент = Элементы.Добавить("ФИОДиректора", Тип("ПолеФормы"), ГруппаФормы);
			НовыйЭлемент.ПутьКДанным                    			=   	"Объект.ФИОДиректора";
			НовыйЭлемент.Вид                           					=    	ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.ОтметкаНезаполненного 				= 		Истина;
			НовыйЭлемент.ПоложениеЗаголовка             		=   	ПоложениеЗаголовкаЭлементаФормы.Лево;
			НовыйЭлемент.ЦветТекстаЗаголовка						=	 	Новый Цвет(0,0,255);
			НовыйЭлемент.Заголовок										=		"ФИО Директора";

			НовыйЭлемент = Элементы.Добавить("Филиал", Тип("ПолеФормы"), ГруппаФормы);
			НовыйЭлемент.ПутьКДанным                    			=   	"Объект.Филиал";
			НовыйЭлемент.Вид                           					=    	ВидПоляФормы.ПолеФлажка;
			НовыйЭлемент.ПоложениеЗаголовка             		=   	ПоложениеЗаголовкаЭлементаФормы.Лево;
			НовыйЭлемент.ЦветТекстаЗаголовка						=	 	Новый Цвет(0,0,255);
			НовыйЭлемент.Заголовок										=		"Филиал";

		КонецЕсли; 
КонецПроцедуры


&НаСервере
Процедура ЦветКнопкиПроверен()
	Если Объект.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ЮридическоеЛицо ИЛИ
		Объект.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ИндивидуальныйПредприниматель Тогда
		
		Если ЭтотОбъект.Объект.Проверен Тогда
			Элементы.Проверен.ЦветФона = WebЦвета.БледноЗеленый;	
			Элементы.Проверен.Заголовок = "Проверен";

		Иначе
			Элементы.Проверен.ЦветФона = WebЦвета.Серый;	
			Элементы.Проверен.Заголовок = "Не проверен";
		КонецЕсли;
	КонецЕсли; 
		  
КонецПроцедуры


&НаКлиенте
Процедура УстановитьПроверен()
	Если  НЕ ЗначениеЗаполнено(ЭтотОбъект.Объект.ФИОДиректора) Тогда
		ЭтотОбъект.Объект.Проверен = Ложь;
		ЦветКнопкиПроверен(); 
		Модифицированность=Истина;
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Введите ФИО директора");
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Объект.Проверен = НЕ   ЭтотОбъект.Объект.Проверен;
	 ЦветКнопкиПроверен(); 
	 Модифицированность=Истина;
	 
КонецПроцедуры
 

&НаКлиенте
Процедура ДополнительныеАдреса(Команда)
	
    ПараметрыФормы = Новый Структура("Контрагент",Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.саУНФ_ДополнительнаяКонтактнаяИнформация.Форма.ФормаДобавленияАдреса",ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
АСИНХ Функция ЗапросУНП()
	Перем НовыйИНН;
	Результат = Ждать ВвестиСтрокуАсинх(НовыйИНН,"Введите УНП",9,Ложь);  
	//  	     ТекстВопроса = "Адрес введен корректно. Хотите ввести другой адрес?";
	//Результат = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	//Если Результат = Неопределено Тогда
	//         Возврат Ложь;
	//КонецЕсли; 
	Если Результат = Неопределено ИЛИ Результат ="" ИЛИ СтрДлина(Результат)<>9 Тогда
		  ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'УНП должен содержать 9 цфр.'"),, ,, );
		   Возврат Ложь;
	КонецЕсли;

	Проверка = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Результат);
	Если Не Проверка Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'УНП должен содержать только цифры.'"),, ,, );
		Возврат Ложь;
	КонецЕсли;
		
	Ответ=ПолучитьДанныеКонтрагентаИзКартотеки(Результат);	
	Если ТипЗнч(Ответ)=Тип("Структура") Тогда
		 ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Такой контагент уже есть в базе.Вот он.'"),, ,, );
		 ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта",Ответ);
		 Модифицированность=Ложь;
	     Закрыть();
	КонецЕсли;
КонецФункции // ()
	   

&НаСервере
Функция ПолучитьДанныеКонтрагентаИзКартотеки(НовыйИНН)
Отказ=Ложь;

  ЕстьКонтрагент= саУНФ_Bitrix.ПроверитьСуществуетЛиКонтрагентВБазе(НовыйИНН);
  Если ТипЗнч(ЕстьКонтрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
           ПараметрыФормы = Новый Структура("Ключ",ЕстьКонтрагент);
		   Возврат  ПараметрыФормы;
  КонецЕсли;



ДанныеКонтрагента=саУНФ_Bitrix.ОбработатьКонтрагентаПоИНН(НовыйИНН);
    Если  ДанныеКонтрагента = Неопределено ИЛИ НЕ ТипЗнч(ДанныеКонтрагента)=Тип("Структура") Тогда
		   ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Запрос не удался. Попробуйте позже.'"),, ,, Отказ);
		   Возврат Ложь;
	КонецЕсли; 
	Если НЕ ДанныеКонтрагента.Свойство("success") ИЛИ НЕ ДанныеКонтрагента.Свойство("data")Тогда
	         ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Запрос не удался. Попробуйте позже.'"),, ,, Отказ);
			 Возврат Ложь;
	КонецЕсли;  
	Если НЕ ДанныеКонтрагента.success Тогда
	         ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Запрос не удался. Попробуйте позже.'"),, ,, Отказ);
			 Если ДанныеКонтрагента.Свойство("errors") Тогда
				      Если ТипЗнч(ДанныеКонтрагента.errors)=Тип("Массив") Тогда
					          Если ДанныеКонтрагента.errors.Количество()>0  Тогда
							          текстСообщения =  СОКРЛП(ДанныеКонтрагента.errors[0]);
							  	      ОбщегоНазначения.СообщитьПользователю(НСтр("ru = '"+текстСообщения+"'"),, ,,Отказ );
							           Возврат Ложь;
							  КонецЕсли; 
					  КонецЕсли; 
			 КонецЕсли;
		Возврат Ложь;
   КонецЕсли;
	
	
	Если ТипЗнч(ДанныеКонтрагента.data) = Тип("Структура") Тогда
		Data = ДанныеКонтрагента.data;
		//УНП
		Если Data.Свойство("unp") Тогда
		         Если СокрЛП(Data.unp)="" Тогда
				      ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Контрагента с УНП "+НовыйИНН+" не существует'"),, ,, Отказ);
                      Возврат Ложь;
				 КонецЕсли; 
		Иначе  	
		     ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Контрагента с УНП "+НовыйИНН+" не существует'"),, ,, Отказ);
              Возврат Ложь;
		КонецЕсли; 
		 //Действующий
		 Если Data.Свойство("status_mns")  Тогда
			   Если СокрЛП(Data.status_mns)<>"Действующий" Тогда
				      ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Контрагента с УНП "+НовыйИНН+" не действующий'"),, ,, Отказ);
                      Возврат Ложь;
				 КонецЕсли; 
		 Иначе  	
		     ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Контрагента с УНП "+НовыйИНН+" не действующий'"),, ,, Отказ);
              Возврат Ложь;
		 КонецЕсли; 
		 
		 
		 Объект_ИНН = СтрЗаменить(СокрЛП(Data.unp)," ","");
		 Объект.ИНН =СтрЗаменить(Объект_ИНН,Символы.НПП,"");
		 Если Data.Свойство("name")  Тогда
			    Объект.Наименование = Data.name;
		 КонецЕсли;
		 Если Data.Свойство("name")  Тогда
			    Объект.НаименованиеПолное = Data.name;
		КонецЕсли;
		Если Data.Свойство("short_name")  Тогда
			    Объект.Наименование = Data.short_name;
		 КонецЕсли;
		 Если Data.Свойство("address")  Тогда
			 ЗаполнитьАдрес(Data.address);
		 КонецЕсли; 
				
	 Иначе
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Запрос не удался. Попробуйте позже.'"),, ,, Отказ);
	КонецЕсли; 
	
		
	
	Возврат Истина;
КонецФункции // ()

&НаСервере
Функция ПроверитьЭтоНовый()
     Если ЗначениеЗаполнено(Параметры.Ключ) Тогда
	         Возврат Ложь;
	 Иначе	
	        Возврат Истина;
	 КонецЕсли; 
КонецФункции

&НаСервере
Функция ЗаполнитьАдрес(address)
	ЗначениеКИ=УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(address, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	ЗначениеКИ=СтрЗаменить(ЗначениеКИ,"Россия","Беларусь");
	
	ДанныеЗаполненияКИ = Новый Структура("Представление,Комментарий,Значение",address,,ЗначениеКИ);
	
	
	КонтактнаяИнформацияУНФ.ЗаполнитьЗначениеКонтактнойИнформации(
	ЭтотОбъект,
	Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента,
	ДанныеЗаполненияКИ,
	Истина
	);

КонецФункции


&НаКлиенте
Процедура саУНФ_ЗаполнитьРеквизитыПоДаннымЕГРВместо(Команда)
	Если НЕ ПроверитьЭтоНовый() Тогда
	    ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Только для новых контрагентов.'"),, ,, );
	Иначе
		НовыйИНН=ЗапросУНП();
	КонецЕсли; 
	
КонецПроцедуры


&НаСервере
&Вместо("ПроверитьЗаполнениеКонтактныхЛиц")
Процедура саУНФ_ПроверитьЗаполнениеКонтактныхЛиц2(Отказ)
	Если НЕ Объект.Недействителен Тогда
	     ПродолжитьВызов(Отказ);
	КонецЕсли; 
	
	ОМ = ОбщегоНазначения.ОбщийМодуль("саУНФ_ОбщийМодуль");
	Если Не ОМ=Неопределено Тогда
		НеПроверятьКонтрагента = ОМ.ЗаписьКонтрагентаБезПроверки();
		Если НеПроверятьКонтрагента Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
&Вместо("ПроверитьЗаполнениеКонтактнойИнформацииКонтактныхЛиц")
Процедура саУНФ_ПроверитьЗаполнениеКонтактнойИнформацииКонтактныхЛиц(Отказ)
	Если НЕ Объект.Недействителен Тогда
		ПродолжитьВызов(Отказ);
	КонецЕсли;
	
	ОМ = ОбщегоНазначения.ОбщийМодуль("саУНФ_ОбщийМодуль");
	Если Не ОМ=Неопределено Тогда
		НеПроверятьКонтрагента = ОМ.ЗаписьКонтрагентаБезПроверки();
		Если НеПроверятьКонтрагента Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры

&НаСервере
&Вместо("ПроверитьЗаполнениеОбязательныхРеквизитов")
Процедура саУНФ_ПроверитьЗаполнениеОбязательныхРеквизитов(Отказ)
	Если НЕ Объект.Недействителен Тогда
		ПродолжитьВызов(Отказ);
	КонецЕсли;
	
	ОМ = ОбщегоНазначения.ОбщийМодуль("саУНФ_ОбщийМодуль");
	Если Не ОМ=Неопределено Тогда
		НеПроверятьКонтрагента = ОМ.ЗаписьКонтрагентаБезПроверки();
		Если НеПроверятьКонтрагента Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ПослеЗаписиПосле(ПараметрыЗаписи)
	//Вставить содержимое обработчика
КонецПроцедуры





