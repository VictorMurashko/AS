 Функция КонтрагентЯвляетсяГоловным(КонтрагентСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонтрагентСсылка", КонтрагентСсылка);
	Запрос.Текст = "Выбрать Первые 1 Истина Из Справочник.Контрагенты КАК СпрКонтрагенты Где СпрКонтрагенты.ГоловнойКонтрагент = &КонтрагентСсылка";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	ЯвляетсяГоловным = НЕ РезультатЗапроса.Пустой();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ЯвляетсяГоловным
	
КонецФункции



&После("ПередЗаписью")
Процедура саУНФ_ПередЗаписью2(Отказ)
	Если ЭтотОбъект.ЭтоГруппа Тогда
	 Возврат;
	КонецЕсли; 
	Если  ЗначениеЗаполнено(ЭтотОбъект.Недействителен)И ЭтотОбъект.Недействителен  Тогда
      Возврат;
    КонецЕсли;

  
	ТаблицаКИ=УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ЭтотОбъект,Справочники.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета,,Ложь);
	
	ОМ_УА = ОбщегоНазначения.ОбщийМодуль("саУНФ_Bitrix");
	Если НЕ ОМ_УА =Неопределено Тогда
		Если ТипЗнч(ТаблицаКИ) = Тип("ТаблицаЗначений") Тогда
			Если ТаблицаКИ.Количество() > 0 Тогда
				ТекЗапись = ТаблицаКИ[0];
				АдресВСвободнойФорме = Истина;
				Если ЛЕВ(СОКРЛП(ТекЗапись.Значение),1)="{" Тогда
					АдресВСвободнойФорме = УправлениеКонтактнойИнформацией.АдресВведенВСвободнойФорме(ТекЗапись.Значение);
					Если НЕ АдресВСвободнойФорме И ЗначениеЗаполнено(ТекЗапись.Представление) Тогда
						ЗаписьGEOКоординаты=ОМ_УА.ЗапросКоординатПоАдресу(ТекЗапись.Представление);
						Если ЗначениеЗаполнено(ЗаписьGEOКоординаты) Тогда
							GEOКоординаты = ЗаписьGEOКоординаты;
						КонецЕсли;
					КонецЕсли;    
				КонецЕсли; 
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;

	Для каждого СтрКИ Из ЭтотОбъект.КонтактнаяИнформация Цикл
		Если НЕ ЗначениеЗаполнено(СтрКИ.id_adress) Тогда
			СтрКИ.id_adress = Новый УникальныйИдентификатор();
		КонецЕсли;
	КонецЦикла; 
		
	
	Если ЗначениеЗаполнено(ИНН) Тогда
		ИНН =СОКРЛП(ИНН);
		
		Если СтранаРегистрации=Справочники.СтраныМира.ПустаяСсылка() ИЛИ 
			СтранаРегистрации=Справочники.СтраныМира.Россия ИЛИ
			СтранаРегистрации.Код ="112" Тогда
			
			
			
			Результат = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ИНН);
			Если  Не Результат Тогда
				ОбщегоНазначения.СообщитьПользователю("В УНП должны быть только цифры");
				Отказ = Истина;
			КонецЕсли; 
			
			Если  СтранаРегистрации=Справочники.СтраныМира.Россия Тогда
				Если  СтрДлина(ИНН)<>10 Тогда
					ОбщегоНазначения.СообщитьПользователю("В Российском ИНН должны быть 10 цифр");
					Отказ = Истина;
				КонецЕсли;
			Иначе
				Если  СтрДлина(ИНН)<>9 Тогда
					ОбщегоНазначения.СообщитьПользователю("В УНП должны быть 9 цифр");
					Отказ = Истина;
				КонецЕсли;	
			КонецЕсли;
			
			
			Если  ЭтоНовый() Тогда
			ЭтоГоловняк=Ложь;	
			Иначе	
			ЭтоГоловняк=КонтрагентЯвляетсяГоловным(Ссылка);
			КонецЕсли;
			
			Если НЕ ЭтоГоловняк Тогда
				
				Если  ЗначениеЗаполнено(ГоловнойКонтрагент) Тогда
					СсыльНаГоловняка =   ГоловнойКонтрагент;
				Иначе	
					СсыльНаГоловняка = Неопределено;
				КонецЕсли; 	
				
				Если  ЭтоНовый() Тогда
					ЕстьКонтрагент= саУНФ_Bitrix.ПроверитьСуществуетЛиКонтрагентВБазе(ИНН,СсыльНаГоловняка);
				Иначе	
					ЕстьКонтрагент= саУНФ_Bitrix.ПроверитьСуществуетЛиКонтрагентВБазе(ИНН,СсыльНаГоловняка,Ссылка);
				КонецЕсли; 
				
				Если НЕ ЕстьКонтрагент = Неопределено Тогда
					ОбщегоНазначения.СообщитьПользователю("Контрагент с УНП " + СТРОКА(ИНН)+" уже есть в базе");
					Отказ = Истина;
				КонецЕсли; 
				
			КонецЕсли; 	
				
	КонецЕсли; 
		
	КонецЕсли; 	
КонецПроцедуры

&Перед("ОбработкаПроверкиЗаполнения")
Процедура саУНФ_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если  Недействителен Тогда
            ПроверяемыеРеквизиты.Очистить();
	КонецЕсли; 
КонецПроцедуры

&После("ПриЗаписи")
Процедура саУНФ_ПриЗаписи(Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры
