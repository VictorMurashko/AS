&НаСервере
Процедура ПользовательПриИзмененииНаСервере()
	Отчет.ИмяПользователя = Отчет.Пользователь.ИдентификаторПользователяИБ;
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ПользовательПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Функция ДобавитьПраваСправочник(НазванияМетаданных)
	Массив = Новый Массив();
	Массив.Добавить("Чтение");	
	Массив.Добавить("Просмотр");
	Массив.Добавить("Изменение");
	Массив.Добавить("Редактирование");
	
	
	Если НазванияМетаданных= "РегистрыСведений" ИЛИ НазванияМетаданных= "РегистрыНакопления"  Тогда
		Массив.Добавить("УправлениеИтогами");
	ИначеЕсли  НазванияМетаданных= "Справочники" ИЛИ НазванияМетаданных= "Документы"  Тогда
		Массив.Добавить("Добавление");
		Массив.Добавить("Удаление");
		Массив.Добавить("ВводПоСтроке");
		
		Массив.Добавить("ИнтерактивноеДобавление");
		Массив.Добавить("ИнтерактивнаяПометкаУдаления");
		Массив.Добавить("ИнтерактивноеСнятиеПометкиУдаления");
		Массив.Добавить("ИнтерактивноеУдаление");
		Массив.Добавить("ИнтерактивноеУдалениеПомеченных");
	КонецЕсли;
	
	Если  НазванияМетаданных= "Документы"  Тогда
		Массив.Добавить("Проведение");
		Массив.Добавить("ОтменаПроведения");
		Массив.Добавить("ИнтерактивноеПроведение");
		Массив.Добавить("ИнтерактивноеПроведениеНеОперативное");
		Массив.Добавить("ИнтерактивнаяОтменаПроведения");
		Массив.Добавить("ИнтерактивноеИзменениеПроведенных");
	КонецЕсли;
	
	Возврат Массив;
КонецФункции // ()

&НаСервере
Функция ДобавитьМетаданные()
	Массив = Новый Массив();
	Массив.Добавить("Справочники");	
	Массив.Добавить("Документы");
	Массив.Добавить("РегистрыСведений");
	Массив.Добавить("РегистрыНакопления");
	
	Возврат Массив;
КонецФункции // ()

Функция ВыводДерева(Пользователь,МассивПрав,ОбъектМетаданных,ДеревоРек)
	
	СоответствиеРолей = Новый Соответствие();
	Для Каждого Роль ИЗ Пользователь.Роли Цикл
		
		СтруктураПрав = Новый Структура();
		
		Для каждого СтрокаМ Из МассивПрав Цикл
			Попытка
				ЕстьПраво=ПравоДоступа(СтрокаМ, ОбъектМетаданных, Роль);
				Если ЕстьПраво Тогда
					СтруктураПрав.Вставить(СтрокаМ,ЕстьПраво);
				КонецЕсли; 
			Исключение
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрокаМ +" не найдено право "+ ОбъектМетаданных.Имя;
				Сообщение.Сообщить();
			КонецПопытки;
		КонецЦикла; 
		
		Если СтруктураПрав.Количество()>0 Тогда
			СоответствиеРолей.Вставить(Роль.Имя,СтруктураПрав);			
		КонецЕсли; 
		
	КонецЦикла;
	//добавляем пользователя
	Если  СоответствиеРолей.Количество()>0 Тогда
		ГруппаПользователи = ДеревоРек.Строки.Добавить();
		ГруппаПользователи.ЭлементДерева = Строка(Пользователь);
		
		Для каждого СтрСоот Из СоответствиеРолей  Цикл
			ГруппаРоли =  ГруппаПользователи.Строки.Добавить();
			ГруппаРоли.ЭлементДерева =  СтрСоот.Ключ;
			Для каждого СТрСТр Из СтрСоот.Значение Цикл
				ГруппаРоли[СТрСТр.Ключ]  = СТрСТр.Значение;
			КонецЦикла; 
			
			
		КонецЦикла; 
		
	КонецЕсли;
	
	
	
КонецФункции // ()


&НаСервере
Процедура ПраваНаСервере()
	ДеревоРек = РеквизитФормыВЗначение("ДеревоПрав");
	ДеревоРек.Строки.Очистить();
	
	
	ПользователиБД = ПользователиИнформационнойБазы.ПолучитьПользователей(); 
	
	
	ОбъектМетаданных=Метаданные[СписокМетаданных].Найти(СписокОбъектовМетаданных);
	
	МассивПрав=ДобавитьПраваСправочник(СписокМетаданных);
	
	Если ЗначениеЗаполнено(Отчет.Пользователь) Тогда
		Пользователь = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Отчет.Пользователь.ИдентификаторПользователяИБ);
		ВыводДерева(Пользователь,МассивПрав,ОбъектМетаданных,ДеревоРек);
	Иначе
		Для каждого Пользователь Из ПользователиБД  Цикл
			ВыводДерева(Пользователь,МассивПрав,ОбъектМетаданных,ДеревоРек);
		КонецЦикла;	
	КонецЕсли; 
	
		
	ЗначениеВРеквизитФормы(ДеревоРек,"ДеревоПрав");
	
	
КонецПроцедуры

&НаКлиенте
Процедура Права(Команда)
	ПраваНаСервере();
КонецПроцедуры



Процедура ПолучитьСписокОбъектовМетаданных()
	Элементы.СписокОбъектовМетаданных.СписокВыбора.Очистить();	
	ОбъектыМетаданных=Метаданные[СписокМетаданных] ;
	Для каждого ОбъектМетаданных Из ОбъектыМетаданных  Цикл
		Элементы.СписокОбъектовМетаданных.СписокВыбора.Добавить(ОбъектМетаданных.Имя);
	КонецЦикла;
	СписокОбъектовМетаданных =  Элементы.СписокОбъектовМетаданных.СписокВыбора[0];
	
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	МассивМета = ДобавитьМетаданные();
	Для каждого СтрМас  Из МассивМета Цикл
		Элементы.СписокМетаданных.СписокВыбора.Добавить(СтрМас);
	КонецЦикла; 
	
	СписокМетаданных =  Элементы.СписокМетаданных.СписокВыбора[0];
	ПолучитьСписокОбъектовМетаданных() ;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМетаданныхПриИзменении(Элемент)
	ПолучитьСписокОбъектовМетаданных();
КонецПроцедуры

&НаСервере
Функция ПраваПользователяНаСервере()
	ТабДок = Новый ТабличныйДокумент;
	ОтчетМен =Отчеты.саУНФ_СписокРолейПользователя ;
	Возврат ОтчетМен.Печать(ТабДок,Отчет.Пользователь);
	
КонецФункции

&НаКлиенте
Процедура ПраваПользователя(Команда)
	ТабДок =ПраваПользователяНаСервере();
	ТабДок.Показать();
КонецПроцедуры



//Использование (Use) - использование;
//Администрирование (Administration) - право на выполнение административных действий над всей информационной базой и редактирование списка пользователей (право для конфигурации); требует наличия права "АдминистрированиеДанных";
//АдминистрированиеДанных (DataAdministration) - право на административные действия над данными;
//МонопольныйРежим (ExclusiveMode) - использование монопольного режима;
//АктивныеПользователи (ActiveUsers) - просмотр списка активных пользователей;
//ЖурналРегистрации (EventLog) - журнал регистрации;
//ВнешнееСоединение (ExternalConnection) - внешнее соединение;
//Automation (Automation) - использование automation;
//ИнтерактивноеОткрытиеВнешнихОбработок (InteractiveOpenExtDataProcessors) - интерактивное открытие внешних обработок;
//ИнтерактивноеОткрытиеВнешнихОтчетов (InteractiveOpenExtReports) - интерактивное открытие внешних отчетов;
//Получение (Get) - получение значения, не хранящегося в базе данных;
//Установка (Set) - установка значения, не сохраняемого в базе данных;
//ИнтерактивнаяАктивация (InteractiveActivate) - интерактивная активация;
//Старт (Start) - старт бизнес-процесса;
//ИнтерактивныйСтарт (InteractiveStart) - интерактивный старт бизнес-процесса;
//Выполнение (Execute) - выполнение задачи;
//ИнтерактивноеВыполнение (InteractiveExecute) - интерактивное выполнение задачи;
//Вывод (Output) - вывод на печать, запись и копирование в буфер обмена;
//ОбновлениеКонфигурацииБазыДанных (UpdateDataBaseConfiguration) - обновление конфигурации базы данных;
//ТонкийКлиент (ThinClient) - право запуска тонкого клиента;
//ВебКлиент (WebClient) - право запуска веб-клиента;
//ТолстыйКлиент (ThickClient) - право запуска толстого клиента;
//РежимВсеФункции (AllFunctionsMode) - право на использования режима "Все функции";
//СохранениеДанныхПользователя (SaveUserData) - право на сохранение данных пользователя (настроек, избранного, истории);
//ИзменениеСтандартнойАутентификации (StandardAuthenticationChange) - пользователь имеет право изменять свои сохраненные параметры стандартной аутентификации внешнего источника данных;
//ИзменениеСтандартнойАутентификацииСеанса (SessionStandardAuthenticationChange) - пользователь имеет право изменять параметры стандартной аутентификации внешнего источника данных для текущего сеанса;
//ИзменениеАутентификацииОССеанса (SessionOSAuthenticationChange) - пользователь имеет право изменять параметры стандартной аутентификации внешнего источника данных для текущего сеанса и текущего пользователя;
//ИнтерактивноеУдалениеПредопределенныхДанных (InteractiveDeletePredefinedData) - интерактивное удаление предопределенных данных;
//ИнтерактивнаяПометкаУдаленияПредопределенныхДанных (InteractiveSetDeletionMarkPredefinedData) - интерактивная пометка предопределенных данных;
//ИнтерактивноеСнятиеПометкиУдаленияПредопределенных (InteractiveClearDeletionMarkPredefinedData) - интерактивное снятие пометки предопределенных данных;
//ИнтерактивноеУдалениеПомеченныхПредопределенныхДан (InteractiveDeleteMarkedPredefinedData) - интерактивное удаление помеченных предопределенных данных;
//АдминистрированиеРасширенийКонфигурации (ConfigurationExtensionsAdministration) - право на администрирование расширений конфигурации (как интерактивно, так и программно) в режиме "1С:Предприятие". В безопасном режиме администрирование расширений невозможно;
//ЧтениеИсторииДанных (ReadDataHistory) - чтение версий данных;
//ПросмотрИсторииДанных (ViewDataHistory) - интерактивный просмотр записей истории данных.
//ЧтениеИсторииОтсутствующихДанных (ReadDataHistoryOfMissingData) - чтение версий отсутствующих данных;
//ИзменениеИсторииДанных (UpdateDataHistory) - изменение версий;
//ИзменениеИсторииОтсутствующихДанных (UpdateDataHistoryOfMissingData) - изменение версий отсутствующих данных;
//ИзменениеНастроекИсторииДанных (UpdateSettingsDataHistory) - изменение настроек истории данных;
//ИзменениеКомментарияИсторииДанных (UpdateDataHistoryVersionComment) - изменение комментария версии истории данных;
//РедактированиеКомментарияВерсииИсторииДанных (EditDataHistoryVersionComment) - интерактивное изменение комментария версии истории данных;
//ПереходНаВерсиюИсторииДанных (SwitchToDataHistoryVersion) - переход на версию истории данных;
//РегистрацияИнформационнойБазыСистемыВзаимодействия (CollaborationSystemInfoBaseRegistration) - регистрация информационной базы в системе взаимодействия.
//МобильныйКлиент (MobileClient) - право запуска мобильного клиента;
//РежимОсновногоОкнаОбычный (MainWindowModeNormal) - запуск клиентского приложения в режиме основного окна "Обычный";
//РежимОсновногоОкнаРабочееМесто (MainWindowModeWorkplace) - запуск клиентского приложения в режиме основного окна "Рабочее место";
//РежимОсновногоОкнаВстроенноеРабочееМесто (MainWindowModeEmbeddedWorkplace) - запуск клиентского приложения в режиме основного окна "Встроенное рабочее место";
//РежимОсновногоОкнаПолноэкранноеРабочееМесто (MainWindowModeFullscreenWorkplace) - запуск клиентского приложения в режиме основного окна "Полноэкранное рабочее место";
//РежимОсновногоОкнаКиоск (MainWindowModeKiosk) - запуск клиентского приложения в режиме основного окна "Киоск".
