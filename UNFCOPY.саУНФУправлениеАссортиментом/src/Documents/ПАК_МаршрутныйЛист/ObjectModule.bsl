#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ОбработчикиСобытий
	
	Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
		ЗаполнениеОбъектовУНФ.ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецПроцедуры
	
	Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		
		Если НЕ ЗначениеЗаполнено(СлужбаДоставки) И НЕ ЗначениеЗаполнено(Курьер)  Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ЭтоДоставкаСобственнымиСилами() Тогда
			ИсключитьРеквизитИзПроверки("СпособОтгрузки", ПроверяемыеРеквизиты);
			ИсключитьРеквизитИзПроверки("Склад", ПроверяемыеРеквизиты);
			ИсключитьРеквизитИзПроверки("АдресОтправки", ПроверяемыеРеквизиты);
		ИначеЕсли ЭтоЗаборКурьеромСлужбыДоставки() Тогда 
			ИсключитьРеквизитИзПроверки("Курьер", ПроверяемыеРеквизиты);
		ИначеЕсли ЭтоСамопривозНаСкладСлужбыДоставки() Тогда 
			ИсключитьРеквизитИзПроверки("Склад", ПроверяемыеРеквизиты);
			ИсключитьРеквизитИзПроверки("АдресОтправки", ПроверяемыеРеквизиты);
		КонецЕсли; 
		
	КонецПроцедуры
	
	Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
		Если Заказы.Количество()=0 Тогда
			ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Укажите отгружаемые заказы'"),
			Ссылка,
			"Заказы",,
			Отказ);
		КонецЕсли; 
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли; 
		
		ОбновитьДанныеЗаказов(Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли; 
		
	КонецПроцедуры
	
	Процедура ОбработкаУдаленияПроведения(Отказ)
		
		ОбновитьДанныеЗаказов(Отказ, Ложь);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли; 
		
	КонецПроцедуры
	
	Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
		Если ОбменДанными.Загрузка Тогда
			Возврат;
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		Если СпособДоставки = Перечисления.СпособыДоставки.Курьер И ЗначениеЗаполнено(ЭтотОбъект.ВодительПосторонний) Тогда
			     ЭтотОбъект.ВодительПосторонний = Справочники.ФизическиеЛица.ПустаяСсылка();
		КонецЕсли;	
		
		Если НЕ СпособДоставки = Перечисления.СпособыДоставки.Курьер И ЗначениеЗаполнено(ЭтотОбъект.Курьер) Тогда
			     ЭтотОбъект.Курьер = Справочники.ФизическиеЛица.ПустаяСсылка();
		КонецЕсли;
		
		Если  НЕ ЗначениеЗаполнено(ЭтотОбъект.ФИОВодителя) Тогда
			
			Если СпособДоставки = Перечисления.СпособыДоставки.Курьер Тогда
				Если  ЗначениеЗаполнено(ЭтотОбъект.Курьер)   Тогда
					ЭтотОбъект.ФИОВодителя = ЭтотОбъект.Курьер.Наименование; 
				КонецЕсли; 
			Иначе
				Если  ЗначениеЗаполнено(ЭтотОбъект.ВодительПосторонний)   Тогда
					ЭтотОбъект.ФИОВодителя = ЭтотОбъект.ВодительПосторонний.Наименование; 
				КонецЕсли; 
			КонецЕсли; 
			
		КонецЕсли;		
		
		СуммаБезНДС   		=	0;
		ОбщийВес        		=	0;
		ОбщийВесЛома   		=	0;
		КоличествоВывозов 	=	0;
		КоличествоТочек		=	0;
		СуммаПеремещенийБезНДС =0;
		
		Для каждого СтрЗаказы Из  Заказы Цикл
			
			
			
			Если ТипЗнч(СтрЗаказы.Заказ) = Тип("ДокументСсылка.ЗаказПокупателя")  Тогда
				СтрЗаказы.Вес  =  СтрЗаказы.Заказ.Вес;
				Если  ПустаяСтрока(СтрЗаказы.Примечание) Тогда
					СтрЗаказы.Примечание = СокрЛП(СтрЗаказы.Заказ.Комментарий) +" " + СокрЛП(СтрЗаказы.Заказ.ДополнительнаяИнформацияПоДоставке);
				КонецЕсли;
				
				КоличествоТочек		=	КоличествоТочек		+	1;	
				ОбщийВес 				=	ОбщийВес				+  СтрЗаказы.Заказ.Вес;
				СуммаБезНДС   		= 	СуммаБезНДС   		+  СтрЗаказы.Заказ.саУНФ_Сумма;
				СтрЗаказы.Сумма   =   СтрЗаказы.Заказ.саУНФ_Сумма;
			ИначеЕсли ТипЗнч(СтрЗаказы.Заказ) = Тип("ДокументСсылка.ЗаявкаНаЛом")  Тогда
                СтрЗаказы.ВесЛома  =  СтрЗаказы.Заказ.Вес;
				Если  ПустаяСтрока(СтрЗаказы.Примечание) Тогда
					СтрЗаказы.Примечание = СокрЛП(СтрЗаказы.Заказ.Комментарий);
				КонецЕсли;
				СтрЗаказы.Сумма   =	0;
				КоличествоВывозов 		=	КоличествоВывозов 	+	1;
				ОбщийВесЛома   			=	ОбщийВесЛома   		+ 	СтрЗаказы.Заказ.Вес;
			ИначеЕсли ТипЗнч(СтрЗаказы.Заказ) = Тип("ДокументСсылка.ПеремещениеЗапасов")  Тогда
	              СтрЗаказы.Вес  =  СтрЗаказы.Заказ.Вес;
				  Если  ПустаяСтрока(СтрЗаказы.Примечание) Тогда
					СтрЗаказы.Примечание = СокрЛП(СтрЗаказы.Заказ.Комментарий);
				КонецЕсли;
				КоличествоТочек		=	КоличествоТочек		+	1;	
				ОбщийВес 			=	ОбщийВес				+  СтрЗаказы.Заказ.Вес;
				СтрЗаказы.Сумма   	=	0;			СтрЗаказы.Сумма   =	0;
				Если ТипЗнч(СтрЗаказы.Заказ.ЗаказСнабжения)=Тип("ДокументСсылка.саУНФ_ЗаказСнабжения")  Тогда
					СтрЗаказы.Сумма   = СтрЗаказы.Заказ.ЗаказСнабжения.Запасы.Итог("Сумма"); 
					СуммаПеремещенийБезНДС = СуммаПеремещенийБезНДС+СтрЗаказы.Сумма;
				КонецЕсли;
             ИначеЕсли СтрЗаказы.Заказ = Неопределено Тогда
				 ОбщийВес 			=	ОбщийВес				+  СтрЗаказы.Вес;
				 ОбщийВесЛома   	=	ОбщийВесЛома   		+ 	СтрЗаказы.ВесЛома;
				 СуммаБезНДС   		= 	СуммаБезНДС   		+  СтрЗаказы.Сумма;
				 
				 КоличествоТочек		=	КоличествоТочек		+	1;
				 Если СтрЗаказы.ВесЛома>0 Тогда
				 КоличествоВывозов 		=	КоличествоВывозов 	+	1;
				 КонецЕсли;						
			КонецЕсли;
			
		КонецЦикла; 
	КонецПроцедуры
	
	Процедура ПриЗаписи(Отказ)
		
		Если ОбменДанными.Загрузка Тогда
			Возврат;
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли; 
		
		УстановитьПривилегированныйРежим(Истина);
		Для каждого СтрокаТабличнойЧасти Из ЭтотОбъект.Заказы Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Заказ) Тогда
				Продолжить;                                                                                                                      
			КонецЕсли; 
			ТекущийЗаказ =  СтрокаТабличнойЧасти.Заказ;
			  Записывать=Ложь;
			  Если ТипЗнч(СтрокаТабличнойЧасти.Заказ) = Тип("ДокументСсылка.ПеремещениеЗапасов")  Тогда
				  Если   НЕ ТекущийЗаказ.Водитель =  ЭтотОбъект.Курьер Тогда
					  Записывать=Истина;
				  КонецЕсли;   
			  Иначе
				  Если НЕ ТекущийЗаказ.Курьер    =  ЭтотОбъект.Курьер Тогда
					  Записывать=Истина;
				  КонецЕсли; 			
			  КонецЕсли;

			
			Если   ЭтоНовый() ИЛИ ТекущийЗаказ.ПАК_МаршрутныйЛист<>ЭтотОбъект.Ссылка ИЛИ ТекущийЗаказ.ФИОВодителя <> ЭтотОбъект.ФИОВодителя 
			ИЛИ Записывать	
				Тогда
				ЗаказОбъект = СтрокаТабличнойЧасти.Заказ.ПолучитьОбъект();
				ЗаказОбъект.ПАК_МаршрутныйЛист 	= 	ЭтотОбъект.Ссылка;
				ЗаказОбъект.ЗонаТариф  						= 	ЭтотОбъект.ЗонаТариф;
				ЗаказОбъект.ТелефонКурьера          		=  ЭтотОбъект.ТелефонКурьера;
				ЗаказОбъект.ДатаЗагрузкиАвтомобиля 	= 	ЭтотОбъект.ДатаЗагрузки;
				ЗаказОбъект.Автомобиль						=	ЭтотОбъект.Автомобиль; 
				ЗаказОбъект.ФИОВодителя                  =  ЭтотОбъект.ФИОВодителя;
				
				Если ТипЗнч(СтрокаТабличнойЧасти.Заказ) = Тип("ДокументСсылка.ПеремещениеЗапасов") Тогда
				        ЗаказОбъект.Водитель                     	=  ЭтотОбъект.Курьер;
					Иначе
				      ЗаказОбъект.Курьер                        	=  ЭтотОбъект.Курьер;
				КонецЕсли;
				      ЗаказОбъект.ВодительПосторонний    =	 ЭтотОбъект.ВодительПосторонний;
				ЗаказОбъект.Записать();
			                                                                                                 
		Иначе	
			  Если СтрокаТабличнойЧасти.Заказ.ДатаЗагрузкиАвтомобиля<>ЭтотОбъект.ДатаЗагрузки  Тогда
			          ЗаказОбъект = СтрокаТабличнойЧасти.Заказ.ПолучитьОбъект();
					  ЗаказОбъект.ДатаЗагрузкиАвтомобиля 	= 	ЭтотОбъект.ДатаЗагрузки;
					  ЗаказОбъект.Записать();
			  КонецЕсли; 
		КонецЕсли; 	
			
		КонецЦикла;
		Если ПривилегированныйРежим() Тогда
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли; 
		
		
				
	КонецПроцедуры
	
	#КонецОбласти
	
	#Область СлужебныеПроцедурыИФункции
	
	Функция ЭтоДоставкаСобственнымиСилами()
		
		Возврат СлужбаДоставки = Справочники.СлужбыДоставки.ДоставкаСобственнымиСилами;
		
	КонецФункции
	
	Функция ЭтоЗаборКурьеромСлужбыДоставки()
		
		Возврат СпособОтгрузки = Перечисления.СпособыОтгрузки.ПередатьКурьеруЕдиногоСклада
		Или СпособОтгрузки = Перечисления.СпособыОтгрузки.ПередатьКурьеруСлужбыДоставки;
		
	КонецФункции
	
	Функция ЭтоСамопривозНаСкладСлужбыДоставки()
		
		Возврат СпособОтгрузки = Перечисления.СпособыОтгрузки.СамостоятельноПривезтиНаЕдиныйСклад
		Или СпособОтгрузки = Перечисления.СпособыОтгрузки.СамостоятельноПривезтиНаСкладСлужбыДоставки;
		
	КонецФункции
	
	Процедура ОбновитьДанныеЗаказов(Отказ, Проведение = Истина)
		
		//Если Отказ Тогда
			Возврат;
		//КонецЕсли;
		
		ОбсужденияЗаказов = Неопределено;
		ДополнительныеСвойства.Свойство("ОбсужденияЗаказов", ОбсужденияЗаказов);
		Если ТипЗнч(ОбсужденияЗаказов)<>Тип("Соответствие") Тогда
			ОбсужденияЗаказов = Новый Соответствие;
		КонецЕсли; 
		
		НесколькоВидовЗаказов = ПолучитьФункциональнуюОпцию("ИспользоватьВидыЗаказовПокупателей");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаЗаказов", Заказы.Выгрузить());
		Запрос.УстановитьПараметр("СлужбаДоставки", СлужбаДоставки);
		Запрос.УстановитьПараметр("Курьер", Курьер);
		Запрос.УстановитьПараметр("Проведен", Проведение);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(ТаблицаЗаказов.Заказ КАК Документ.ЗаказПокупателя) КАК Заказ,
		|	ВЫРАЗИТЬ(ТаблицаЗаказов.РасходнаяНакладная КАК Документ.РасходнаяНакладная) КАК РасходнаяНакладная,
		|	ТаблицаЗаказов.Доставлен КАК Доставлен
		|ПОМЕСТИТЬ ТаблицаЗаказов
		|ИЗ
		|	&ТаблицаЗаказов КАК ТаблицаЗаказов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаЗаказов.Заказ КАК Заказ,
		|	ЗаказПокупателя.ВидЗаказа КАК ВидЗаказа,
		|	ЗаказПокупателя.СостояниеЗаказа КАК СостояниеЗаказа,
		|	ЗаказПокупателя.СлужбаДоставки КАК СлужбаДоставки,
		|	ЗаказПокупателя.Курьер КАК Курьер,
		|	МАКСИМУМ(ТаблицаЗаказов.Доставлен) КАК Доставлен
		|ПОМЕСТИТЬ ЗаказыСвернуто
		|ИЗ
		|	ТаблицаЗаказов КАК ТаблицаЗаказов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|		ПО ТаблицаЗаказов.Заказ = ЗаказПокупателя.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаЗаказов.Заказ,
		|	ЗаказПокупателя.ВидЗаказа,
		|	ЗаказПокупателя.СостояниеЗаказа,
		|	ЗаказПокупателя.СлужбаДоставки,
		|	ЗаказПокупателя.Курьер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаказыСвернуто.Заказ КАК Заказ,
		|	ВЫБОР
		|		КОГДА &Проведен
		|				И ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) = 0
		|				И ЗаказыСвернуто.Доставлен
		|			ТОГДА ЗаказыСвернуто.ВидЗаказа.СостояниеДоставлен
		|		КОГДА &Проведен
		|				И ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) = 0
		|				И НЕ ЗаказыСвернуто.Доставлен
		|			ТОГДА ЗаказыСвернуто.ВидЗаказа.СостояниеОтгружен
		|		КОГДА НЕ &Проведен
		|				ИЛИ ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 0
		|			ТОГДА ЗаказыСвернуто.ВидЗаказа.СостояниеОжидаетОтгрузки
		|	КОНЕЦ КАК НовоеСостояние,
		|	ЗаказыСвернуто.СостояниеЗаказа <> ЕСТЬNULL(ВЫБОР
		|			КОГДА &Проведен
		|					И ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) = 0
		|					И ЗаказыСвернуто.Доставлен
		|				ТОГДА ЗаказыСвернуто.ВидЗаказа.СостояниеДоставлен
		|			КОГДА &Проведен
		|					И ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) = 0
		|					И НЕ ЗаказыСвернуто.Доставлен
		|				ТОГДА ЗаказыСвернуто.ВидЗаказа.СостояниеОтгружен
		|			КОГДА НЕ &Проведен
		|					ИЛИ ЕСТЬNULL(ЗаказыПокупателейОстатки.КоличествоОстаток, 0) > 0
		|				ТОГДА ЗаказыСвернуто.ВидЗаказа.СостояниеОжидаетОтгрузки
		|			ИНАЧЕ ЗаказыСвернуто.СостояниеЗаказа
		|		КОНЕЦ, ЗаказыСвернуто.СостояниеЗаказа) КАК ОбновитьСостояние,
		|	ВЫБОР
		|		КОГДА ЗаказыСвернуто.СлужбаДоставки <> &СлужбаДоставки
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОбновитьСлужбуДоставки,
		|	ВЫБОР
		|		КОГДА ЗаказыСвернуто.Курьер <> &Курьер
		|				И &Курьер <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОбновитьКурьера
		|ПОМЕСТИТЬ Действия
		|ИЗ
		|	ЗаказыСвернуто КАК ЗаказыСвернуто
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
		|				,
		|				ЗаказПокупателя В
		|					(ВЫБРАТЬ
		|						ТаблицаЗаказов.Заказ
		|					ИЗ
		|						ТаблицаЗаказов)) КАК ЗаказыПокупателейОстатки
		|		ПО ЗаказыСвернуто.Заказ = ЗаказыПокупателейОстатки.ЗаказПокупателя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаЗаказов.Заказ КАК Заказ,
		|	ТаблицаЗаказов.РасходнаяНакладная КАК РасходнаяНакладная,
		|	МаршрутныйЛистЗаказы.Ссылка КАК МаршрутныйЛист
		|ИЗ
		|	ТаблицаЗаказов КАК ТаблицаЗаказов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.Заказы КАК МаршрутныйЛистЗаказы
		|		ПО ТаблицаЗаказов.Заказ = МаршрутныйЛистЗаказы.Заказ
		|			И ТаблицаЗаказов.РасходнаяНакладная = МаршрутныйЛистЗаказы.РасходнаяНакладная
		|			И (МаршрутныйЛистЗаказы.Ссылка <> &Ссылка)
		|			И (МаршрутныйЛистЗаказы.Ссылка.Проведен)
		|ГДЕ
		|	НЕ МаршрутныйЛистЗаказы.Ссылка ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Действия.Заказ КАК Заказ,
		|	Действия.НовоеСостояние КАК НовоеСостояние,
		|	Действия.ОбновитьСостояние КАК ОбновитьСостояние,
		|	Действия.ОбновитьСлужбуДоставки КАК ОбновитьСлужбуДоставки,
		|	Действия.ОбновитьКурьера КАК ОбновитьКурьера
		|ИЗ
		|	Действия КАК Действия
		|ГДЕ
		|	(Действия.ОбновитьСлужбуДоставки
		|			ИЛИ Действия.ОбновитьКурьера
		|			ИЛИ Действия.ОбновитьСостояние)";
		Результат = Запрос.ВыполнитьПакет();
		Ошибки = Результат[3].Выбрать();
		Если НЕ Ошибки.Количество()=0 Тогда
			Пока Ошибки.Следующий() Цикл
				ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = '%1 уже отгружен документом %2'"), Ошибки.Заказ, Ошибки.МаршрутныйЛист),
				Ошибки.МаршрутныйЛист,
				"Заказы", ,
				Отказ);
			КонецЦикла; 
			Возврат;
		КонецЕсли; 
		Выборка = Результат[4].Выбрать();
		ВыведенныеВидыЗаказов = Новый Массив;
		Пока Выборка.Следующий() Цикл
			ЗаказОбъект = Выборка.Заказ.ПолучитьОбъект();
			Сообщение = ОбсужденияЗаказов.Получить(Выборка.Заказ);
			// Состояние заказа
			Если Выборка.ОбновитьСостояние Тогда
				Если НЕ ЗначениеЗаполнено(Выборка.НовоеСостояние) Тогда
					// Не настроены состояния заказов
					Если НесколькоВидовЗаказов Тогда
						Если ВыведенныеВидыЗаказов.Найти(ЗаказОбъект.ВидЗаказа)=Неопределено Тогда
							ОбщегоНазначения.СообщитьПользователю(
							СтрШаблон(НСтр("ru = 'Не задано состояние %1 заказа для вида %2'"),
							?(Проведение, НСтр("ru = 'отгрузки'"), НСтр("ru = 'ожидания отгрузки'")),
							ЗаказОбъект.ВидЗаказа),
							ЗаказОбъект.ВидЗаказа,
							?(Проведение, "СостояниеОтгружен", "СостояниеОжидаетОтгрузки"),,
							Отказ);
							ВыведенныеВидыЗаказов.Добавить(ЗаказОбъект.ВидЗаказа);
						КонецЕсли; 
					Иначе
						Если ВыведенныеВидыЗаказов.Найти(Справочники.ВидыЗаказовПокупателей.Основной)=Неопределено Тогда
							ОбщегоНазначения.СообщитьПользователю(
							СтрШаблон(НСтр("ru = 'Не задано состояние %1 заказа'"),
							?(Проведение, НСтр("ru = 'отгрузки'"), НСтр("ru = 'ожидания отгрузки'"))),
							Справочники.ВидыЗаказовПокупателей.Основной,
							?(Проведение, "СостояниеОтгружен", "СостояниеОжидаетОтгрузки"),,
							Отказ);
							ВыведенныеВидыЗаказов.Добавить(Справочники.ВидыЗаказовПокупателей.Основной);
						КонецЕсли; 
					КонецЕсли; 
				Иначе
					Префикс = НСтр("ru = 'Состояние: '");
					ТекстИзменений = ОбсужденияСервер.ДобавитьСообщениеОбИзмененииРеквизита(ЗаказОбъект.СостояниеЗаказа, Выборка.НовоеСостояние);
					ОбсужденияСервер.ДобавитьОписаниеИзменений(Сообщение, ТекстИзменений, Префикс+": ");
					ЗаказОбъект.СостояниеЗаказа = Выборка.НовоеСостояние;
				КонецЕсли;
			КонецЕсли;
			// Служба доставки
			Если Выборка.ОбновитьСлужбуДоставки Тогда
				Префикс = НСтр("ru = 'Служба доставки: '");
				ТекстИзменений = ОбсужденияСервер.ДобавитьСообщениеОбИзмененииРеквизита(ЗаказОбъект.СлужбаДоставки, СлужбаДоставки);
				ОбсужденияСервер.ДобавитьОписаниеИзменений(Сообщение, ТекстИзменений, Префикс+": ");
				ЗаказОбъект.СлужбаДоставки = СлужбаДоставки;
			КонецЕсли;
			// Курьер
			Если Выборка.ОбновитьКурьера Тогда
				Префикс = НСтр("ru = 'Курьер: '");
				ТекстИзменений = ОбсужденияСервер.ДобавитьСообщениеОбИзмененииРеквизита(ЗаказОбъект.Курьер, Курьер);
				ОбсужденияСервер.ДобавитьОписаниеИзменений(Сообщение, ТекстИзменений, Префикс+": ");
				ЗаказОбъект.Курьер = Курьер;
			КонецЕсли;
			Если ЗначениеЗаполнено(Сообщение) Тогда
				ОбсужденияСервер.ДобавитьСообщение(
				Сообщение, 
				Выборка.Заказ,
				, 
				Истина);
				ЗаказОбъект.ДополнительныеСвойства.Вставить("ОбсуждениеЗаписано", Истина);
			КонецЕсли; 
			Попытка
				ЗаказОбъект.Записать(?(ЗаказОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			Исключение
				Отказ = Истина;
			КонецПопытки; 
		КонецЦикла; 
		
	КонецПроцедуры
	
	Процедура ИсключитьРеквизитИзПроверки(ИмяРеквизита, ПроверяемыеРеквизиты)
		
		Индекс = ПроверяемыеРеквизиты.Найти(ИмяРеквизита);
		Если Индекс<>Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(Индекс)
		КонецЕсли; 
		
	КонецПроцедуры
	
	Процедура УстановитьСостояниеЗаказа(Заказ, НовоеСостояние)
		
		ТекстОшибки = НСтр("ru = 'Не удалось изменить состояние заказа заказа %1: %2'", ОбщегоНазначения.КодОсновногоЯзыка());
		Если Заказ.СостояниеЗаказа = НовоеСостояние Тогда
			Возврат;
		КонецЕсли; 
		ЗаказОбъект = Заказ.ПолучитьОбъект();
		ЗаказОбъект.СостояниеЗаказа = НовоеСостояние;
		НачатьТранзакцию();
		Попытка
			ЗаказОбъект.Записать();
		Исключение
			ОтменитьТранзакцию();
			Информация = ИнформацияОбОшибке();
			ТекстОшибки = СтрШаблон(ТекстОшибки, ЗаказОбъект.Ссылка, ПодробноеПредставлениеОшибки(Информация));
			ИмяСобытия = НСтр("ru = 'Продажи'", ОбщегоНазначения.КодОсновногоЯзыка());
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, ЗаказОбъект.Метаданные(), ЗаказОбъект.Ссылка, ТекстОшибки);
		КонецПопытки; 
		ЗафиксироватьТранзакцию();
		
	КонецПроцедуры
	
	Функция СостояниеОжидаетОтгрузки(Заказ, Отказ)
		
		НесколькоВидовЗаказов = ПолучитьФункциональнуюОпцию("ИспользоватьВидыЗаказовПокупателей");
		Если НесколькоВидовЗаказов Тогда
			ВидЗаказа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Заказ, "ВидЗаказа", Истина);
		Иначе
			ВидЗаказа = Справочники.ВидыЗаказовПокупателей.Основной;
		КонецЕсли;
		Если ВидЗаказа=Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Нарушение права доступа.'"), Заказ,,,
			Отказ);
			Возврат Неопределено;
		КонецЕсли; 
		СостояниеЗаказа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидЗаказа, "СостояниеОжидаетОтгрузки", Истина);
		
		Если НЕ ЗначениеЗаполнено(СостояниеЗаказа) Тогда
			Если НесколькоВидовЗаказов Тогда
				ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(НСтр("ru = 'Не задано состояние готовых к отгрузке заказов для вида %1'"),
				ВидЗаказа),
				ВидЗаказа,
				"СостояниеОжидаетОтгрузки",,
				Отказ);
			Иначе
				ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Не задано состояние готовых к отгрузке заказов'"),
				ВидЗаказа,
				"СостояниеОжидаетОтгрузки",,
				Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Возврат СостояниеЗаказа;
		
	КонецФункции

	Процедура ПриКопировании(ОбъектКопирования)
		ЭтотОбъект.Курьер = Справочники.ФизическиеЛица.ПустаяСсылка();
		ЭтотОбъект.ДополнительнаяИнформация ="";
		ЭтотОбъект.Автомобиль  = Справочники.ТранспортныеСредства.ПустаяСсылка();
		ЭтотОбъект.ЗонаТариф    = Справочники.ЗоныТарифыДоставки.ПустаяСсылка();
		ЭтотОбъект.СпособДоставки  = Перечисления.СпособыДоставки.Курьер;
		ЭтотОбъект.СпособОтгрузки = Перечисления.СпособыОтгрузки.ПередатьКурьеруЕдиногоСклада;
		ЭтотОбъект.Склад = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
		ЭтотОбъект.АдресОтправки ="";
		ЭтотОбъект.АдресОтправкиЗначенияПолей  ="";
		ЭтотОбъект.Состояние  = Перечисления.СостояниеМаршрута.ВРаботе;
		ЭтотОбъект.ДатаЗагрузки   = Дата(1,1,1);
		ЭтотОбъект.ТелефонКурьера  = "";
		ЭтотОбъект.ФИОВодителя = "";
	КонецПроцедуры
	
	#КонецОбласти 
	
#КонецЕсли