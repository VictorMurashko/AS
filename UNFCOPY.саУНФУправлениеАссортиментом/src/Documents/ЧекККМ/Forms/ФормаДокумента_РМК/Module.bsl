&НаСервере
Функция ПроверитьИнкасацию()
	Результат=саУНФ_ДеньгиКассы.ОстаткиВКассах(Объект.Дата,Объект.КассаККМ);
	Если  Результат.Пустой() Тогда
		Возврат 0;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Сумма;
	КонецЕсли; 
	
КонецФункции // ()




&НаКлиенте
&После("ОткрытьКассовуюСмену")
Процедура саУНФ_ОткрытьКассовуюСмену()
	СуммаИнкасации=ПроверитьИнкасацию();
	Если СуммаИнкасации>0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо сдать в банк деньги в сумме "+Строка(СуммаИнкасации);
		Сообщение.Сообщить();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция НастройкиОМА()
	СписокНастроек =Неопределено;
	ОМ= ОбщегоНазначения.ОбщийМодуль("саУНФ_РаботаСОМА");
	Если  НЕ ОМ=Неопределено Тогда
		СписокНастроек = ОМ.ПолучитьСтруктураНастроекОМА();
	КонецЕсли;
	Возврат СписокНастроек;
КонецФункции // ()
 
&НаСервере
Функция ПроверитьЗаказаОМА(ЗаказОМА)
	СписокНастроек = НастройкиОМА();
	Если  НЕ СписокНастроек=Неопределено Тогда		 
		Если ТипЗнч(ЗаказОМА) = Тип("ДокументСсылка.ЗаказПокупателя") 
			И ЗаказОМА.ВидЗаказа =СписокНастроек.ВидЗаказаОМА 
			И	НЕ ЗаказОМА.СостояниеЗаказа = СписокНастроек.СостояниеНаРТТ Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ()
 

&НаКлиенте
Процедура саУНФ_СоздатьЧекККМНаОснованииЗаказаВместо(Команда)
	ПроверитьСостояниеКассовойСмены();
	//***Начало***08.02.2022***МурашкоВ
	ТекущиеДанные = Элементы.СписокЗаказов.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Проверка=ПроверитьЗаказаОМА(ТекущиеДанные.Ссылка) ;
		Если  НЕ Проверка Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю("Заказа ОМА должен быть в статусе принят на РТТ");
			Возврат;
		КонецЕсли; 
	КонецЕсли;
	//***Конец***08.02.2022***МурашкоВ
		Если НЕ ЧекККМ.Пустая() И ЕстьПередачаТоваров Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Ранее по заказу уже оформлялись чеки: '") + Элементы.ДекорацияЧекККМ.Заголовок;
		Сообщение.Поле = "Элементы.СоздатьЧекККМНаОснованииЗаказа";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
	КонецЕсли;
	
	ТекущиеДанные = Элементы.СписокЗаказов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ОрганизацияЗаказаПодходит(ТекущиеДанные.Ссылка) Тогда
			ПараметрыНовогоЧекаККМ = Новый Структура("Основание, КассаККМ, РМК", ТекущиеДанные.Ссылка, КассаККМ, Истина);
			ЗаполнитьТекущийЧекПоЗаказу(ПараметрыНовогоЧекаККМ);
			Элементы.ГруппаПродажаИВозврат.ТекущаяСтраница = Элементы.ГруппаПродажа;
			Элементы.СтраницыЖурналИБыстрыеТовары.ТекущаяСтраница = Элементы.ОсновныеРеквизиты;
			ПереключательЖурналБыстрыеТовары = 3;
			УстановитьВидимостьДоговора();
			ПересчитатьДокументНаКлиенте();
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Организация заказа не соответствует организации РМК. Измените организацию в РМК, чтобы создать чек по выбранному заказу
			|или включите учет по компании в целом.'");
			Сообщение.Поле = "Элементы.СоздатьЧекККМНаОснованииЗаказа";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		КонецЕсли;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не выбран заказ!'");
		Сообщение.Поле = "СписокЗаказов";
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ПриОткрытииПосле(Отказ)
	Если НЕ Элементы.Найти("ПринятьПредоплату") = Неопределено Тогда
	
		 Элементы.ПринятьПредоплату.Видимость=Ложь;
	
	КонецЕсли; 
	
КонецПроцедуры
