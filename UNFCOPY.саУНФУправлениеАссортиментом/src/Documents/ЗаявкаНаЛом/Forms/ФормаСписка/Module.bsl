&НаСервере
Функция ПолучитьЗонуДоставки(ИмяЗД)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗоныТарифыДоставки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЗоныТарифыДоставки КАК ЗоныТарифыДоставки
		|ГДЕ
		|	ЗоныТарифыДоставки.Наименование = &Наименование
		|	И НЕ ЗоныТарифыДоставки.ЭтоГруппа
		|	И НЕ ЗоныТарифыДоставки.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Наименование", );
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
	
		Возврат Неопределено;
	
	КонецЕсли;
	
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий(); 
	Возврат Выборка.Ссылка;
	

КонецФункции // ()
 


&НаСервере
Функция ПолучитьСодержаниеСписка()
	ЗонаДоставки = ПолучитьЗонуДоставки("Минск");
	
	
	Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ТаблицаПеретаскивания = Новый ТаблицаЗначений;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаПеретаскивания);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	МассивВыделенныеСтроки = Новый Массив;
	Для каждого СтрокаТ  Из  ТаблицаПеретаскивания Цикл
		  Если СтрокаТ.Ссылка.ТипЗаявки=Перечисления.ТипыЗаявкиНаЛом.Литий  ИЛИ НЕ ЗначениеЗаполнено(СтрокаТ.Ссылка.ПАК_МаршрутныйЛист) Тогда
		           Продолжить;
		  КонецЕсли; 
		  Если НЕ ЗонаДоставки=Неопределено Тогда
		          Если  ЗонаДоставки=СтрокаТ.Ссылка.ЗонаТариф Тогда
							Продолжить;
		  	      КонецЕсли;
		  КонецЕсли; 
		  
		  
		  МассивВыделенныеСтроки.Добавить(СтрокаТ.Ссылка);
	КонецЦикла; 
	Возврат МассивВыделенныеСтроки;
КонецФункции // ()


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МассивВыделенныеСтроки=ПолучитьСодержаниеСписка();
	Если МассивВыделенныеСтроки.Количество()=0 Тогда
	
		   ОбщегоНазначенияКлиент.СообщитьПользователю("Печатать нечего");
	
	Иначе
		  ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, МассивВыделенныеСтроки);
	КонецЕсли; 
	
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды





&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьОтборТекущиеДела();
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры


#Область МеткиОтборов

&НаСервере
Процедура УстановитьМеткуИОтборСписка(ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения="")
	
	Если ПредставлениеЗначения="" Тогда
		ПредставлениеЗначения=Строка(ВыбранноеЗначение);
	КонецЕсли; 
	
	РаботаСОтборами.ПрикрепитьМеткуОтбора(ЭтотОбъект, ИмяПоляОтбораСписка, ГруппаРодительМетки, ВыбранноеЗначение, ПредставлениеЗначения);
	РаботаСОтборами.УстановитьОтборСписка(ЭтотОбъект, Список, ИмяПоляОтбораСписка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МеткаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МеткаИД = Сред(Элемент.Имя, СтрДлина("Метка_")+1);
	УдалитьМеткуОтбора(МеткаИД);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьМеткуОтбора(МеткаИД)
	
	РаботаСОтборами.УдалитьМеткуОтбораСервер(ЭтотОбъект, Список, МеткаИД);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОтборов()
	
	РаботаСОтборами.СохранитьНастройкиОтборов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьПанельОтборов(Элемент)
	
	НовоеЗначениеВидимость = НЕ Элементы.ФильтрыНастройкиИДопИнфо.Видимость;
	РаботаСОтборамиКлиент.СвернутьРазвернутьПанельОтборов(ЭтотОбъект, НовоеЗначениеВидимость);
	
КонецПроцедуры

#КонецОбласти



#Область Отборы

&НаКлиенте
Процедура ПредставлениеПериодаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РаботаСОтборамиКлиент.ПредставлениеПериодаВыбратьПериод(ЭтотОбъект, "Список", "ДатаОтгрузки",,,"ПриОкончанииВыбораПериода");

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборТекущиеДела()
	
	СписокПолейИсключений = Новый Структура("ДатаОтгрузки","ДатаОтгрузки");
	
	РаботаСОтборами.ВосстановитьНастройкиОтборов(ЭтотОбъект, Список,  "", 
	Неопределено,  Неопределено,
	"", Ложь,  "ДанныеМеток", СписокПолейИсключений) ;
	
	ОтборПериод.ДатаНачала 		= 	НачалоДня(ТекущаяДата());
	ОтборПериод.ДатаОкончания	=	КонецДня(ТекущаяДата());
	
		
	ПредставлениеПериода = РаботаСОтборамиКлиентСервер.ОбновитьПредставлениеПериода(ОтборПериод);
	РаботаСОтборами.ОбновитьЭлементыМеток(ЭтотОбъект);
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ПриОкончанииВыбораПериода" Тогда
		//Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ОтборПериод.ДатаНачала);
		//Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания",ОтборПериод.ДатаОкончания);
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМеткуИОтборСписка("Подразделение", Элемент.Родитель.Имя, ВыбранноеЗначение);
	ВыбранноеЗначение = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СохранитьНастройкиОтборов();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПараметрыОтбора = Новый Структура("Форма,ИмяСпискаОтбора,ИмяПоляОтбора,УстановитьОтбор", ЭтотОбъект,"Список","ДатаОтгрузки",Истина);
    РаботаСОтборамиКлиент.ПредставлениеПериодаНажатиеЗавершение(ОтборПериод,ПараметрыОтбора);

КонецПроцедуры

	
#КонецОбласти 

