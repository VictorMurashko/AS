&НаСервере
Процедура ВидимостьРеквизитов()
     Если  Объект.ЗабратьУКлиента Тогда
	           Элементы.СтраницыВыбора.ТекущаяСтраница = Элементы.СтраницаКонтрагент;
	 Иначе	
	           Элементы.СтраницыВыбора.ТекущаяСтраница = Элементы.СтраницаСклад;
	 КонецЕсли; 
	
	 Если НЕ ЗначениеЗаполнено(Объект.ТипЗаявки) ИЛИ  Объект.ТипЗаявки=Перечисления.ТипыЗаявкиНаЛом.Лом Тогда
		    Элементы.СтраницыТипаЗаявки.ТекущаяСтраница	=	Элементы.СтраницаЛом;
	 Иначе
			 Объект.ЗабратьУКлиента=Ложь;
	 	     Элементы.СтраницыВыбора.ТекущаяСтраница 		= 	Элементы.СтраницаСклад;
			 Элементы.СтраницыТипаЗаявки.ТекущаяСтраница	=	Элементы.СтраницаЛитий;
			 Элементы.ЗабратьУКлиента.Видимость = Ложь;
	 КонецЕсли; 
	
КонецПроцедуры

  &НаСервере
Процедура ОчиститьКонтрагента()
	     Если  Объект.ЗабратьУКлиента Тогда
			    Объект.СтруктурнаяЕдиницаРезерв = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
		 Иначе
			   	Объект.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;	
		Объект.АдресДоставки="";
		Объект.ЗонаТариф = Справочники.ЗоныТарифыДоставки.ПустаяСсылка();
		Объект.Запасы.Очистить();
КонецПроцедуры

 
 &НаКлиенте
 Процедура ЗабратьУКлиентаПриИзменении(Элемент)
	 ВидимостьРеквизитов();
	  ОчиститьКонтрагента();
 КонецПроцедуры

 &НаСервере
Функция ПолучитьКоэфициентПересчета()
	УстановитьПривилегированныйРежим(Истина);
	КоэфициентПересчетаAh=0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	саУНФ_НастройкаЛогистики.Параметр КАК Параметр,
		|	саУНФ_НастройкаЛогистики.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.саУНФ_НастройкаЛогистики КАК саУНФ_НастройкаЛогистики
		|ГДЕ
		|	саУНФ_НастройкаЛогистики.Параметр = ""Пересчет Ah в объем""";
	
		
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		КоэфициентПересчетаAh=Выборка.Значение;
	КонецЕсли; 
    Если ПривилегированныйРежим() Тогда
	
		 УстановитьПривилегированныйРежим(Ложь);

	
	КонецЕсли; 
КонецФункции // ()

 
 
 &НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 Если  Не ЗначениеЗаполнено(Объект.ТипЗаявки) Тогда
	        Объект.ТипЗаявки = Перечисления.ТипыЗаявкиНаЛом.Лом;
	 КонецЕсли; 
	 ВидимостьРеквизитов();
	 ПолучитьКоэфициентПересчета();
	 
	 // СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

 КонецПроцедуры

 #Область ОбработчикиБиблиотек

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
 Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	 
	 Если Объект.ТипЗаявки=ОбщегоНазначенияКлиент.ПредопределенныйЭлемент("Перечисление.ТипыЗаявкиНаЛом.Лом") Тогда
		 
		 Если  Объект.Вес=0 И Объект.ОбъявленнаяЦенность = 0 Тогда
			 Сообщение = Новый СообщениеПользователю;
			 Сообщение.Текст = "Заполните либо вес либо емкость";
			 Сообщение.Сообщить();
			 Отказ = Истина;
		 КонецЕсли; 
		 
		 Если  Объект.Объем=0 Тогда
			 Сообщение = Новый СообщениеПользователю;
			 Сообщение.Текст = "Не заполнен объем";
			 Сообщение.Сообщить();
			 Отказ = Истина;
		 КонецЕсли; 
	  Иначе	 
		     Если Объект.Запасы.Количество()=0 Тогда
			        ОбщегоНазначенияКлиент.СообщитьПользователю("Табличная часть пустая, не понятно что везти");
			 	     Отказ = Истина;
			 КонецЕсли;
		     Объект.Вес=Объект.Запасы.Итог("Вес"); 
			 Если Объект.Запасы.Итог("Объем")=0 Тогда
			          Для каждого  СтрТЧ Из  Объект.Запасы Цикл
					         Объект.ОбъявленнаяЦенность = 50;
					  КонецЦикла; 
			 КонецЕсли; 
			 Объект.ОбъявленнаяЦенность  =   Объект.Запасы.Итог("Объем");
		 КонецЕсли;  
	 
	 Если  Объект.ЗабратьУКлиента И  НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		      Сообщение = Новый СообщениеПользователю;
			  Сообщение.Текст = "Не заполнен клиент";
			  Сообщение.Сообщить();
	 	      Отказ = Истина;

	 ИначеЕсли   НЕ Объект.ЗабратьУКлиента И  НЕ ЗначениеЗаполнено(Объект.СтруктурнаяЕдиницаРезерв) Тогда
		      Сообщение = Новый СообщениеПользователю;
			  Сообщение.Текст = "Не заполнено место, откуда можно забрать номенклатуру.";
			  Сообщение.Сообщить();
	 	      Отказ = Истина;

	 КонецЕсли; 
	
	 Если Объект.Вес=0 И Объект.ОбъявленнаяЦенность =0  Тогда
	 	        ОбщегоНазначенияКлиент.СообщитьПользователю("Нужно заполнить либо заявленный вес, либо емкость");
	            Отказ = Истина;
	 КонецЕсли;
	 
	 
 КонецПроцедуры

&НаСервере
 Процедура СтруктурнаяЕдиницаРезервПриИзмененииНаСервере()
	Если НЕ Объект.ТипЗаявки=Перечисления.ТипыЗаявкиНаЛом.Лом Тогда
	     Возврат;
	КонецЕсли; 
 
	 
	Объект.ЗонаТариф	=	Объект.СтруктурнаяЕдиницаРезерв.НаправлениеДоставки;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтруктурныеЕдиницыКонтактнаяИнформация.Представление КАК Представление
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы.КонтактнаяИнформация КАК СтруктурныеЕдиницыКонтактнаяИнформация
		|ГДЕ
		|	СтруктурныеЕдиницыКонтактнаяИнформация.Тип = &Тип
		|	И СтруктурныеЕдиницыКонтактнаяИнформация.Вид = &Вид
		|	И СтруктурныеЕдиницыКонтактнаяИнформация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресСтруктурнойЕдиницы);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Ссылка", Объект.СтруктурнаяЕдиницаРезерв);
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект.АдресДоставки=Выборка.Представление;
	КонецЦикла;
	
	 
 КонецПроцедуры

 
 &НаСервере
 Процедура СтруктурнаяЕдиницаПродажиПриИзмененииНаСервере()
	Если НЕ Объект.ТипЗаявки=Перечисления.ТипыЗаявкиНаЛом.Литий Тогда
	     Возврат;
	КонецЕсли; 
	 
	Объект.ЗонаТариф	=	Объект.СтруктурнаяЕдиницаПродажи.НаправлениеДоставки;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтруктурныеЕдиницыКонтактнаяИнформация.Представление КАК Представление
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы.КонтактнаяИнформация КАК СтруктурныеЕдиницыКонтактнаяИнформация
		|ГДЕ
		|	СтруктурныеЕдиницыКонтактнаяИнформация.Тип = &Тип
		|	И СтруктурныеЕдиницыКонтактнаяИнформация.Вид = &Вид
		|	И СтруктурныеЕдиницыКонтактнаяИнформация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресСтруктурнойЕдиницы);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Ссылка", Объект.СтруктурнаяЕдиницаПродажи);
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект.АдресДоставки=Выборка.Представление;
	КонецЦикла;

 КонецПроцедуры

&НаКлиенте
 Процедура СтруктурнаяЕдиницаПродажиПриИзменении(Элемент)
	 СтруктурнаяЕдиницаПродажиПриИзмененииНаСервере();
 КонецПроцедуры
 

 
 
 &НаСервере
 Процедура  ЗаполнитьСтруктурнаяЕдиницаПродажи()
	 Если  Объект.ТипЗаявки = Перечисления.ТипыЗаявкиНаЛом.Литий Тогда
		 ОМ = ОбщегоНазначения.ОбщийМодуль("сфУНФ_РемонтБатарей");
		 Если  ОМ = Неопределено  Тогда
			 Возврат;
		 КонецЕсли; 
		 СтруктураМет=ОМ.ПолучитьНастройки() ;
		 Если ТипЗнч(СтруктураМет) = Тип("Структура") И СтруктураМет.Свойство("СкладОбмена") Тогда
			 Объект.СтруктурнаяЕдиницаПродажи =  СтруктураМет.СкладОбмена;
		 КонецЕсли;
	 Иначе
		 ОМ = ОбщегоНазначения.ОбщийМодуль("саУНФ_ОбщийМодуль");
		 Если  ОМ = Неопределено  Тогда
			 Возврат;
		 КонецЕсли; 
		 Выборка=ОМ.ПолучитьНастройкиЛогистики();
		 СтруктураПоиска = Новый Структура("Параметр","Основной склад"); 
		 Если Выборка.НайтиСледующий(СтруктураПоиска) Тогда
			 Объект.СтруктурнаяЕдиницаПродажи = Выборка.Значение;
		 КонецЕсли; 
	 КонецЕсли;
 КонецПроцедуры

 &НаКлиенте
 Процедура СтруктурнаяЕдиницаРезервПриИзменении(Элемент)
	 СтруктурнаяЕдиницаРезервПриИзмененииНаСервере();
 КонецПроцедуры

&НаСервере
 Процедура КонтрагентПриИзмененииНаСервере()
	 Объект.ЗонаТариф	= Объект.Контрагент.НаправлениеДоставки;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтрагентыКонтактнаяИнформация.Представление КАК Представление
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|ГДЕ
		|	КонтрагентыКонтактнаяИнформация.Тип = &Тип
		|	И КонтрагентыКонтактнаяИнформация.Вид = &Вид
		|	И КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.АдресДоставкиКонтрагета);
	Запрос.УстановитьПараметр("Ссылка", Объект.Контрагент);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект.АдресДоставки=Выборка.Представление;
	КонецЦикла;
	
 КонецПроцедуры

&НаКлиенте
 Процедура КонтрагентПриИзменении(Элемент)
	 КонтрагентПриИзмененииНаСервере();
 КонецПроцедуры

&НаКлиенте
 Процедура ЗонаТарифНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 // Вставить содержимое обработчика.
 КонецПроцедуры

&НаКлиенте
 Процедура ОбъявленнаяЦенностьПриИзменении(Элемент)
	 Объект.Объем = ОКР((КоэфициентПересчетаAh*Объект.ОбъявленнаяЦенность)/100,2);
 КонецПроцедуры

 
 
 &НаКлиенте
 Процедура ТипЗаявкиПриИзменении(Элемент)
	  ВидимостьРеквизитов();
	  ОчиститьКонтрагента();
      ЗаполнитьСтруктурнаяЕдиницаПродажи();
 КонецПроцедуры

&НаКлиенте
 Процедура ДополнительныеАдреса(Команда)
	ПараметрыФормы = Новый Структура("Контрагент",Объект.Контрагент);
	ОткрытьФорму("РегистрСведений.саУНФ_ДополнительнаяКонтактнаяИнформация.Форма.ФормаВыбораАдреса",ПараметрыФормы,ЭтаФорма,УникальныйИдентификатор);

 КонецПроцедуры

 &НаКлиенте
 Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	 Если ИмяСобытия="Выбран другой адрес" Тогда
		 Если ТипЗнч(Параметр) = Тип("Структура") Тогда
			 Объект.АдресДоставки                             =     Параметр.Представление;
			 Объект.АдресДоставкиЗначение              	=     Параметр.Значение;
			 Объект.АдресДоставкиЗначенияПолей     	=     Параметр.ЗначенияПолей;
			 Модифицированность = Истина;
		 Иначе
			 Сообщение = Новый СообщениеПользователю;
			 Сообщение.Текст = НСтр("ru='Дополнительных адресов нет. Дополнительные адреса вводятся в справочнике покупатели'");
			 Сообщение.Сообщить();
		 КонецЕсли; 
	 КонецЕсли;
 КонецПроцедуры

 
 
 
 
 
 
 
 