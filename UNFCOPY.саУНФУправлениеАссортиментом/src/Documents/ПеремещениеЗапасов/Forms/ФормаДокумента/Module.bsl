#Область ОткрытьЗаписать
&НаСервере
Процедура саУНФ_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() И ЗначениеЗаполнено(Параметры.Основание) Тогда
		Если ТипЗнч(Параметры.Основание)=Тип("ДокументСсылка.саУНФ_ЗаказСнабжения")  Тогда
			
			Если ЗначениеЗаполнено(Параметры.Основание.ВариантЗавершения) Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("На основании документа с вариантом завершения %1 перемещение вводить нельзя",Строка(Параметры.Основание.ВариантЗавершения));
				Сообщение.Сообщить();
				Отказ = Истина;
			Иначе
				ОМ =  ОбщегоНазначения.ОбщийМодуль("саУНФ_АтозаказВызовСервера");    
				Если  НЕ ОМ = Неопределено Тогда
					Если НЕ ОМ.НайтиДокументОснование(Параметры.Основание,Параметры.Основание.Дата) Тогда
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = СтрШаблон("На основании документа  %1 перемещение уже создано",Строка(Параметры.Основание));
						Сообщение.Сообщить();
						Отказ = Истина;
					КонецЕсли; 
				КонецЕсли; 
				
			КонецЕсли; 
			
			
		КонецЕсли; 
		
		
	КонецЕсли; 
	ОтветДобавлени = Ложь;
	ВидимостьЗаказаПокупателя = истина;
	Если ЗначениеЗаполнено(Объект.ЗаказСнабжения) Тогда
		ВидимостьЗаказаПокупателя = Ложь;
		ПоместитьТаблицуВХранилище();
	КонецЕсли; 	
	
	Элементы.Заполнить.Видимость															=	ВидимостьЗаказаПокупателя;
	Элементы.ЗапасыИзменитьРезерв.Видимость 										= 	ВидимостьЗаказаПокупателя;
	Элементы.ЗаказПокупателя.Видимость 												=	ВидимостьЗаказаПокупателя;
	Элементы.ЗаполнитьПоЗаказу.Видимость 											= 	ВидимостьЗаказаПокупателя;
	Элементы.ЗапасыИзменитьРезервЗаполнитьПоРезервам.Видимость		=	ВидимостьЗаказаПокупателя;
	Элементы.ЗапасыИзменитьРезервОчиститьРезерв.Видимость				=	ВидимостьЗаказаПокупателя;
	Элементы.ЗаполнитьПоОстаткамНаСкладе.Видимость							=	ВидимостьЗаказаПокупателя;
	Элементы.ЗапасыКопироватьСтроки.Видимость                                   	=  ВидимостьЗаказаПокупателя;
	Элементы.ЗапасыВставитьСтроки.Видимость                                   		=  ВидимостьЗаказаПокупателя;
	Элементы.ЗапасыЗагрузитьДанныеИзТСД.Видимость                           =  ВидимостьЗаказаПокупателя;
	Элементы.ЗапасыПолучитьВес.Видимость                                           	=  ВидимостьЗаказаПокупателя;
	Элементы.ЗапасыРезерв.Видимость														=	ВидимостьЗаказаПокупателя;
	
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("ДатаОтгрузки", Тип("ПолеФормы"),Элементы.ГруппаЗаказОснование);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ТолькоПросмотр = Ложь;
	НовыйЭлемент.ПутьКДанным = "Объект.ДатаОтгрузки";

	
	Если НЕ  ВидимостьЗаказаПокупателя  Тогда
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("ЗаказСнабжения", Тип("ПолеФормы"),Элементы.ГруппаЗаказОснование);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ТолькоПросмотр = Истина;
		НовыйЭлемент.ПутьКДанным = "Объект.ЗаказСнабжения";
		
		Кмд = ЭтаФорма.Команды.Добавить("КомандаЗаполнитьПоЗаказуСнабжения");
		Кмд.Действие = "ЗаполнитьПоЗаказуСнабжения";
		Кмд.Заголовок = "Заполнить по заказу";
		Кмд.Картинка = БиблиотекаКартинок.ЗаполнитьПоОснованию;
		Кмд.Отображение = ОтображениеКнопки.Картинка;
		
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("КнопкаЗаказСнабжения", Тип("КнопкаФормы"),Элементы.ГруппаЗаказОснование);
		НовыйЭлемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		НовыйЭлемент.ИмяКоманды = "КомандаЗаполнитьПоЗаказуСнабжения";
		НовыйЭлемент.Заголовок = "";
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("АвторСтроки",Тип("ПолеФормы"),Элементы.Запасы);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеТабличногоДокумента;
		НовыйЭлемент.ПутьКДанным = "Объект.Запасы.АвторСтроки";
		НовыйЭлемент.ТолькоПросмотр = Истина;
		
																				 
	КонецЕсли;                                                                                
	    Элементы.ГруппаПраво.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		
		СтруктураЭлементов = Новый Структура("ПАК_МаршрутныйЛист", "Объект.ПАК_МаршрутныйЛист");
		СтруктураЭлементов.Вставить("ЗонаТариф", "Объект.ЗонаТариф");
		СтруктураЭлементов.Вставить("ТелефонКурьера", "Объект.ТелефонКурьера");
		СтруктураЭлементов.Вставить("ДатаЗагрузкиАвтомобиля", "Объект.ДатаЗагрузкиАвтомобиля");
		СтруктураЭлементов.Вставить("Автомобиль", "Объект.Автомобиль");
		
		 Для каждого СтрСтруктуры Из СтруктураЭлементов Цикл
			 НовыйЭлемент = ЭтаФорма.Элементы.Добавить(СтрСтруктуры.Ключ,Тип("ПолеФормы"),Элементы.ГруппаПраво);
			 НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи;
			 НовыйЭлемент.ПутьКДанным = СтрСтруктуры.Значение;
		 КонецЦикла; 
		 
		 НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Доставлен",Тип("ПолеФормы"),Элементы.ГруппаПраво);
		 НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		 НовыйЭлемент.ПутьКДанным = "Объект.Доставлен";

	   	
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ПередЗаписьюПеред(Отказ, ПараметрыЗаписи)
	Если Модифицированность Тогда
		
		Если Обломчикус() И  НЕ ОтветДобавления Тогда
			Отказ = Истина;
			
			Режим = Новый СписокЗначений;
			Режим.Добавить("Отказать","Ой сорри. Отказываюсь от изменения");
			Режим.Добавить("Добавить","Понимаю, но все-равно изменю");
			П=Новый Структура;
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаДобавления", ЭтотОбъект, П);
			ПоказатьВопрос(Оповещение,"Документы уже распечатаны, идет сборка заказа. Что думаете?", Режим,30, "Отказать");
			
			
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти 

#Область ВспомогательныеФункции

&НаКлиенте
Процедура ЗаполнитьПоЗаказуСнабжения(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьПоЗаказуСнабженияЗавершение", ЭтотОбъект), НСтр("ru = 'Документ будет полностью перезаполнен по ""Заказу покупателя"". Продолжить выполнение операции?'"), РежимДиалогаВопрос.ДаНет, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЗаказуСнабженияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Ответ = Результат;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоДокументу(Объект.ЗаказСнабжения);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьПоЗаказу()

&НаСервере
Функция ЭтоДоставкаВМинск()
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	caУНФ_ФилиалыДляАвтозаказа.Филиал КАК Филиал
	|ИЗ
	|	РегистрСведений.caУНФ_ФилиалыДляАвтозаказа КАК caУНФ_ФилиалыДляАвтозаказа
	|ГДЕ
	|	caУНФ_ФилиалыДляАвтозаказа.Включить
	|	И caУНФ_ФилиалыДляАвтозаказа.КонтрольВремени";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Если ПривилегированныйРежим() Тогда
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли; 
		
		Возврат Ложь;
	КонецЕсли; 
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Если Выборка.Филиал=Объект.СтруктурнаяЕдиницаПолучатель Тогда
		Если ПривилегированныйРежим() Тогда
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли; 
		
		Возврат Истина;
	Иначе	
		Если ПривилегированныйРежим() Тогда
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли; 
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции // ()
 
&НаСервере
Функция ДеньВДень()
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	caУНФ_ТочкиДляАвтозаказа.Точка КАК Точка
		|ИЗ
		|	РегистрСведений.caУНФ_ТочкиДляАвтозаказа КАК caУНФ_ТочкиДляАвтозаказа
		|ГДЕ
		|	caУНФ_ТочкиДляАвтозаказа.Точка = &Точка";
	
	Запрос.УстановитьПараметр("Точка", Объект.СтруктурнаяЕдиницаПолучатель);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Если ПривилегированныйРежим() Тогда
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли; 
		
		Возврат Ложь;
	КонецЕсли; 
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Если Выборка.Точка=Объект.СтруктурнаяЕдиницаПолучатель Тогда
		Если ПривилегированныйРежим() Тогда
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли; 
		
		Возврат Истина;
	Иначе	
		Если ПривилегированныйРежим() Тогда
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли; 
		Возврат Ложь;
	КонецЕсли; 
КонецФункции // ()
 

&НаСервере
Функция ВремяВышло()
	Если саУНФ_ОбщийМодуль.ЕстьРоль("саУНФ_РазрешениеПеремещенияЗапасовПосле14") Тогда
	
		Возврат Истина;
	
	КонецЕсли; 

	
	ОМ =  ОбщегоНазначения.ОбщийМодуль("саУНФ_АтозаказВызовСервера");    
	Если  НЕ ОМ = Неопределено Тогда
		ДоставкаВМинск = ЭтоДоставкаВМинск();
		ДеньВДень=Ложь;
		Если НЕ ДоставкаВМинск Тогда
		      ДеньВДень=ДеньВДень();
		КонецЕсли; 
		
		Возврат ОМ.ПроверкаВремени(Объект.ЗаказСнабжения.Дата,ДоставкаВМинск,ДеньВДень);
	Иначе
		Возврат Истина;
	КонецЕсли; 
	
КонецФункции // ()

&НаКлиенте
Функция Обломчикус()
	//Возврат  Ложь;
	
	
	Если ЗначениеЗаполнено(Объект.ЗаказСнабжения) Тогда
		Если НЕ ВремяВышло() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Это перемещение по автозаказу. Добавлять товар после 14:00 запрещено.(для доставки в Минск после 11:00)";
			Сообщение.Сообщить();
			Возврат Истина;
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат Ложь;
	
КонецФункции

&наСервере
Процедура УстановитьАвтораСтроки(Идентификатор)
	ТекущиеД = Объект.Запасы.НайтиПоИдентификатору(Идентификатор);
	ТекущиеД.АвторСтроки = Пользователи.ТекущийПользователь();
КонецПроцедуры

&НаСервере
Процедура ПроверитьАвтораСтроки(Идентификатор,Отказ)
	ТекущиеД = Объект.Запасы.НайтиПоИдентификатору(Идентификатор);
	Если ТекущиеД.АвторСтроки <> Пользователи.ТекущийПользователь() И ЗначениеЗаполнено(ТекущиеД.Номенклатура) Тогда
		Отказ = Истина;
	Иначе
		Отказ = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция   ПроверитьСуществованиеНоменклатурыНаСервере(Идентификатор)
	ТекущиеД = Объект.Запасы.НайтиПоИдентификатору(Идентификатор);
	Если НЕ ЗначениеЗаполнено(ТекущиеД.Номенклатура) Тогда
	      Возврат Ложь;
	КонецЕсли; 
	
	СписокОтбора = Новый Структура("Номенклатура",ТекущиеД.Номенклатура);
	ТаблицаЧ= ПолучитьИзВременногоХранилища(АдресХранилища);
	МассивЧек = ТаблицаЧ.НайтиСтроки(СписокОтбора);
	Если МассивЧек.Количество()>0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции



&НаСервере
Процедура   ВернутьНоменклатуруНаСервере(Идентификатор,Индекс)
	ТаблицаЧ= ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТаблицаЧ.Количество()<=Индекс  Тогда
			
	Иначе			 
		СтрокаТаблицыЧ = ТаблицаЧ[Идентификатор];
		ТекущиеД = Объект.Запасы.НайтиПоИдентификатору(Идентификатор);
		ТекущиеД.Номенклатура = СтрокаТаблицыЧ.Номенклатура;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Функция ВернутьНоменклатуру(Элемент,Предупреждать=Истина)
	Если ТипЗнч(Элемент)=Тип("Число") Тогда
	    Идентификатор = Элемент;
		ТекущаяСтр =      Элемент;
	Иначе	
	    Идентификатор =Элемент.ТекущиеДанные.ПолучитьИдентификатор();
		ТекущаяСтр = Элемент.ТекущаяСтрока;
	КонецЕсли; 
	
	//Если  Элемент.ТекущийЭлемент.Имя = "ЗапасыНоменклатура" Тогда
		Отказ = Ложь;
		//номенклатуру из автозаказа никто изменять не может, можно только удалить
		//свою номенклатуру можно изменять
		ПроверитьАвтораСтроки(Идентификатор,Отказ);
		Если Отказ  И Предупреждать Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Можно менять количество. Изменять можно только ту номенклатуру, которую вы сами ввели.";
			Сообщение.Сообщить();	
			ВернутьНоменклатуруНаСервере(Идентификатор,ТекущаяСтр);
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли; 
	//КонецЕсли; 
	
	Возврат Ложь;
	
КонецФункции				


&НаСервере
&Вместо("ПолучитьЗапасыИзХранилища")
Процедура саУНФ_ПолучитьЗапасыИзХранилища(АдресЗапасовВХранилище, ИмяТабличнойЧасти, ЕстьХарактеристики, ЕстьПартии)
	Если НЕ  ВидимостьЗаказаПокупателя  Тогда
		
		
		ТаблицаДляЗагрузки = ПолучитьИзВременногоХранилища(АдресЗапасовВХранилище);
		
		СтруктураДанныеНоменклатуры = Новый Структура;
		СтруктураДанныеНоменклатуры.Вставить("ВидОперации", Объект.ВидОперации);
		СтруктураДанныеНоменклатуры.Вставить("Организация", Объект.Организация);
		
		Для каждого СтрокаЗагрузки Из ТаблицаДляЗагрузки Цикл
			Если ИмяТабличнойЧасти="Запасы" Тогда
				ВвестиАвтора = Истина;
				КоличествоВСтроке = 0;				
				СписокОтбора = Новый Структура("Номенклатура",СтрокаЗагрузки.Номенклатура);
				МассивСтрок = Объект[ИмяТабличнойЧасти].НайтиСтроки(СписокОтбора);
				
				Если МассивСтрок.Количество() =0 Тогда
					НоваяСтрока = Объект[ИмяТабличнойЧасти].Добавить();
				Иначе
					ВвестиАвтора = Ложь;;
					НоваяСтрока = МассивСтрок[0];
					КоличествоВСтроке = НоваяСтрока.Количество +СтрокаЗагрузки.Количество;
				КонецЕсли; 
			Иначе	
				НоваяСтрока = Объект[ИмяТабличнойЧасти].Добавить();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗагрузки);
			Если ИмяТабличнойЧасти="Запасы" Тогда
				ЗаполнениеОбъектовУНФ.ЗаполнитьСтрокуПоШапке(НоваяСтрока, Объект, "ЗаказПокупателя", "ПоложениеЗаказаПокупателя");			
			КонецЕсли; 
			
			Если ИмяТабличнойЧасти="Запасы" Тогда
				Если  КоличествоВСтроке>0 Тогда
					НоваяСтрока.Количество =  КоличествоВСтроке;
				КонецЕсли;
			КонецЕсли;
			
			// Характеристики
			СтруктураДанныеНоменклатуры.Вставить("Номенклатура", СтрокаЗагрузки.Номенклатура);
			СтруктураДанныеНоменклатуры.Вставить("Характеристика", СтрокаЗагрузки.Характеристика);
			
			СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанныеНоменклатуры);
			
			НоваяСтрока.ИспользоватьХарактеристики = СтруктураДанные.ИспользоватьХарактеристики;
			НоваяСтрока.ПроверятьЗаполнениеХарактеристики = СтруктураДанные.ПроверятьЗаполнениеХарактеристики;
			НоваяСтрока.ЗаполнениеХарактеристикиПроверено = Истина;
			
			Если СтруктураДанные.ИспользоватьХарактеристики
				Тогда
				НоваяСтрока.Характеристика = СтруктураДанные.Характеристика;
			КонецЕсли;
			// Конец Характеристики
			
			//Партии
			НоваяСтрока.ИспользоватьПартии = ?(ИмяТабличнойЧасти = "Отходы", Истина, СтруктураДанные.ИспользоватьПартии);
			НоваяСтрока.ПроверятьЗаполнениеПартий = СтруктураДанные.ПроверятьЗаполнениеПартий;
			
			НоваяСтрока.Партия = ?(ЗначениеЗаполнено(СтрокаЗагрузки.Партия), СтрокаЗагрузки.Партия, СтруктураДанные.Партия);
			// Конец Партии
			
			НоваяСтрока.СтранаПроисхождения = СтруктураДанные.СтранаПроисхождения;
			НоваяСтрока.НомерГТД = СтруктураДанные.НомерГТД;
			//***Начало***12.08.2021***МурашкоВ
			Если ВвестиАвтора Тогда
			        НоваяСтрока.АвторСтроки  =  Пользователи.ТекущийПользователь();
			КонецЕсли; 
			//***Конец***12.08.2021***МурашкоВ
		КонецЦикла;
		
	Иначе
		ПродолжитьВызов(АдресЗапасовВХранилище, ИмяТабличнойЧасти, ЕстьХарактеристики, ЕстьПартии);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПроверитьКоличествоДо(Идентификатор,Отказ)
	//можно делать меньше только свою строку
	ТекущиеД = Объект.Запасы.НайтиПоИдентификатору(Идентификатор);
	СписокОтбора = Новый Структура("Номенклатура",ТекущиеД.Номенклатура);
	ТаблицаЧ= ПолучитьИзВременногоХранилища(АдресХранилища);
	МассивЧек = ТаблицаЧ.НайтиСтроки(СписокОтбора);
	Если МассивЧек.Количество()>0 Тогда
		Если МассивЧек[0].Количество > ТекущиеД.Количество Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Вы не можете ввести количество, меньше, чем в документе";
			Сообщение.Сообщить();
			ТекущиеД.Количество =  МассивЧек[0].Количество;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьТаблицуВХранилище()
	ТаблицаЧ=Объект.Запасы.Выгрузить();
	АдресХранилища = ПоместитьВоВременноеХранилище(ТаблицаЧ,ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры



&НаСервере
&Вместо("ВставитьСтрокиНаСервере")
Процедура саУНФ_ВставитьСтрокиНаСервере(ИмяТЧ, КоличествоСкопированных, КоличествоВставленных)
	Если НЕ  ВидимостьЗаказаПокупателя  Тогда
		Возврат;
	Иначе
		ПродолжитьВызов(ИмяТЧ, КоличествоСкопированных, КоличествоВставленных);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаДобавления(Результат, Параметры) Экспорт
	Если Результат = "Отказать" Тогда
		Возврат;
	Иначе
		ОтветДобавления=Истина; 
		Записать();
		ОтветДобавления  = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЖмемКнопки

&НаКлиенте
Процедура саУНФ_ПодборВместо(Команда)
	Если Обломчикус() Тогда
		Возврат;
	КонецЕсли; 
	ПодобратьТовары("Запасы");
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ЗапасыКопироватьСтрокиВместо(Команда)
	Если Обломчикус() Тогда
		Возврат;
	КонецЕсли; 
	
	КопироватьСтроки("Запасы");
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ЗапасыВставитьСтрокиВместо(Команда)
	Если Обломчикус() Тогда
		Возврат;
	КонецЕсли; 
	ВставитьСтроки("Запасы");
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ИзменитьРезервЗаполнитьПоРезервамВместо(Команда)
	Если Обломчикус() Тогда
		Возврат;
	КонецЕсли; 
	
	Если Объект.Запасы.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Табличная часть ""Запасы"" не заполнена!'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ЗаполнитьКолонкуРезервПоРезервамНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ИзменитьРезервОчиститьРезервВместо(Команда)
	Если Обломчикус() Тогда
		Возврат;
	КонецЕсли; 
	
	
	Если Объект.Запасы.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Табличная часть ""Запасы"" не заполнена!'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаТабличнойЧасти Из Объект.Запасы Цикл
		СтрокаТабличнойЧасти.Резерв = 0;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ЗаполнитьПоОстаткамНаСкладеВместо(Команда)
	Если Обломчикус() Тогда
		Возврат;
	КонецЕсли; 
	
	ЗаполнитьПоОстаткамНаСкладеНачало("Запасы");
КонецПроцедуры

#КонецОбласти


#Область ИнтерактивноеИзменение

&НаКлиенте
Процедура саУНФ_ЗапасыПередНачаломДобавленияПеред(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если НЕ ВидимостьЗаказаПокупателя Тогда
	Отказ =Обломчикус();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередУдалениемНаСервере(Идентификатор,Отказ)
	
	//Если НЕ ВидимостьЗаказаПокупателя И НЕ саУНФ_ОбщийМодуль.ЕстьРоль("саУдалениеСтрокВПеремещенииПоАвтозаказу") Тогда
	ПроверитьАвтораСтроки(Идентификатор,Отказ);
	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Вам можно удалять (изменять) только товар, который вы сами добавили";
		Сообщение.Сообщить();
	КонецЕсли; 
	//КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ЗапасыПередУдалениемПеред(Элемент, Отказ)
	Если НЕ ВидимостьЗаказаПокупателя И НЕ саУНФ_ОбщийМодуль.ЕстьРоль("саУдалениеСтрокВПеремещенииПоАвтозаказу") Тогда
		Отказ=Обломчикус();
		Если Отказ Тогда
			Возврат;
		КонецЕсли; 
		ПередУдалениемНаСервере(Элемент.ТекущиеДанные.ПолучитьИдентификатор(),Отказ);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокуЗапасы()
	
	Объект.Запасы.Удалить(Объект.Запасы.Количество()-1);
	
КонецПроцедуры


&НаКлиенте
Процедура саУНФ_ЗапасыПриНачалеРедактированияПосле(Элемент, НоваяСтрока, Копирование)
	Если НЕ  ВидимостьЗаказаПокупателя  Тогда
		Если НЕ саУНФ_ОбщийМодуль.ЕстьРоль("саУдалениеСтрокВПеремещенииПоАвтозаказу") Тогда
			Отказ=Обломчикус();
			Если Отказ Тогда
				Отказ=ВернутьНоменклатуру(Элемент.ТекущиеДанные.ПолучитьИдентификатор(),Ложь);
				Возврат;
			КонецЕсли; 
		КонецЕсли;
		
		Если  Копирование Тогда
			//копировать нельзя	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Копировать запрещено.";
			Сообщение.Сообщить();	
			УдалитьСтрокуЗапасы();
			Возврат;
		ИначеЕсли НоваяСтрока  Тогда
			//Проверим что такой номенклатуры нет в документе
			Отказ = ПроверитьСуществованиеНоменклатурыНаСервере(Элемент.ТекущиеДанные.ПолучитьИдентификатор());
			Если Отказ  Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Номенклатура уже есть в табличной части. Можете изменить количество";
				Сообщение.Сообщить();
				УдалитьСтрокуЗапасы();
				Возврат;
			КонецЕсли; 
			УстановитьАвтораСтроки(Элемент.ТекущиеДанные.ПолучитьИдентификатор());
			
		Иначе
			Предупреждать=Истина;
			Если Элемент.ТекущийЭлемент.Имя="ЗапасыКоличество" Тогда
			         Предупреждать=Ложь;
			КонецЕсли; 
			
			Отказ=ВернутьНоменклатуру(Элемент,Предупреждать);
			Если  Отказ Тогда Возврат; КонецЕсли; 
			
		КонецЕсли;	
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ЗапасыПередОкончаниемРедактированияПеред(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НЕ  ВидимостьЗаказаПокупателя  Тогда

	Если Элемент.ТекущийЭлемент.Имя = "ЗапасыКоличество"  Тогда	   
		Если Элемент.ТекущиеДанные.Количество=0 Тогда
			//0 никто поставить не может
			ПроверитьКоличествоДо(Элемент.ТекущиеДанные.ПолучитьИдентификатор(),Отказ);
		Иначе  
			Если НЕ саУНФ_ОбщийМодуль.ЕстьРоль("саУдалениеСтрокВПеремещенииПоАвтозаказу") Тогда
				ПроверитьКоличествоДо(Элемент.ТекущиеДанные.ПолучитьИдентификатор(),Отказ);
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ЗапасыПриОкончанииРедактированияПосле(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если НЕ  ВидимостьЗаказаПокупателя  Тогда
		
		Если НоваяСтрока  И НЕ Элемент.ТекущиеДанные=Неопределено Тогда
			//Проверим что такой номенклатуры нет в документе
			Отказ = ПроверитьСуществованиеНоменклатурыНаСервере(Элемент.ТекущиеДанные.ПолучитьИдентификатор());
			Если Отказ  Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Номенклатура уже есть в табличной части. Можете изменить количество";
				Сообщение.Сообщить();
				УдалитьСтрокуЗапасы();
				Возврат;
			Иначе
				ПоместитьТаблицуВХранилище();
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 	
	
КонецПроцедуры

&НаКлиенте
Процедура саУНФ_ЗапасыПриИзмененииПосле(Элемент)
	Если НЕ  ВидимостьЗаказаПокупателя  Тогда
		Предупреждать=Истина;
			Если Элемент.ТекущийЭлемент.Имя="ЗапасыКоличество" Тогда
			         Предупреждать=Ложь;
			КонецЕсли; 
		
		Отказ= ВернутьНоменклатуру(Элемент,Предупреждать);
		Если  Отказ Тогда Возврат; КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры


#КонецОбласти 



