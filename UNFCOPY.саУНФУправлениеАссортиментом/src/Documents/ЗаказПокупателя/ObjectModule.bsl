Функция ВидЗаказаИМ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыЗаказовПокупателей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыЗаказовПокупателей КАК ВидыЗаказовПокупателей
	|ГДЕ
	|	НЕ ВидыЗаказовПокупателей.ПометкаУдаления
	|	И ВидыЗаказовПокупателей.Наименование ПОДОБНО ""%Интернет-магазин%""";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе	
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции // ()

Функция СостояниеЗаказаИМ()
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	СостоянияЗаказовПокупателей.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СостоянияЗаказовПокупателей КАК СостоянияЗаказовПокупателей
	|ГДЕ
	|	НЕ СостоянияЗаказовПокупателей.ПометкаУдаления
	|	И СостоянияЗаказовПокупателей.Наименование ПОДОБНО ""%Отменен%""";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе	
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции 

Функция ПричинаОтменыИМ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПричиныОтменыЗаказа.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПричиныОтменыЗаказа КАК ПричиныОтменыЗаказа
	|ГДЕ
	|	НЕ ПричиныОтменыЗаказа.ПометкаУдаления
	|	И ПричиныОтменыЗаказа.Наименование ПОДОБНО ""%Отменен на сайте%""";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		УстановитьПривилегированныйРежим(Истина);
		НовыйЭл = Справочники.ПричиныОтменыЗаказа.СоздатьЭлемент();
		НовыйЭл.Наименование = "Отменен на сайте";
		Попытка
			НовыйЭл.Записать();
			Возврат НовыйЭл.Ссылка;
			Если  ПривилегированныйРежим() Тогда
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли; 
			
			
		Исключение
			Если  ПривилегированныйРежим() Тогда
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли; 
			Возврат Неопределено;
		КонецПопытки;
		
	Иначе	
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции // ()

 

&Перед("ПередЗаписью")
Процедура саУНФ_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ВидОперации = Перечисления.ВидыОперацийЗаказПокупателя.ЗаказНаПродажу Тогда
		ВидЗаказаИМ = ВидЗаказаИМ();
		Если  НЕ ВидЗаказаИМ = Неопределено И   ВидЗаказа =ВидЗаказаИМ Тогда
			СостояниеЗаказаИМ=СостояниеЗаказаИМ();
			Если  НЕ СостояниеЗаказаИМ = Неопределено И   СостояниеЗаказа =СостояниеЗаказаИМ Тогда
				СостояниеЗаказа 		= Справочники.СостоянияЗаказовПокупателей.Завершен;
				ВариантЗавершения   =	Перечисления.ВариантыЗавершенияЗаказа.Отменен;
				ПричинаОтменыИМ	=	ПричинаОтменыИМ();
				Если  НЕ ПричинаОтменыИМ = Неопределено  Тогда
					ПричинаОтмены   =  ПричинаОтменыИМ;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	#Область  РасчетСтоимости
	
	СтруктураПоВалютеУчета = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ЭтотОбъект.Дата, Новый Структура("Валюта", ЭтотОбъект.ВалютаДокумента));
	Если СтруктураПоВалютеУчета.Свойство("Кратность") И НЕ СтруктураПоВалютеУчета.Кратность = Неопределено И НЕ  СтруктураПоВалютеУчета.Кратность =0 Тогда
		КурсНБРБ=СтруктураПоВалютеУчета.КурсНБРБ/СтруктураПоВалютеУчета.Кратность; 
	Иначе	
		КурсНБРБ = 1;
	КонецЕсли; 
	КурсНБРБ = ?(КурсНБРБ =0,1,КурсНБРБ);
	
	ТаблицаЗапасы =  ЭтотОбъект.Запасы.Выгрузить();
	ЭтотОбъект.саУНФ_НДС 		=   Окр(ТаблицаЗапасы.Итог("СуммаНДС")*КурсНБРБ,2);
	Если ЭтотОбъект.СуммаВключаетНДС Тогда
		ЭтотОбъект.саУНФ_Сумма 				=  Окр(ТаблицаЗапасы.Итог("Сумма")*КурсНБРБ-ТаблицаЗапасы.Итог("СуммаНДС")*КурсНБРБ,2);
		ЭтотОбъект.саУНФ_СуммаСНДС		=	Окр(ТаблицаЗапасы.Итог("Сумма")*КурсНБРБ,2);
	Иначе	
		ЭтотОбъект.саУНФ_Сумма 				=  ОКР(ТаблицаЗапасы.Итог("Сумма")*КурсНБРБ,2);
		ЭтотОбъект.саУНФ_СуммаСНДС		=	ЭтотОбъект.саУНФ_Сумма+ОКР(ТаблицаЗапасы.Итог("СуммаНДС")*КурсНБРБ,2);
	КонецЕсли; 
	#КонецОбласти
	
	Если  СпособДоставки = Перечисления.СпособыДоставки.ПустаяСсылка() Тогда
		Если ВидЗаказа=Справочники.ВидыЗаказовПокупателей.Основной Тогда
			Если  ЭтотОбъект.Дата>Дата(2021,10,11) Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "На закладке Доставка нужно выбрать способ доставки Курьер или Самовывоз";
				Сообщение.Сообщить();
				Отказ = Истина;
			Иначе
				СпособДоставки = Перечисления.СпособыДоставки.Самовывоз;
			КонецЕсли; 
			
		Иначе
			СпособДоставки = Перечисления.СпособыДоставки.Самовывоз;
		КонецЕсли; 
	КонецЕсли;
	Если ВидЗаказа = Справочники.ВидыЗаказовПокупателей.Основной  
		И  НЕ СпособДоставки = Перечисления.СпособыДоставки.Самовывоз
		И Дата>Дата(2021,09,28) 
		И НЕ СостояниеЗаказа = Справочники.СостоянияЗаказовПокупателей.Завершен Тогда
		
		Если НЕ ЗначениеЗаполнено(АдресДоставки) ИЛИ АдресДоставки="Не заполнен" Тогда
			Сообщ=Новый СообщениеПользователю;
			Сообщ.Текст = "Заполните адрес доставки";
			Сообщ.Сообщить();
			Отказ = Истина;
		КонецЕсли;                                                                         
		Если ЛЕВ(СОКРЛП(АдресДоставкиЗначение),1)="{" Тогда
			Если УправлениеКонтактнойИнформацией.АдресВведенВСвободнойФорме(АдресДоставкиЗначение) Тогда
				Сообщ=Новый СообщениеПользователю;
				Сообщ.Текст = "Введите адрес через адресный классификатор";
				Сообщ.Сообщить();
				Отказ = Истина;
			КонецЕсли;
		Иначе
			Сообщ=Новый СообщениеПользователю;
			Сообщ.Текст = "Введите адрес через адресный классификатор";
			Сообщ.Сообщить();
			Отказ = Истина;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СлужбаДоставки) Тогда
			Сообщ=Новый СообщениеПользователю;
			Сообщ.Текст = "Заполните службу доставки";
			Сообщ.Сообщить();
			Отказ = Истина;
		КонецЕсли; 
	КонецЕсли; 
	
	Если  НЕ ЗначениеЗаполнено(Фидбэк) Тогда
		Фидбэк  = Перечисления.СвязьСПокупателем.НеЗвонили;
	КонецЕсли; 
	Если НачалоДня(ДатаОтгрузки)<НачалоДня(Дата) Тогда
	            ДатаЗаказа = Дата;
	КонецЕсли; 
			
	Если НачалоДня(ДатаОтгрузки)>ДобавитьМесяц(НачалоДня(Дата),1) Тогда
	     ДатаОтгрузки = ДобавитьМесяц(Дата,1);
	КонецЕсли;		
			
КонецПроцедуры

&После("ПриКопировании")
Процедура саУНФ_ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.ПАК_МаршрутныйЛист = Документы.ПАК_МаршрутныйЛист.ПустаяСсылка();
	ЭтотОбъект.Наличка   =0;
	ЭтотОбъект.НомерБланка = "";
	ЭтотОбъект.СерияБланка ="";
	ЭтотОбъект.Автомобиль   = Справочники.ТранспортныеСредства.ПустаяСсылка();
	ЭтотОбъект.ДатаЗагрузкиАвтомобиля = Дата(1,1,1);
	ЭтотОбъект.СостояниеСборки   = Перечисления.СостояниеСборки.НеСобран;
	ЭтотОбъект.ТелефонКурьера  = "";
	ЭтотОбъект.саУНФ_НДС   =0;
	ЭтотОбъект.саУНФ_Сумма  = 0;
	ЭтотОбъект.саУНФ_СуммаСНДС =0;
	ЭтотОбъект.ФИОВодителя = "";
	ЭтотОбъект.Фидбэк  = Перечисления.СвязьСПокупателем.НеЗвонили;
	ЭтотОбъект.Расширение ="";
КонецПроцедуры


&Перед("ОбработкаЗаполнения")
Процедура саУНФ_ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Фидбэк	= Перечисления.СвязьСПокупателем.НеЗвонили;
	 Если  Контрагент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ФизическоеЛицо Тогда
	              Наличка  = Истина;
	 КонецЕсли;
КонецПроцедуры

