#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПредставлениеПФ()  Экспорт
		Возврат НСтр("ru = 'Гарантийный талон'");		
КонецФункции

Функция КлючПараметровПечати()  Экспорт
	Возврат "ПАРАМЕТРЫ_ПЕЧАТИ_ГарантийныйТалонФЛ";
КонецФункции

Функция ПолныйПутьКМакету() Экспорт
	Возврат "Обработка.ПечатьГарантийногоТалона.ПФ_MXL_ГарантийныйТалонФЛ";
КонецФункции

Функция ИдентификаторПечатнойФормы() Экспорт
	
	Возврат  "ГарантийныйТалонФЛ";
	
КонецФункции

Функция ДанныеЛистаЗагрузки(МассивОбъектов)
	
	ТекущийДокумент = МассивОбъектов[0];	
	Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	саУНФГарантийныеТалоны.Документ КАК Документ,
		|   саУНФГарантийныеТалоны.Документ.Дата КАК Дата,
		|	саУНФГарантийныеТалоны.Документ.Организация.Представление КАК ОрганизацияПредставление,
		|   саУНФГарантийныеТалоны.Документ.Организация КАК Организация,
		|   саУНФГарантийныеТалоны.Документ.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиница,
		|	саУНФГарантийныеТалоны.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
		|	саУНФГарантийныеТалоны.Номенклатура.Вес КАК Масса,
		|	саУНФГарантийныеТалоны.Номер КАК Номер,
		|   ПОДСТРОКА(саУНФГарантийныеТалоны.Номер, 17, 2) КАК НомерСтроки,
		|	саУНФГарантийныеТалоны.Номенклатура КАК Номенклатура,
		|	саУНФГарантийныеТалоны.Автомобиль Автомобиль,
		| 	саУНФГарантийныеТалоны.ГодВыпускаАвтомобиля ГодВыпускаАвтомобиля,		
		|	саУНФГарантийныеТалоны.СерийныйНомер СерийныйНомер,
		|	саУНФГарантийныеТалоны.Пробег Пробег,
		|	саУНФГарантийныеТалоны.ОбъемДвигателя ОбъемДвигателя,
		|	саУНФГарантийныеТалоны.СрокГарантии СрокГарантии,
		|	саУНФГарантийныеТалоны.ГодИзготовленияБатареи ГодИзготовленияБатареи, 
		|	саУНФГарантийныеТалоны.ТипДвигателя ТипДвигателя,
		|	саУНФГарантийныеТалоны.НапряжениеЭДС НапряжениеЭДС,
		|	саУНФГарантийныеТалоны.НапряжениеПодНагрузкой НапряжениеПодНагрузкой
		|ИЗ
		|	РегистрСведений.саУНФГарантийныеТалоны КАК саУНФГарантийныеТалоны
		|ГДЕ
		|	саУНФГарантийныеТалоны.Документ = &Документ";
		
		Запрос.УстановитьПараметр("Документ", ТекущийДокумент);
		РезультатГарантийныеТалоны = Запрос.Выполнить();
		
		Если РезультатГарантийныеТалоны.Пустой() Тогда
			Возврат Неопределено;
		КонецЕсли;
	

	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказПокупателяЗапасы.Номенклатура,
		|	ЗаказПокупателяЗапасы.Количество,
		|	ВЫБОР
		|		КОГДА ЗаказПокупателяЗапасы.Количество = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(ЗаказПокупателяЗапасы.Всего / ЗаказПокупателяЗапасы.Количество КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК Цена,
		|	ЗаказПокупателяЗапасы.НомерСтроки,
		|	ЗаказПокупателяЗапасы.Номенклатура.КатегорияНоменклатуры
		|ПОМЕСТИТЬ ВТ_ЗАПАСЫ
		|ИЗ
		|	Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
		|ГДЕ
		|	ЗаказПокупателяЗапасы.Ссылка = &Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	саУНФ_НастройкиСЦ.КатегорияНоменклатуры
		|ПОМЕСТИТЬ ВТ_КАТ
		|ИЗ
		|	РегистрСведений.саУНФ_НастройкиСЦ КАК саУНФ_НастройкиСЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗАПАСЫ.Номенклатура,
		|	ВТ_ЗАПАСЫ.Количество,
		|	ВТ_ЗАПАСЫ.Цена,
		|	ВТ_ЗАПАСЫ.НомерСтроки
		|ПОМЕСТИТЬ ВТ_ДОККАТ
		|ИЗ
		|	ВТ_КАТ КАК ВТ_КАТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗАПАСЫ КАК ВТ_ЗАПАСЫ
		|		ПО ВТ_ЗАПАСЫ.НоменклатураКатегорияНоменклатуры = ВТ_КАТ.КатегорияНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеРеквизитыИСведения.Ссылка КАК СвойствоХариктеристик
		|ПОМЕСТИТЬ ВТ_ХАРАКТЕРИСТИКИ
		|ИЗ
		|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
		|ГДЕ
		|	ДополнительныеРеквизитыИСведения.Имя = ""Производитель_ab2fcb4294e940bdb2d4605fb51575d5""
		|	ИЛИ ДополнительныеРеквизитыИСведения.Имя = ""Емкость_c115668b3358438b97fe48f9b7f8f281""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ДОККАТ.Номенклатура
		|ПОМЕСТИТЬ ВТ_НОМ
		|ИЗ
		|	ВТ_ДОККАТ КАК ВТ_ДОККАТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НОМ.Номенклатура,
		|	НоменклатураДополнительныеРеквизиты.Свойство,
		|	НоменклатураДополнительныеРеквизиты.Значение,
		|	НоменклатураДополнительныеРеквизиты.ТекстоваяСтрока,
		|	ВТ_ХАРАКТЕРИСТИКИ.СвойствоХариктеристик.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НОМ КАК ВТ_НОМ
		|		ПО ВТ_НОМ.Номенклатура = НоменклатураДополнительныеРеквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ХАРАКТЕРИСТИКИ КАК ВТ_ХАРАКТЕРИСТИКИ
		|		ПО НоменклатураДополнительныеРеквизиты.Свойство = ВТ_ХАРАКТЕРИСТИКИ.СвойствоХариктеристик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДОККАТ.Номенклатура,
		|	ВТ_ДОККАТ.Количество,
		|	ВТ_ДОККАТ.Цена,
		|	ВТ_ДОККАТ.НомерСтроки
		|ИЗ
		|	ВТ_ДОККАТ КАК ВТ_ДОККАТ";
	
	Запрос.УстановитьПараметр("Документ", ТекущийДокумент);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаДопСведенияНом = РезультатЗапроса[5].Выгрузить();	
	ТаблицаТабЧасть = РезультатЗапроса[6].Выгрузить();
	
	СтруктураОтвета = Новый Структура("РезультатГарантийныеТалоны,ТаблицаДопСведенияНом,ТаблицаТабЧасть",
	РезультатГарантийныеТалоны,ТаблицаДопСведенияНом,ТаблицаТабЧасть);
	
	Возврат  СтруктураОтвета;
	

КонецФункции // ()
 
Функция ДанныеПользователя()
 	Продавец = "";
 	МассивСотрудников =УправлениеНебольшойФирмойСервер.ПолучитьСотрудниковПользователя(Пользователи.ТекущийПользователь());
 	Если ТипЗнч(МассивСотрудников)=Тип("Массив") И МассивСотрудников.Количество()>0 Тогда
			Сотрудник = МассивСотрудников[0];
			ИмяСотрудника = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сотрудник, "Наименование");
			Продавец = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ИмяСотрудника);
 	КонецЕсли;
 	Возврат Продавец;		
 КонецФункции


Функция СформироватьПФ(ПечатнаяФорма, МассивОбъектов, ОбъектыПечати) Экспорт
	СтруктураОтвета = ДанныеЛистаЗагрузки(МассивОбъектов);
	ТабличныйДокумент = ПечатнаяФорма.ТабличныйДокумент;
	Если СтруктураОтвета = Неопределено Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	ПолныйПутьКМакету	=	ПечатнаяФорма.ПолныйПутьКМакету;
	ПервыйДокумент = Истина;

	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолныйПутьКМакету);
	РезультатГарантийныеТалоны 	=  	СтруктураОтвета.РезультатГарантийныеТалоны;
	ТаблицаДопСведенияНом 		= 	СтруктураОтвета.ТаблицаДопСведенияНом;
	ТаблицаТабЧасть				=	СтруктураОтвета.ТаблицаТабЧасть;
	ВыборкаДокументов 			= 	РезультатГарантийныеТалоны.Выбрать();
	ВыборкаДокументов.Следующий();
	Продавец					=	ДанныеПользователя();
	АдресОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ВыборкаДокументов.Организация,
																				   ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
	Местопродажи = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ВыборкаДокументов.СтруктурнаяЕдиница,
																			   ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыКонтактнойИнформации.ФактАдресСтруктурнойЕдиницы"));
	Организация = 	ВыборкаДокументов.ОрганизацияПредставление + " " + АдресОрганизации;
    ДатаПродажи = ФОРМАТ(ВыборкаДокументов.Дата,"ДФ=dd.MM.yyyy;");
	ВыборкаДокументов.Сбросить();
	Пока ВыборкаДокументов.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		СтруктураПараметров = Новый Структура;

		СтруктураОтбора = Новый Структура("Номенклатура", ВыборкаДокументов.Номенклатура);
		Емкость="";
		Производитель="";
		Если ТаблицаДопСведенияНом.Количество() > 0 Тогда
			МассивДопСведенияНом = ТаблицаДопСведенияНом.НайтиСтроки(СтруктураОтбора);
			Если МассивДопСведенияНом.Количество() > 0 Тогда
				Для Каждого СтрМас Из МассивДопСведенияНом Цикл
					ИмяПараметра = СокрЛП(НРЕГ(СтрМас.Наименование));
					Если ИмяПараметра = "емкость" Тогда
						Емкость=СтрМас.Значение;
					КонецЕсли;
					Если ИмяПараметра = "производитель" Тогда
						Производитель=СтрМас.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;

		ГодВыпускаАвтомобиля = ?(ВыборкаДокументов.ГодВыпускаАвтомобиля > 0, "год выпуска: "
																			 + Формат(ВыборкаДокументов.ГодВыпускаАвтомобиля,
																					  "ЧГ=0"), "-");
		Пробег = ?(ВыборкаДокументов.Пробег > 0, Формат(ВыборкаДокументов.Пробег, "ЧГ=0") + " км.", "-");
		ОбъемДвигателя = ?(ВыборкаДокументов.ОбъемДвигателя > 0, Формат(ВыборкаДокументов.ОбъемДвигателя, "ЧГ=0")
																 + " см3", "");

		Цена = 0;
		МассивНом = ТаблицаТабЧасть.НайтиСтроки(СтруктураОтбора);
		Если МассивНом.Количество() > 0 Тогда
			Цена = МассивНом[0].Цена;
			Если МассивНом.Количество() > 1 Тогда
				Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ВыборкаДокументов.НомерСтроки) Тогда
					НомерСтроки = Число(ВыборкаДокументов.НомерСтроки);
					Для Каждого СтрМасс Из МассивНом Цикл
						Если СтрМасс.НомерСтроки = НомерСтроки Тогда
							Цена = СтрМасс.Цена;
						КонецЕсли;
					КонецЦикла;

				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		СтруктураПараметров.Вставить("Продавец", Продавец);
		СтруктураПараметров.Вставить("Емкость", Емкость);
		СтруктураПараметров.Вставить("Производитель", Производитель);
		СтруктураПараметров.Вставить("Организация", Организация);
		СтруктураПараметров.Вставить("Местопродажи", Местопродажи);
		СтруктураПараметров.Вставить("Цена", Цена);
		СтруктураПараметров.Вставить("ГодВыпускаАвтомобиля", ГодВыпускаАвтомобиля);
		СтруктураПараметров.Вставить("Пробег", Пробег);
		СтруктураПараметров.Вставить("ОбъемДвигателя", ОбъемДвигателя);
		СтруктураПараметров.Вставить("ДатаПродажи", ДатаПродажи);

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.Заполнить(ВыборкаДокументов);
		ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);

		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.АвтоМасштаб = Истина;

		ТабличныйДокумент.ПолеСверху = 2;
		ТабличныйДокумент.ПолеСнизу = 1;

		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	КонецЦикла;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Возврат ТабличныйДокумент;

КонецФункции

#КонецЕсли