
#Область  СозданиеЗаказа
Функция СоздатьЗаказыПокупателя(ТаблицаРаспределения2,Организация)
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ВТ_ТАБФИЛ.Филиал КАК Филиал,
	|	ВТ_ТАБФИЛ.Цена КАК Цена,
	|	ВТ_ТАБФИЛ.Номенклатура КАК Номенклатура,
	|	ВТ_ТАБФИЛ.Магазин КАК Магазин,
	|	ВТ_ТАБФИЛ.ОбеспечитьЗаСчетФилиала КАК Количество
	|ПОМЕСТИТЬ ВТ_ТАБФИЛ2
	|ИЗ
	|	&ТаблицаРаспределения КАК ВТ_ТАБФИЛ
	|ГДЕ
	|	ВТ_ТАБФИЛ.ОбеспечитьЗаСчетФилиала > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТАБФИЛ2.Филиал КАК Филиал,
	|	ВТ_ТАБФИЛ2.Цена КАК Цена,
	|	ВТ_ТАБФИЛ2.Номенклатура КАК Номенклатура,
	|	ВТ_ТАБФИЛ2.Магазин КАК Магазин,
	|	СУММА(ВТ_ТАБФИЛ2.Количество) КАК Количество
	|ИЗ
	|	ВТ_ТАБФИЛ2 КАК ВТ_ТАБФИЛ2
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТАБФИЛ2.Филиал,
	|	ВТ_ТАБФИЛ2.Цена,
	|	ВТ_ТАБФИЛ2.Номенклатура,
	|	ВТ_ТАБФИЛ2.Магазин
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Филиал,
	|	Магазин
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТАБФИЛ2";
	
	Запрос.УстановитьПараметр("ТаблицаРаспределения",ТаблицаРаспределения2);
	Результат=Запрос.Выполнить();
	
	
	СтруктураОбщих  =  саУНФ_АтозаказВызовСервера.ОбщиеРеквизитыЗаказа(Организация); 
			
	ВыборкаФилиалы   =  Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	Пока ВыборкаФилиалы.Следующий() Цикл   //ПО ФИЛИАЛАМ
		Филиал=ВыборкаФилиалы.Филиал;
		СтруктураОбщих.Филиал = Филиал;
		ВыборкаМагазины   =  ВыборкаФилиалы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
		Пока ВыборкаМагазины.Следующий() Цикл   //ПО МАГАЗИНАМ
			
			СтруктураОбщих.Магазин = ВыборкаМагазины.Магазин;			
			СписокКонтрагент = Новый Массив(1);
			СписокКонтрагент[0] = СтруктураОбщих.Магазин;
			
			саУНФ_АтозаказВызовСервера.СоздатьЗаказыПокупателяВызовСервера(СписокКонтрагент,СтруктураОбщих,ВыборкаМагазины); 
			
		КонецЦикла;
		
	КонецЦикла;

	
	
	
	
КонецФункции // ()

Процедура СделатьНепроведеннымиЗаказы(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_ВСЕМАГАЗИНЫ.Магазин КАК Ссылка
	|ИЗ
	|	ВТ_ВСЕМАГАЗИНЫ КАК ВТ_ВСЕМАГАЗИНЫ";
	
	
	РезультатКонтрагенты = Запрос.Выполнить();
	саУНФ_АтозаказВызовСервера.ОбработатьЗаказы(РезультатКонтрагенты);

	
КонецПроцедуры

#КонецОбласти


#Область СборИнформации

Функция НормыПоМАП(МенеджерВременныхТаблиц,Организация,МинскОсновной)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	
	//1. Выбираем филиалы из РегистрСведений.caУНФ_ФилиалыДляАвтозаказа
		
	Сутки = 86400;
	
	//В ПТ создаем заказы на понедельник
	КоличествоСуток = саУНФ_АтозаказВызовСервера.КоличествоСутокЗаказа();

	
	Поставщик=Справочники.Контрагенты.НайтиПоКоду("УУ-000271");                  
	Запрос.УстановитьПараметр("Поставщик",Поставщик);    
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("МинскОсновной",МинскОсновной); 
	
	Запрос.УстановитьПараметр("ДатаОбработки",ТекущаяДата()+КоличествоСуток*Сутки);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ak_ФилиалыДляАвтозаказа.Филиал КАК Филиал,
	               |	ak_ФилиалыДляАвтозаказа.Филиал.саУНФ_ГрафикДоставки КАК ГрафикДоставки,
	               |	ak_ФилиалыДляАвтозаказа.Филиал.саУНФ_ФорматМагазина КАК ФорматМагазина,
	               |	ak_ФилиалыДляАвтозаказа.Филиал.Организация КАК Организация
	               |ПОМЕСТИТЬ ВТ_ФИЛИАЛЫ
	               |ИЗ
	               |	РегистрСведений.caУНФ_ФилиалыДляАвтозаказа КАК ak_ФилиалыДляАвтозаказа
	               |ГДЕ
	               |	НЕ ak_ФилиалыДляАвтозаказа.Филиал.ПометкаУдаления
	               |	И ak_ФилиалыДляАвтозаказа.Включить
	               |	И ak_ФилиалыДляАвтозаказа.Филиал.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	               |	И ak_ФилиалыДляАвтозаказа.Филиал.Организация = &Организация
	               |	И ak_ФилиалыДляАвтозаказа.Филиал.Ссылка <> &МинскОсновной
	               |	И ak_ФилиалыДляАвтозаказа.Филиал.саУНФ_ГрафикДоставки <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботыМагазиновИФилиалов.ПустаяСсылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ФИЛИАЛЫ.Филиал КАК Магазин,
	               |	ВТ_ФИЛИАЛЫ.ГрафикДоставки КАК ГрафикДоставки,
	               |	ВТ_ФИЛИАЛЫ.ФорматМагазина КАК ФорматМагазина,
	               |	ВидыЦен.Ссылка КАК ВидЦены,
	               |	ВТ_ФИЛИАЛЫ.Организация КАК Организация
	               |ПОМЕСТИТЬ ВТ_МАГАЗИНЫ
	               |ИЗ
	               |	ВТ_ФИЛИАЛЫ КАК ВТ_ФИЛИАЛЫ
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыМагазиновИФилиалов КАК ГрафикиРаботыМагазиновИФилиалов
	               |		ПО (НАЧАЛОПЕРИОДА(ГрафикиРаботыМагазиновИФилиалов.ВремяНачала, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаОбработки, ДЕНЬ))
	               |			И (ГрафикиРаботыМагазиновИФилиалов.ЧасыРаботы > 0)
	               |			И ВТ_ФИЛИАЛЫ.ГрафикДоставки = ГрафикиРаботыМагазиновИФилиалов.ГрафикРаботы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЦен КАК ВидыЦен
	               |		ПО (ИСТИНА)
	               |			И (ВидыЦен.Код = ""УУ-000051"")
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_МАГАЗИНЫ.ВидЦены КАК ВидЦены,
	               |	ВТ_МАГАЗИНЫ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_МАГАЗИНЫ.Организация КАК Организация
	               |ПОМЕСТИТЬ ВТ_ФОРМАТЫ
	               |ИЗ
	               |	ВТ_МАГАЗИНЫ КАК ВТ_МАГАЗИНЫ";
	
	РезультатЗапроса = Запрос.Выполнить();
//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц, "ВТ_ФОРМАТЫ")
Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
КонецЕсли; 

	
	
	
Запрос.Текст ="ВЫБРАТЬ
              |	саУНФ_НормыАссортиментаСрезПоследних.Организация КАК Организация,
              |	саУНФ_НормыАссортиментаСрезПоследних.ФорматМагазина КАК ФорматМагазина,
              |	саУНФ_НормыАссортиментаСрезПоследних.Номенклатура КАК Номенклатура,
              |	саУНФ_НормыАссортиментаСрезПоследних.Количество КАК Количество,
              |	ВТ_ФОРМАТЫ.ВидЦены КАК ВидЦены,
              |	саУНФ_НормыАссортиментаСрезПоследних.КоличествоНаПаллете КАК КоличествоНаПаллете
              |ПОМЕСТИТЬ ВТ_НОМ
              |ИЗ
              |	ВТ_ФОРМАТЫ КАК ВТ_ФОРМАТЫ
              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.саУНФ_НормыАссортимента.СрезПоследних(
              |				,
              |				(Организация, ФорматМагазина) В
              |					(ВЫБРАТЬ
              |						ВТ_ФОРМАТЫ.Организация,
              |						ВТ_ФОРМАТЫ.ФорматМагазина
              |					ИЗ
              |						ВТ_ФОРМАТЫ КАК ВТ_ФОРМАТЫ)) КАК саУНФ_НормыАссортиментаСрезПоследних
              |		ПО ВТ_ФОРМАТЫ.Организация = саУНФ_НормыАссортиментаСрезПоследних.Организация
              |			И ВТ_ФОРМАТЫ.ФорматМагазина = саУНФ_НормыАссортиментаСрезПоследних.ФорматМагазина
              |ГДЕ
              |	саУНФ_НормыАссортиментаСрезПоследних.Количество > 0
              |	И саУНФ_НормыАссортиментаСрезПоследних.Номенклатура.Поставщик <> &Поставщик
              |;
              |
              |////////////////////////////////////////////////////////////////////////////////
              |ВЫБРАТЬ
              |	ВТ_НОМ.ФорматМагазина КАК ФорматМагазина,
              |	ВТ_НОМ.Номенклатура КАК Номенклатура,
              |	ВТ_НОМ.Количество КАК Количество,
              |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
              |	ВТ_НОМ.КоличествоНаПаллете КАК КоличествоНаПаллете
              |ПОМЕСТИТЬ ВТ_НОМЦЕНЫ
              |ИЗ
              |	ВТ_НОМ КАК ВТ_НОМ
              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
              |		ПО ВТ_НОМ.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
              |			И ВТ_НОМ.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦен
              |;
              |
              |////////////////////////////////////////////////////////////////////////////////
              |ВЫБРАТЬ
              |	ВТ_МАГАЗИНЫ.Магазин КАК Магазин,
              |	ВТ_НОМЦЕНЫ.ФорматМагазина КАК ФорматМагазина,
              |	ВТ_НОМЦЕНЫ.Номенклатура КАК Номенклатура,
              |	ВТ_НОМЦЕНЫ.Количество КАК Количество,
              |	ВТ_НОМЦЕНЫ.Цена КАК Цена,
              |	ВТ_НОМЦЕНЫ.КоличествоНаПаллете КАК КоличествоНаПаллете
              |ПОМЕСТИТЬ ВТ_НОРМЫ
              |ИЗ
              |	ВТ_НОМЦЕНЫ КАК ВТ_НОМЦЕНЫ
              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МАГАЗИНЫ КАК ВТ_МАГАЗИНЫ
              |		ПО ВТ_НОМЦЕНЫ.ФорматМагазина = ВТ_МАГАЗИНЫ.ФорматМагазина";
	
		
	РезультатЗапроса = Запрос.Выполнить();
	//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц, "ВТ_НОРМЫ")

	//ВЫБЕРЕМ ВСЕ ФИЛИАЛЫ МАГАЗИНЫ И НОМЕНКЛАТУРУ КОТОРУЮ НУЖНО КОНТРОЛИРОВАТЬ
	Запрос.Текст ="ВЫБРАТЬ
	|	ВТ_НОРМЫ.Магазин КАК Магазин,
	|	ВТ_НОРМЫ.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_НОРМЫ2
	|ИЗ
	|	ВТ_НОРМЫ КАК ВТ_НОРМЫ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НОРМЫ2.Магазин КАК Магазин
	|ПОМЕСТИТЬ ВТ_ВСЕМАГАЗИНЫ
	|ИЗ
	|	ВТ_НОРМЫ2 КАК ВТ_НОРМЫ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ  РАЗЛИЧНЫЕ
	|	ВТ_НОРМЫ2.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ВСЯНОМЕНКЛАТУРА
	|ИЗ
	|	ВТ_НОРМЫ2 КАК ВТ_НОРМЫ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_НОРМЫ2";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц, "ВТ_ВСЕМАГАЗИНЫ")
	Возврат Истина;

КонецФункции // ()

Функция ОстаткиВМагазинах(МенеджерВременныхТаблиц,Организация)
	НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВТ_ВСЕМАГАЗИНЫ.Магазин КАК СтруктурнаяЕдиница
	|ИЗ
	|	ВТ_ВСЕМАГАЗИНЫ КАК ВТ_ВСЕМАГАЗИНЫ
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Запасы");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтруктурнаяЕдиница", "СтруктурнаяЕдиница");
	Блокировка.Заблокировать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.саУНФ_Заказано");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Магазин", "СтруктурнаяЕдиница");
	Блокировка.Заблокировать();
	
	
	//СОБЕРЕМ ОСТАТКИ В МАГАЗИНАХ
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",Организация);
	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВТ_ВСЕМАГАЗИНЫ.Магазин КАК Магазин
	|ПОМЕСТИТЬ ВТ_ВСЕМАГАЗИНЫ2
	|ИЗ
	|	ВТ_ВСЕМАГАЗИНЫ КАК ВТ_ВСЕМАГАЗИНЫ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВСЯНОМЕНКЛАТУРА.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2
	|ИЗ
	|	ВТ_ВСЯНОМЕНКЛАТУРА КАК ВТ_ВСЯНОМЕНКЛАТУРА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	саУНФ_ЗаказаноОстатки.Номенклатура КАК Номенклатура,
	|	саУНФ_ЗаказаноОстатки.Магазин КАК Магазин,
	|	СУММА(саУНФ_ЗаказаноОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ОСТЗАК
	|ИЗ
	|	РегистрНакопления.саУНФ_Заказано.Остатки(, Организация = &Организация) КАК саУНФ_ЗаказаноОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЕМАГАЗИНЫ2 КАК ВТ_ВСЕМАГАЗИНЫ2
	|		ПО саУНФ_ЗаказаноОстатки.Магазин = ВТ_ВСЕМАГАЗИНЫ2.Магазин
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЯНОМЕНКЛАТУРА2 КАК ВТ_ВСЯНОМЕНКЛАТУРА2
	|		ПО саУНФ_ЗаказаноОстатки.Номенклатура = ВТ_ВСЯНОМЕНКЛАТУРА2.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	саУНФ_ЗаказаноОстатки.Номенклатура,
	|	саУНФ_ЗаказаноОстатки.Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК Магазин,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
	|	КОНЕЦ КАК СвободныеОстатки
	|ПОМЕСТИТЬ ВТ_ОСТМАГ2
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(, Организация = &Организация) КАК ЗапасыОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЕМАГАЗИНЫ2 КАК ВТ_ВСЕМАГАЗИНЫ2
	|		ПО ЗапасыОстатки.СтруктурнаяЕдиница = ВТ_ВСЕМАГАЗИНЫ2.Магазин
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЯНОМЕНКЛАТУРА2 КАК ВТ_ВСЯНОМЕНКЛАТУРА2
	|		ПО ЗапасыОстатки.Номенклатура = ВТ_ВСЯНОМЕНКЛАТУРА2.Номенклатура
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА 0
	|			ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
	|		КОНЕЦ <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ОСТМАГ2.Магазин, ВТ_ОСТЗАК.Магазин) КАК Магазин,
	|	ЕСТЬNULL(ВТ_ОСТМАГ2.Номенклатура, ВТ_ОСТЗАК.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) КАК КоличествоВМагазине,
	|	ЕСТЬNULL(ВТ_ОСТЗАК.КоличествоОстаток, 0) КАК ВЗаказе,
	|	ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) + ЕСТЬNULL(ВТ_ОСТЗАК.КоличествоОстаток, 0) КАК СвободныеОстатки
	|ПОМЕСТИТЬ ВТ_ОСТМАГ
	|ИЗ
	|	ВТ_ОСТМАГ2 КАК ВТ_ОСТМАГ2
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ОСТЗАК КАК ВТ_ОСТЗАК
	|		ПО ВТ_ОСТМАГ2.Магазин = ВТ_ОСТЗАК.Магазин
	|			И ВТ_ОСТМАГ2.Номенклатура = ВТ_ОСТЗАК.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВСЕМАГАЗИНЫ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ОСТЗАК
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ОСТМАГ2";
	
	
	//Таб=саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц,"ВТ_ОСТМАГ") ;
	Результат         = Запрос.Выполнить();
	
	ЗафиксироватьТранзакцию();
	
КонецФункции // ()

Функция ПолучитьНедостатки(МенеджерВременныхТаблиц,Организация,МинскОсновной,ОсновнойСклад)
	ФилиалБрест = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("УУ-000679");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МинскОсновной",МинскОсновной); 
	Запрос.УстановитьПараметр("ОсновнойСклад",ОсновнойСклад); 
	Запрос.УстановитьПараметр("ФилиалБрест",ФилиалБрест); 

	
	
	
	//ПОЛУЧИМ ТО, ЧЕГО НЕ ДОСТАЕТ
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_НОРМЫ.Магазин КАК Магазин,
	               |	ВТ_НОРМЫ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_НОРМЫ.Номенклатура КАК Номенклатура,
	               |	ВТ_НОРМЫ.Количество КАК Норма,
	               |	ВТ_НОРМЫ.КоличествоНаПаллете КАК НормаПаллет,
	               |	ВТ_НОРМЫ.Цена КАК Цена,
	               |	ВЫБОР
	               |		КОГДА ВТ_НОРМЫ.Магазин = &ФилиалБрест
	               |				ИЛИ ВТ_НОРМЫ.Магазин = &МинскОсновной
	               |			ТОГДА &ОсновнойСклад
	               |		ИНАЧЕ &МинскОсновной
	               |	КОНЕЦ КАК Филиал
	               |ПОМЕСТИТЬ ВТ_НОРМЫ2
	               |ИЗ
	               |	ВТ_НОРМЫ КАК ВТ_НОРМЫ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОСТМАГ.Магазин КАК Магазин,
	               |	ВТ_ОСТМАГ.Номенклатура КАК Номенклатура,
	               |	ВТ_ОСТМАГ.СвободныеОстатки КАК СвободныеОстатки
	               |ПОМЕСТИТЬ ВТ_ОСТМАГ2
	               |ИЗ
	               |	ВТ_ОСТМАГ КАК ВТ_ОСТМАГ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_НОРМЫ2.Магазин КАК Магазин,
	               |	ВТ_НОРМЫ2.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_НОРМЫ2.Номенклатура КАК Номенклатура,
	               |	ВТ_НОРМЫ2.Норма КАК Норма,
	               |	ВТ_НОРМЫ2.Цена КАК Цена,
	               |	ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) КАК СвободныеОстатки,
	               |	ВЫБОР
	               |		КОГДА ВТ_НОРМЫ2.Магазин = &МинскОсновной
	               |			ТОГДА ВЫБОР
	               |					КОГДА ВТ_НОРМЫ2.НормаПаллет = 0
	               |							ИЛИ ВТ_НОРМЫ2.Норма - ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) <= 0
	               |						ТОГДА ВТ_НОРМЫ2.Норма - ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0)
	               |					ИНАЧЕ (ВЫРАЗИТЬ((ВТ_НОРМЫ2.Норма - ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0)) / ВТ_НОРМЫ2.НормаПаллет + 0.4999999999999999999999 КАК ЧИСЛО(15, 0))) * ВТ_НОРМЫ2.НормаПаллет
	               |				КОНЕЦ
	               |		ИНАЧЕ ВТ_НОРМЫ2.Норма - ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0)
	               |	КОНЕЦ КАК Заказать,
	               |	ВТ_НОРМЫ2.Филиал КАК Филиал,
	               |	ВТ_НОРМЫ2.НормаПаллет КАК НормаПаллет
	               |ИЗ
	               |	ВТ_НОРМЫ2 КАК ВТ_НОРМЫ2
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОСТМАГ2 КАК ВТ_ОСТМАГ2
	               |		ПО ВТ_НОРМЫ2.Магазин = ВТ_ОСТМАГ2.Магазин
	               |			И ВТ_НОРМЫ2.Номенклатура = ВТ_ОСТМАГ2.Номенклатура
	               |ГДЕ
	               |	ВТ_НОРМЫ2.Норма - ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) > 0
	               |ИТОГИ
	               |	СУММА(Норма),
	               |	СУММА(СвободныеОстатки),
	               |	СУММА(Заказать)
	               |ПО
	               |	Филиал,
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_НОРМЫ2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ОСТМАГ2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ОСТМАГ";
	
	
	//Таб=саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц,"ВТ_ТЕСТ") ;
	
	Возврат Запрос.Выполнить();

	
	
	
КонецФункции // ()

Функция ОстаткиВФилиалах(МенеджерВременныхТаблиц,Организация,МинскОсновной,ОсновнойСклад)
	МассивФилиалов = Новый Массив(2);
	МассивФилиалов[0]	=	МинскОсновной;
	МассивФилиалов[1]	=	ОсновнойСклад;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("СписокФилиалов", МассивФилиалов);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_ВСЯНОМЕНКЛАТУРА.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2
	               |ИЗ
	               |	ВТ_ВСЯНОМЕНКЛАТУРА КАК ВТ_ВСЯНОМЕНКЛАТУРА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗапасыОстатки.СтруктурнаяЕдиница КАК Филиал,
	               |	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	               |	СУММА(ВЫБОР
	               |			КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	               |				ТОГДА 0
	               |			ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
	               |		КОНЕЦ) КАК СвободныеОстаткиФилиал
	               |ИЗ
	               |	РегистрНакопления.Запасы.Остатки(
	               |			,
	               |			Организация = &Организация
	               |				И Партия = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)
	               |				И СтруктурнаяЕдиница В (&СписокФилиалов)
	               |				И Номенклатура В
	               |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |						ВТ_ВСЯНОМЕНКЛАТУРА2.Номенклатура КАК Номенклатура
	               |					ИЗ
	               |						ВТ_ВСЯНОМЕНКЛАТУРА2 КАК ВТ_ВСЯНОМЕНКЛАТУРА2)) КАК ЗапасыОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЯНОМЕНКЛАТУРА2 КАК ВТ_ВСЯНОМЕНКЛАТУРА2
	               |		ПО ЗапасыОстатки.Номенклатура = ВТ_ВСЯНОМЕНКЛАТУРА2.Номенклатура
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	               |				ТОГДА 0
	               |			ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
	               |		КОНЕЦ <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗапасыОстатки.СтруктурнаяЕдиница,
	               |	ЗапасыОстатки.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2";
	
	//ВТ_ОСТНОМФИЛ - для сбора недостач в филиале
	

	
	//Таб=саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц,"ВТ_ОСТФИЛ") ;
	
	Возврат  Запрос.Выполнить();
КонецФункции // ()


Функция ОстаткиВФилиалахСПартиями(МенеджерВременныхТаблиц,Организация,МинскОсновной,ОсновнойСклад)
	МассивФилиалов = Новый Массив(2);
	МассивФилиалов[0]	=	МинскОсновной;
	МассивФилиалов[1]	=	ОсновнойСклад;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("СписокФилиалов", МассивФилиалов);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_ВСЯНОМЕНКЛАТУРА.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2
	               |ИЗ
	               |	ВТ_ВСЯНОМЕНКЛАТУРА КАК ВТ_ВСЯНОМЕНКЛАТУРА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗапасыОстатки.СтруктурнаяЕдиница КАК Филиал,
	               |	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	               |	ЗапасыОстатки.Партия КАК Партия,
	               |	СУММА(ВЫБОР
	               |			КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	               |				ТОГДА 0
	               |			ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
	               |		КОНЕЦ) КАК СвободныеОстаткиФилиал
	               |ИЗ
	               |	РегистрНакопления.Запасы.Остатки(
	               |			,
	               |			Организация = &Организация
	               |				И СтруктурнаяЕдиница В (&СписокФилиалов)
	               |				И Номенклатура В
	               |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |						ВТ_ВСЯНОМЕНКЛАТУРА2.Номенклатура КАК Номенклатура
	               |					ИЗ
	               |						ВТ_ВСЯНОМЕНКЛАТУРА2 КАК ВТ_ВСЯНОМЕНКЛАТУРА2)) КАК ЗапасыОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЯНОМЕНКЛАТУРА2 КАК ВТ_ВСЯНОМЕНКЛАТУРА2
	               |		ПО ЗапасыОстатки.Номенклатура = ВТ_ВСЯНОМЕНКЛАТУРА2.Номенклатура
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	               |				ТОГДА 0
	               |			ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
	               |		КОНЕЦ <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗапасыОстатки.СтруктурнаяЕдиница,
	               |	ЗапасыОстатки.Номенклатура,
	               |	ЗапасыОстатки.Партия
	               |ИТОГИ
	               |	СУММА(СвободныеОстаткиФилиал)
	               |ПО
	               |	Филиал,
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2";
	
	//ВТ_ОСТНОМФИЛ - для сбора недостач в филиале
	

	
	//Таб=саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц,"ВТ_ОСТФИЛ") ;
	
	Возврат  Запрос.Выполнить();
КонецФункции // ()


#КонецОбласти


#Область  РасчетПотребностей


Функция РаспределитьПотребностиМагазинов(РезультатМагазины,РезультатФилиалы)
	СтруктураМагазины = Новый Структура();
	
	ВыборкаФилиал			=	РезультатФилиалы.Выбрать();
	
	СтруктураМагазины = Новый Структура();
	
	
	ТаблицаРаспределения2      		=  саУНФ_АтозаказВызовСервера.ПодготовитьТаблицуРаспределения(); 
	ТаблицаДефицитаВФилиале		=	саУНФ_АтозаказВызовСервера.ПодготовитьТаблицуРаспределения(); 
	
	СтруктураПоиска = Новый Структура("Филиал,Номенклатура","","");
	
	ВыборкаФилиалыНоменклатура=РезультатМагазины.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); //ФИЛИАЛЫ	
	Пока ВыборкаФилиалыНоменклатура.Следующий() Цикл
		СтруктураПоиска.Филиал =  ВыборкаФилиалыНоменклатура.Филиал;
		
		ВыборкаНоменклатура =	ВыборкаФилиалыНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); //НОМЕНКЛАТУРА
		Пока ВыборкаНоменклатура.Следующий() Цикл
			СтруктураПоиска.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			
			КОбеспечению   =   ВыборкаНоменклатура.Заказать;
			КРаспределению         =   0;
			
			Пока ВыборкаФилиал.НайтиСледующий(СтруктураПоиска) Цикл
				КРаспределению    =   ВыборкаФилиал.СвободныеОстаткиФилиал;
			КонецЦикла;
			ВыборкаФилиал.Сбросить();

			
			//-----------------------------------------------------------------------------------------------------------
			//соберем чего не хватает в филиалах
			Если КОбеспечению >КРаспределению  Тогда
				НоваяСтрокаФилиал	=	ТаблицаДефицитаВФилиале.Добавить();
				НоваяСтрокаФилиал.Филиал	=	ВыборкаФилиалыНоменклатура.Филиал;
				НоваяСтрокаФилиал.КОбеспечению = КОбеспечению - КРаспределению;
				НоваяСтрокаФилиал.Номенклатура	= ВыборкаНоменклатура.Номенклатура;	
			КонецЕсли; 
			//----------------------------------------------------------------------------------------------------------
			
			ВыборкаРТТ     =   ВыборкаНоменклатура.Выбрать(); 
			Пока ВыборкаРТТ.Следующий()   И КРаспределению>0 Цикл //ПО МАГАЗИНАМ  (МАГАЗИНЫ,МАГАЗИНЫ)
				Распределить		=	МИН(ВыборкаРТТ.Заказать,КРаспределению);
				КРаспределению 	= 	КРаспределению - Распределить;
				
				НоваяСтрока               =   ТаблицаРаспределения2.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаРТТ);  
				
				НоваяСтрока.КОбеспечению  						=   ВыборкаРТТ.Заказать;
				НоваяСтрока.ОбеспечитьЗаСчетФилиала   	=   Распределить;
			КонецЦикла;		
			
			
		КонецЦикла; 
	КонецЦикла; 
	
	
	СтруктураМагазины.Вставить("ТаблицаРаспределения2",ТаблицаРаспределения2);
	СтруктураМагазины.Вставить("ТаблицаДефицитаВФилиале",ТаблицаДефицитаВФилиале);
	Возврат  СтруктураМагазины;

	
КонецФункции // ()



Процедура РассчитатьПотребности() Экспорт
	ОсновнойСклад = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("УУ-000071"); 
	МинскОсновной = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("УУ-000602");
	Организация	=	УправлениеНебольшойФирмойПовтИсп.ОрганизацияПоУмолчанию();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЕстьДоставка = НормыПоМАП(МенеджерВременныхТаблиц,Организация,МинскОсновной);
	Если НЕ  ЕстьДоставка Тогда
	        Возврат;
	КонецЕсли; 
	
	СделатьНепроведеннымиЗаказы(МенеджерВременныхТаблиц);
	
	ОстаткиВМагазинах(МенеджерВременныхТаблиц,Организация);
	
	РезультатМагазины         = ПолучитьНедостатки(МенеджерВременныхТаблиц,Организация,МинскОсновной,ОсновнойСклад);
	Если РезультатМагазины.Пустой() Тогда
		Возврат;
	КонецЕсли; 

	РезультатФилиалы 					=  ОстаткиВФилиалах(МенеджерВременныхТаблиц,Организация,МинскОсновной,ОсновнойСклад);
	//РезультатФилиалыПартии 			=  ОстаткиВФилиалахСПартиями(МенеджерВременныхТаблиц,Организация,МинскОсновной,ОсновнойСклад);

	
	СтруктураМагазины 			= РаспределитьПотребностиМагазинов(РезультатМагазины,РезультатФилиалы);
	
	ТаблицаРаспределения2   =	СтруктураМагазины.ТаблицаРаспределения2;
	Если ТаблицаРаспределения2.Количество()>0 Тогда
		  СоздатьЗаказыПокупателя(ТаблицаРаспределения2,Организация);
	КонецЕсли; 
	
	ТаблицаДефицитаВФилиале =   СтруктураМагазины.ТаблицаДефицитаВФилиале;
	Если ТаблицаДефицитаВФилиале.Количество()>0 Тогда
		саУНФ_АтозаказВызовСервера.ЗаписатьНедостачиВРегистр(ТаблицаДефицитаВФилиале,Организация);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

