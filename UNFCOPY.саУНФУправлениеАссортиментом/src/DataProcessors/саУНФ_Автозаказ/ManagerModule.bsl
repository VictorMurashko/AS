#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СнятиеРезервов

Функция СнятьРезервВРТТ()
	УстановитьПривилегированныйРежим(Истина);

	ОМ = ОбщегоНазначения.ОбщийМодуль("саУНФ_ОбщийМодуль");
	Если ОМ = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	ОМ.СнятиеПросроченныхРезервов();

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
КонецФункции // ()

#КонецОбласти

#Область  СозданиеЗаказа
Функция ПолучитьНастройкиТочек()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	caУНФ_ТочкиДляАвтозаказа.Точка КАК Точка,
		|	caУНФ_ТочкиДляАвтозаказа.ОтгружатьДеньВДень КАК ОтгружатьДеньВДень
		|ИЗ
		|	РегистрСведений.caУНФ_ТочкиДляАвтозаказа КАК caУНФ_ТочкиДляАвтозаказа
		|ГДЕ
		|	caУНФ_ТочкиДляАвтозаказа.Включить
		|	И caУНФ_ТочкиДляАвтозаказа.ОтгружатьДеньВДень";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаТочек = РезультатЗапроса.Выгрузить();
	
	Возврат ТаблицаТочек;
КонецФункции

// Создать заказы покупателя.
// 
// Параметры:
//  ТаблицаРаспределения2 - ТаблицаЗначений
//  Организация - СправочникСсылка.Организации
// 
// Возвращаемое значение:
//  Булево - Создать заказы покупателя
Функция СоздатьЗаказыПокупателя(ТаблицаРаспределения2,Организация)
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ВТ_ТАБФИЛ.Филиал КАК Филиал,
	              |	ВТ_ТАБФИЛ.Цена КАК Цена,
	              |	ВТ_ТАБФИЛ.Номенклатура КАК Номенклатура,
	              |	ВТ_ТАБФИЛ.Магазин КАК Магазин,
	              |	ВТ_ТАБФИЛ.ОбеспечитьЗаСчетФилиала КАК Количество
	              |ПОМЕСТИТЬ ВТ_ТАБФИЛ2
	              |ИЗ
	              |	&ТаблицаРаспределения КАК ВТ_ТАБФИЛ
	              |ГДЕ
	              |	ВТ_ТАБФИЛ.ОбеспечитьЗаСчетФилиала > 0
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВТ_ТАБФИЛ2.Филиал КАК Филиал,
	              |	ВТ_ТАБФИЛ2.Цена КАК Цена,
	              |	ВТ_ТАБФИЛ2.Номенклатура КАК Номенклатура,
	              |	ВТ_ТАБФИЛ2.Магазин КАК Магазин,
	              |	СУММА(ВТ_ТАБФИЛ2.Количество) КАК Количество,
	              |	СУММА(ЕСТЬNULL(ВТ_ТАБФИЛ2.Цена, 0) * ЕСТЬNULL(ВТ_ТАБФИЛ2.Количество, 0)) КАК СуммаЗаказа
	              |ИЗ
	              |	ВТ_ТАБФИЛ2 КАК ВТ_ТАБФИЛ2
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВТ_ТАБФИЛ2.Филиал,
	              |	ВТ_ТАБФИЛ2.Цена,
	              |	ВТ_ТАБФИЛ2.Номенклатура,
	              |	ВТ_ТАБФИЛ2.Магазин
	              |
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	Номенклатура
	              |ИТОГИ
	              |	СУММА(Количество),
	              |	СУММА(СуммаЗаказа)
	              |ПО
	              |	Филиал,
	              |	Магазин
	              |АВТОУПОРЯДОЧИВАНИЕ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ ВТ_ТАБФИЛ2";
	
	Запрос.УстановитьПараметр("ТаблицаРаспределения",ТаблицаРаспределения2);
	Результат=Запрос.Выполнить();
	
	ТаблицаТочек = ПолучитьНастройкиТочек();
	Если ТаблицаТочек.Количество()=0 Тогда
		 ТаблицаТочек = Неопределено;
	КонецЕсли;
	СтруктураОбщих  =  саУНФ_АтозаказВызовСервера.ОбщиеРеквизитыЗаказа(Организация); 
			
	ВыборкаФилиалы   =  Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	Пока ВыборкаФилиалы.Следующий() Цикл   //ПО ФИЛИАЛАМ
		Филиал=ВыборкаФилиалы.Филиал;
		СтруктураОбщих.Филиал = Филиал;
		ВыборкаМагазины   =  ВыборкаФилиалы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
		Пока ВыборкаМагазины.Следующий() Цикл   //ПО МАГАЗИНАМ
			//***Начало***15.07.2021***МурашкоВ
			Если ВыборкаМагазины.СуммаЗаказа<500 Тогда
			       // Продолжить;
			КонецЕсли; 
			//***Конец***15.07.2021***МурашкоВ
			СтруктураОбщих.Магазин = ВыборкаМагазины.Магазин;			
			СписокКонтрагент = Новый Массив(1);
			СписокКонтрагент[0] = СтруктураОбщих.Магазин;
			
			
			
			саУНФ_АтозаказВызовСервера.СоздатьЗаказыПокупателяВызовСервера(СписокКонтрагент,СтруктураОбщих,ВыборкаМагазины,ТаблицаТочек); 
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Истина;
КонецФункции // ()


Процедура СделатьНепроведеннымиЗаказы(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_ВСЕМАГАЗИНЫ.Магазин КАК Ссылка
	|ИЗ
	|	ВТ_ВСЕМАГАЗИНЫ КАК ВТ_ВСЕМАГАЗИНЫ";
	
	
	РезультатКонтрагенты = Запрос.Выполнить();
	саУНФ_АтозаказВызовСервера.ОбработатьЗаказы(РезультатКонтрагенты);
	саУНФ_АтозаказВызовСервера.ОбработатьСтарыеЗаказы();
КонецПроцедуры

#КонецОбласти

#Область СборИнформацииОтПоставщика
Функция МагазиныДляЗаказаПоставщику(Организация,Поставщик,МВТ)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МВТ;
	Запрос.УстановитьПараметр("Организация" ,Организация);
	Запрос.УстановитьПараметр("Поставщик" ,Поставщик);

	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка.Ссылка КАК Магазин,
	               |	СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка.саУНФ_ФорматМагазина КАК ФорматМагазина,
	               |	СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка.РозничныйВидЦен КАК ВидЦены
	               |ПОМЕСТИТЬ ВТ_МАГФОРМ
	               |ИЗ
	               |	Справочник.СтруктурныеЕдиницы.ДополнительныеРеквизиты КАК СтруктурныеЕдиницыДополнительныеРеквизиты
	               |ГДЕ
	               |	СтруктурныеЕдиницыДополнительныеРеквизиты.Свойство.Имя ПОДОБНО ""%ДействующийМагазин%""
	               |	И ТИПЗНАЧЕНИЯ(СтруктурныеЕдиницыДополнительныеРеквизиты.Значение) = ТИП(БУЛЕВО)
	               |	И СтруктурныеЕдиницыДополнительныеРеквизиты.Значение = ИСТИНА
	               |	И СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка.саУНФ_ГрафикДоставки <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботыМагазиновИФилиалов.ПустаяСсылка)
	               |	И СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка.Организация = &Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_МАГФОРМ.Магазин КАК Магазин,
	               |	ВТ_МАГФОРМ.ВидЦены КАК ВидЦены
	               |ПОМЕСТИТЬ ВТ_МАГ
	               |ИЗ
	               |	ВТ_МАГФОРМ КАК ВТ_МАГФОРМ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_МАГФОРМ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_МАГФОРМ.ВидЦены КАК ВидЦены
	               |ПОМЕСТИТЬ ВТ_ФОРМ
	               |ИЗ
	               |	ВТ_МАГФОРМ КАК ВТ_МАГФОРМ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ФОРМ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_ФОРМ.ВидЦены КАК ВидЦены,
	               |	саУНФ_НормыАссортиментаСрезПоследних.Номенклатура КАК Номенклатура,
	               |	саУНФ_НормыАссортиментаСрезПоследних.Количество КАК Количество,
	               |	саУНФ_НормыАссортиментаСрезПоследних.Номенклатура.Артикул КАК Артикул
	               |ПОМЕСТИТЬ ВТ_НОМ
	               |ИЗ
	               |	ВТ_ФОРМ КАК ВТ_ФОРМ
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.саУНФ_НормыАссортимента.СрезПоследних(
	               |				,
	               |				ФорматМагазина В
	               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |							ВТ_ФОРМ.ФорматМагазина КАК ФорматМагазина
	               |						ИЗ
	               |							ВТ_ФОРМ КАК ВТ_ФОРМ)
	               |					И Организация = &Организация) КАК саУНФ_НормыАссортиментаСрезПоследних
	               |		ПО ВТ_ФОРМ.ФорматМагазина = саУНФ_НормыАссортиментаСрезПоследних.ФорматМагазина
	               |ГДЕ
	               |	саУНФ_НормыАссортиментаСрезПоследних.Номенклатура.Поставщик = &Поставщик
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_НОМ.Номенклатура КАК Номенклатура,
	               |	ВТ_НОМ.ВидЦены КАК ВидЦены,
	               |	ВТ_НОМ.Количество КАК Количество,
	               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	               |	ВТ_НОМ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_НОМ.Артикул КАК Артикул
	               |ПОМЕСТИТЬ ВТ_Ц
	               |ИЗ
	               |	ВТ_НОМ КАК ВТ_НОМ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				,
	               |				(ВидЦен, Номенклатура) В
	               |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |						ВТ_НОМ.ВидЦены КАК ВидЦены,
	               |						ВТ_НОМ.Номенклатура КАК Номенклатура
	               |					ИЗ
	               |						ВТ_НОМ КАК ВТ_НОМ)) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО ВТ_НОМ.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |			И ВТ_НОМ.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_МАГФОРМ.Магазин КАК Магазин,
	               |	ВТ_МАГФОРМ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_МАГФОРМ.ВидЦены КАК ВидЦены,
	               |	ВТ_Ц.Номенклатура КАК Номенклатура,
	               |	ВТ_Ц.Количество КАК Количество,
	               |	ВТ_Ц.Цена КАК Цена,
	               |	ВТ_Ц.Артикул КАК Артикул
	               |ПОМЕСТИТЬ ВТ_НОРМ
	               |ИЗ
	               |	ВТ_МАГФОРМ КАК ВТ_МАГФОРМ
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Ц КАК ВТ_Ц
	               |		ПО ВТ_МАГФОРМ.ФорматМагазина = ВТ_Ц.ФорматМагазина
	               |			И ВТ_МАГФОРМ.ВидЦены = ВТ_Ц.ВидЦены
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_НОРМ.Магазин КАК Магазин,
	               |	ВТ_НОРМ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_НОРМ.ВидЦены КАК ВидЦены,
	               |	ВТ_НОРМ.Номенклатура КАК Номенклатура,
	               |	СУММА(ВТ_НОРМ.Количество) КАК Количество,
	               |	ВТ_НОРМ.Цена КАК Цена,
	               |	СУММА(ЕСТЬNULL(ВЫБОР
	               |				КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	               |					ТОГДА 0
	               |				ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
	               |			КОНЕЦ, 0)) КАК Остаток,
	               |	ВТ_НОРМ.Артикул КАК Артикул
	               |ПОМЕСТИТЬ ВТ_ОСТ
	               |ИЗ
	               |	ВТ_НОРМ КАК ВТ_НОРМ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
	               |				,
	               |				(СтруктурнаяЕдиница, Номенклатура) В
	               |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |							ВТ_НОРМ.Магазин КАК Магазин,
	               |							ВТ_НОРМ.Номенклатура КАК Номенклатура
	               |						ИЗ
	               |							ВТ_НОРМ КАК ВТ_НОРМ)
	               |					И Организация = &Организация
	               |					И Партия = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)) КАК ЗапасыОстатки
	               |		ПО ВТ_НОРМ.Магазин = ЗапасыОстатки.СтруктурнаяЕдиница
	               |			И ВТ_НОРМ.Номенклатура = ЗапасыОстатки.Номенклатура
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_НОРМ.Номенклатура,
	               |	ВТ_НОРМ.Магазин,
	               |	ВТ_НОРМ.ВидЦены,
	               |	ВТ_НОРМ.ФорматМагазина,
	               |	ВТ_НОРМ.Цена,
	               |	ВТ_НОРМ.Артикул
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОСТ.Магазин КАК Магазин,
	               |	ВТ_ОСТ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_ОСТ.ВидЦены КАК ВидЦены,
	               |	ВТ_ОСТ.Номенклатура КАК Номенклатура,
	               |	ВТ_ОСТ.Количество КАК Количество,
	               |	ВТ_ОСТ.Цена КАК Цена,
	               |	ВТ_ОСТ.Остаток КАК Остаток,
	               |	ВТ_ОСТ.Количество - ВТ_ОСТ.Остаток КАК Заказать,
	               |	(ВТ_ОСТ.Количество - ВТ_ОСТ.Остаток) * ВТ_ОСТ.Цена КАК Стоимость,
	               |	ВТ_ОСТ.Магазин.Код КАК КодТочки,
	               |	ВТ_ОСТ.Артикул КАК Артикул,
	               |	ВТ_ОСТ.Номенклатура.Представление КАК Наименование
	               |ИЗ
	               |	ВТ_ОСТ КАК ВТ_ОСТ
	               |ГДЕ
	               |	ВТ_ОСТ.Количество - ВТ_ОСТ.Остаток > 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Магазин,
	               |	Наименование
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(Остаток),
	               |	СУММА(Заказать),
	               |	СУММА(Стоимость)
	               |ПО
	               |	Магазин
	               |АВТОУПОРЯДОЧИВАНИЕ";

РезультатЗапроса = Запрос.Выполнить();
//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МВТ, "ВТ_МАГФОРМ")
//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МВТ, "ВТ_ФОРМ")
//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МВТ, " ВТ_НОМ")
//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МВТ, "ВТ_Ц")
//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МВТ, "ВТ_НОРМ")

	Возврат  РезультатЗапроса;


КонецФункции // ()

#КонецОбласти


#Область СборИнформации


Функция НормыПоМАП(МенеджерВременныхТаблиц,Организация,Поставщик)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	
	//В ПТ создаем заказы на понедельник
	КоличествоСуток = саУНФ_АтозаказВызовСервера.КоличествоСутокЗаказа();

	
	
	//1. Выбираем филиал из РегистрСведений.caУНФ_ФилиалыДляАвтозаказа
	//2. Выбираем магазины, привязанные к этому филиалу
	//              - филиал =  ИсточникПеремещения
	//				- действующий магазин
	//              - не пустой график
	//				- дата графика = текущаядата()
	
	Сутки = 86400;
	                 
	Запрос.УстановитьПараметр("Поставщик",Поставщик);    
	Запрос.УстановитьПараметр("Организация",Организация); 
	Запрос.УстановитьПараметр("ДатаОбработки",ТекущаяДата()+КоличествоСуток*Сутки);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ak_ФилиалыДляАвтозаказа.Филиал КАК Филиал,
	               |	ak_ФилиалыДляАвтозаказа.Филиал.Организация КАК Организация
	               |ПОМЕСТИТЬ ВТ_ФИЛИАЛЫ
	               |ИЗ
	               |	РегистрСведений.caУНФ_ФилиалыДляАвтозаказа КАК ak_ФилиалыДляАвтозаказа
	               |ГДЕ
	               |	НЕ ak_ФилиалыДляАвтозаказа.Филиал.ПометкаУдаления
	               |	И ak_ФилиалыДляАвтозаказа.Включить
	               |	И ak_ФилиалыДляАвтозаказа.Филиал.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
	               |	И ak_ФилиалыДляАвтозаказа.Филиал.Организация = &Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СтруктурныеЕдиницы.Ссылка КАК Ссылка,
	               |	СтруктурныеЕдиницы.саУНФ_ФорматМагазина КАК ФорматМагазина,
	               |	СтруктурныеЕдиницы.РозничныйВидЦен КАК ВидЦены,
	               |	ВТ_ФИЛИАЛЫ.Филиал КАК Филиал,
	               |	ВТ_ФИЛИАЛЫ.Организация КАК Организация,
	               |	СтруктурныеЕдиницы.саУНФ_ГрафикДоставки КАК ГрафикДоставки
	               |ПОМЕСТИТЬ ВТ_МАГАЗИНЫФИЛИАЛОВ
	               |ИЗ
	               |	ВТ_ФИЛИАЛЫ КАК ВТ_ФИЛИАЛЫ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ПО ВТ_ФИЛИАЛЫ.Филиал = СтруктурныеЕдиницы.ИсточникПеремещения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_МАГАЗИНЫФИЛИАЛОВ.Ссылка КАК Ссылка,
	               |	ВТ_МАГАЗИНЫФИЛИАЛОВ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_МАГАЗИНЫФИЛИАЛОВ.ВидЦены КАК ВидЦены,
	               |	ВТ_МАГАЗИНЫФИЛИАЛОВ.Филиал КАК Филиал,
	               |	ВТ_МАГАЗИНЫФИЛИАЛОВ.Организация КАК Организация,
	               |	ВТ_МАГАЗИНЫФИЛИАЛОВ.ГрафикДоставки КАК ГрафикДоставки
	               |ПОМЕСТИТЬ ВТ_ФОРМАТЫ5
	               |ИЗ
	               |	ВТ_МАГАЗИНЫФИЛИАЛОВ КАК ВТ_МАГАЗИНЫФИЛИАЛОВ
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы.ДополнительныеРеквизиты КАК СтруктурныеЕдиницыДополнительныеРеквизиты
	               |		ПО (СтруктурныеЕдиницыДополнительныеРеквизиты.Свойство.Имя ПОДОБНО ""%ДействующийМагазин%"")
	               |			И (ТИПЗНАЧЕНИЯ(СтруктурныеЕдиницыДополнительныеРеквизиты.Значение) = ТИП(БУЛЕВО))
	               |			И (СтруктурныеЕдиницыДополнительныеРеквизиты.Значение = ИСТИНА)
	               |			И (ВТ_МАГАЗИНЫФИЛИАЛОВ.ГрафикДоставки <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботыМагазиновИФилиалов.ПустаяСсылка))
	               |			И ВТ_МАГАЗИНЫФИЛИАЛОВ.Ссылка = СтруктурныеЕдиницыДополнительныеРеквизиты.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ГрафикиРаботыМагазиновИФилиалов.ГрафикРаботы КАК ГрафикРаботы
	               |ПОМЕСТИТЬ ВТ_ДЕЙСТВУЮЩИЙГРАФИК
	               |ИЗ
	               |	РегистрСведений.ГрафикиРаботыМагазиновИФилиалов КАК ГрафикиРаботыМагазиновИФилиалов
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(ГрафикиРаботыМагазиновИФилиалов.ВремяНачала, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаОбработки, ДЕНЬ)
	               |	И ГрафикиРаботыМагазиновИФилиалов.ЧасыРаботы > 0
	               |	И НЕ ГрафикиРаботыМагазиновИФилиалов.ГрафикРаботы.ПометкаУдаления
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ФОРМАТЫ5.Ссылка КАК Магазин,
	               |	ВТ_ФОРМАТЫ5.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_ФОРМАТЫ5.ВидЦены КАК ВидЦены,
	               |	ВТ_ФОРМАТЫ5.Филиал КАК Филиал,
	               |	ВТ_ФОРМАТЫ5.Организация КАК Организация,
	               |	ВТ_ФОРМАТЫ5.ГрафикДоставки КАК ГрафикДоставки
	               |ПОМЕСТИТЬ ВТ_МАГАЗИНЫ
	               |ИЗ
	               |	ВТ_ФОРМАТЫ5 КАК ВТ_ФОРМАТЫ5
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДЕЙСТВУЮЩИЙГРАФИК КАК ВТ_ДЕЙСТВУЮЩИЙГРАФИК
	               |		ПО ВТ_ФОРМАТЫ5.ГрафикДоставки = ВТ_ДЕЙСТВУЮЩИЙГРАФИК.ГрафикРаботы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_МАГАЗИНЫ.Магазин КАК Магазин,
	               |	ВТ_МАГАЗИНЫ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_МАГАЗИНЫ.ВидЦены КАК ВидЦены,
	               |	ВТ_МАГАЗИНЫ.Филиал КАК Филиал,
	               |	ВТ_МАГАЗИНЫ.Организация КАК Организация,
	               |	ВТ_МАГАЗИНЫ.ГрафикДоставки КАК ГрафикДоставки
	               |ПОМЕСТИТЬ ВТ_ФОРМАТЫ
	               |ИЗ
	               |	ВТ_МАГАЗИНЫ КАК ВТ_МАГАЗИНЫ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_ФОРМАТЫ.ГрафикДоставки КАК ГрафикДоставки
	               |ПОМЕСТИТЬ ВТ_ВСЕГРАФИКИ
	               |ИЗ
	               |	ВТ_ФОРМАТЫ КАК ВТ_ФОРМАТЫ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_ФОРМАТЫ.ФорматМагазина КАК ФорматМагазина,
	               |	ВТ_ФОРМАТЫ.ВидЦены КАК ВидЦены,
	               |	ВТ_ФОРМАТЫ.Организация КАК Организация
	               |ПОМЕСТИТЬ ВТ_ФОРМАТЫ2
	               |ИЗ
	               |	ВТ_ФОРМАТЫ КАК ВТ_ФОРМАТЫ";
	
	РезультатЗапроса = Запрос.Выполнить();
//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц, "ВТ_ФОРМАТЫ")
Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
КонецЕсли; 

	
	
	
Запрос.Текст ="ВЫБРАТЬ
              |	саУНФ_НормыАссортиментаСрезПоследних.Организация КАК Организация,
              |	саУНФ_НормыАссортиментаСрезПоследних.ФорматМагазина КАК ФорматМагазина,
              |	саУНФ_НормыАссортиментаСрезПоследних.Номенклатура КАК Номенклатура,
              |	саУНФ_НормыАссортиментаСрезПоследних.Количество КАК Количество,
              |	ВТ_ФОРМАТЫ2.ВидЦены КАК ВидЦены
              |ПОМЕСТИТЬ ВТ_НОМ
              |ИЗ
              |	ВТ_ФОРМАТЫ2 КАК ВТ_ФОРМАТЫ2
              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.саУНФ_НормыАссортимента.СрезПоследних(
              |				,
              |				(Организация, ФорматМагазина) В
              |					(ВЫБРАТЬ
              |						ВТ_ФОРМАТЫ2.Организация,
              |						ВТ_ФОРМАТЫ2.ФорматМагазина
              |					ИЗ
              |						ВТ_ФОРМАТЫ2 КАК ВТ_ФОРМАТЫ2)) КАК саУНФ_НормыАссортиментаСрезПоследних
              |		ПО ВТ_ФОРМАТЫ2.Организация = саУНФ_НормыАссортиментаСрезПоследних.Организация
              |			И ВТ_ФОРМАТЫ2.ФорматМагазина = саУНФ_НормыАссортиментаСрезПоследних.ФорматМагазина
              |ГДЕ
              |	саУНФ_НормыАссортиментаСрезПоследних.Количество > 0
             // |	И саУНФ_НормыАссортиментаСрезПоследних.Номенклатура.Поставщик <> &Поставщик
              |;
              |
              |////////////////////////////////////////////////////////////////////////////////
              |ВЫБРАТЬ
              |	ВТ_НОМ.ФорматМагазина КАК ФорматМагазина,
              |	ВТ_НОМ.Номенклатура КАК Номенклатура,
              |	ВТ_НОМ.Количество КАК Количество,
              |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
              |ПОМЕСТИТЬ ВТ_НОМЦЕНЫ
              |ИЗ
              |	ВТ_НОМ КАК ВТ_НОМ
              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
              |		ПО ВТ_НОМ.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
              |			И ВТ_НОМ.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦен
              |;
              |
              |////////////////////////////////////////////////////////////////////////////////
              |ВЫБРАТЬ
              |	ВТ_МАГАЗИНЫ.Магазин КАК Магазин,
              |	ВТ_МАГАЗИНЫ.Филиал КАК Филиал,
              |	ВТ_НОМЦЕНЫ.ФорматМагазина КАК ФорматМагазина,
              |	ВТ_НОМЦЕНЫ.Номенклатура КАК Номенклатура,
              |	ВТ_НОМЦЕНЫ.Количество КАК Количество,
              |	ВТ_НОМЦЕНЫ.Цена КАК Цена
              |ПОМЕСТИТЬ ВТ_НОРМЫ
              |ИЗ
              |	ВТ_НОМЦЕНЫ КАК ВТ_НОМЦЕНЫ
              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МАГАЗИНЫ КАК ВТ_МАГАЗИНЫ
              |		ПО ВТ_НОМЦЕНЫ.ФорматМагазина = ВТ_МАГАЗИНЫ.ФорматМагазина";
	
		
	РезультатЗапроса = Запрос.Выполнить();
	//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц, "ВТ_НОМ")

	//ВЫБЕРЕМ ВСЕ ФИЛИАЛЫ МАГАЗИНЫ И НОМЕНКЛАТУРУ КОТОРУЮ НУЖНО КОНТРОЛИРОВАТЬ
	Запрос.Текст ="ВЫБРАТЬ
	|	ВТ_НОРМЫ.Магазин КАК Магазин,
	|	ВТ_НОРМЫ.Филиал КАК Филиал,
	|	ВТ_НОРМЫ.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_НОРМЫ2
	|ИЗ
	|	ВТ_НОРМЫ КАК ВТ_НОРМЫ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НОРМЫ2.Филиал КАК Филиал
	|ПОМЕСТИТЬ ВТ_ВСЕФИЛИАЛЫ
	|ИЗ
	|	ВТ_НОРМЫ2 КАК ВТ_НОРМЫ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НОРМЫ2.Магазин КАК Магазин
	|ПОМЕСТИТЬ ВТ_ВСЕМАГАЗИНЫ
	|ИЗ
	|	ВТ_НОРМЫ2 КАК ВТ_НОРМЫ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ  РАЗЛИЧНЫЕ
	|	ВТ_НОРМЫ2.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ВСЯНОМЕНКЛАТУРА
	|ИЗ
	|	ВТ_НОРМЫ2 КАК ВТ_НОРМЫ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_НОРМЫ2";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//	саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц, "ВТ_ВСЯНОМЕНКЛАТУРА")
	Возврат Истина;

КонецФункции // ()

Функция ОстаткиВМагазинах(МенеджерВременныхТаблиц,Организация)
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ВТ_ВСЕМАГАЗИНЫ.Магазин КАК СтруктурнаяЕдиница
				   |ИЗ
				   |	ВТ_ВСЕМАГАЗИНЫ КАК ВТ_ВСЕМАГАЗИНЫ
				   |";

	РезультатЗапроса = Запрос.Выполнить();

	Попытка
		НачатьТранзакцию();

		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Запасы");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтруктурнаяЕдиница", "СтруктурнаяЕдиница");
		Блокировка.Заблокировать();

		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.саУНФ_Заказано");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Магазин", "СтруктурнаяЕдиница");
		Блокировка.Заблокировать();

		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки;
	//СОБЕРЕМ ОСТАТКИ В МАГАЗИНАХ
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = "ВЫБРАТЬ
				   |	ВТ_ВСЕМАГАЗИНЫ.Магазин КАК Магазин
				   |ПОМЕСТИТЬ ВТ_ВСЕМАГАЗИНЫ2
				   |ИЗ
				   |	ВТ_ВСЕМАГАЗИНЫ КАК ВТ_ВСЕМАГАЗИНЫ
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ВТ_ВСЯНОМЕНКЛАТУРА.Номенклатура КАК Номенклатура
				   |ПОМЕСТИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2
				   |ИЗ
				   |	ВТ_ВСЯНОМЕНКЛАТУРА КАК ВТ_ВСЯНОМЕНКЛАТУРА
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	саУНФ_ЗаказаноОстатки.Номенклатура КАК Номенклатура,
				   |	саУНФ_ЗаказаноОстатки.Магазин КАК Магазин,
				   |	СУММА(саУНФ_ЗаказаноОстатки.КоличествоОстаток) КАК КоличествоОстаток
				   |ПОМЕСТИТЬ ВТ_ОСТЗАК
				   |ИЗ
				   |	РегистрНакопления.саУНФ_Заказано.Остатки(, Организация = &Организация) КАК саУНФ_ЗаказаноОстатки
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЕМАГАЗИНЫ2 КАК ВТ_ВСЕМАГАЗИНЫ2
				   |		ПО саУНФ_ЗаказаноОстатки.Магазин = ВТ_ВСЕМАГАЗИНЫ2.Магазин
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЯНОМЕНКЛАТУРА2 КАК ВТ_ВСЯНОМЕНКЛАТУРА2
				   |		ПО саУНФ_ЗаказаноОстатки.Номенклатура = ВТ_ВСЯНОМЕНКЛАТУРА2.Номенклатура
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	саУНФ_ЗаказаноОстатки.Номенклатура,
				   |	саУНФ_ЗаказаноОстатки.Магазин
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ЗапасыОстатки.СтруктурнаяЕдиница КАК Магазин,
				   |	ЗапасыОстатки.Номенклатура КАК Номенклатура,
				   |	ВЫБОР
				   |		КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
				   |			ТОГДА 0
				   |		ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
				   |	КОНЕЦ КАК СвободныеОстатки
				   |ПОМЕСТИТЬ ВТ_ОСТМАГ2
				   |ИЗ
				   |	РегистрНакопления.Запасы.Остатки(, Организация = &Организация) КАК ЗапасыОстатки
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЕМАГАЗИНЫ2 КАК ВТ_ВСЕМАГАЗИНЫ2
				   |		ПО ЗапасыОстатки.СтруктурнаяЕдиница = ВТ_ВСЕМАГАЗИНЫ2.Магазин
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЯНОМЕНКЛАТУРА2 КАК ВТ_ВСЯНОМЕНКЛАТУРА2
				   |		ПО ЗапасыОстатки.Номенклатура = ВТ_ВСЯНОМЕНКЛАТУРА2.Номенклатура
				   |ГДЕ
				   |	ВЫБОР
				   |			КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
				   |				ТОГДА 0
				   |			ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
				   |		КОНЕЦ <> 0
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ЕСТЬNULL(ВТ_ОСТМАГ2.Магазин, ВТ_ОСТЗАК.Магазин) КАК Магазин,
				   |	ЕСТЬNULL(ВТ_ОСТМАГ2.Номенклатура, ВТ_ОСТЗАК.Номенклатура) КАК Номенклатура,
				   |	ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) КАК КоличествоВМагазине,
				   |	ЕСТЬNULL(ВТ_ОСТЗАК.КоличествоОстаток, 0) КАК ВЗаказе,
				   |	ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) + ЕСТЬNULL(ВТ_ОСТЗАК.КоличествоОстаток, 0) КАК СвободныеОстатки
				   |ПОМЕСТИТЬ ВТ_ОСТМАГ
				   |ИЗ
				   |	ВТ_ОСТМАГ2 КАК ВТ_ОСТМАГ2
				   |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ОСТЗАК КАК ВТ_ОСТЗАК
				   |		ПО ВТ_ОСТМАГ2.Магазин = ВТ_ОСТЗАК.Магазин
				   |			И ВТ_ОСТМАГ2.Номенклатура = ВТ_ОСТЗАК.Номенклатура
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |УНИЧТОЖИТЬ ВТ_ВСЕМАГАЗИНЫ2
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |УНИЧТОЖИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |УНИЧТОЖИТЬ ВТ_ОСТЗАК
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |УНИЧТОЖИТЬ ВТ_ОСТМАГ2";
	
	
	//Таб=саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц,"ВТ_ОСТМАГ") ;
	Запрос.Выполнить();
	Возврат Истина;
КонецФункции // ()

Функция ПолучитьНедостатки(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	
	
	//ПОЛУЧИМ ТО, ЧЕГО НЕ ДОСТАЕТ
	Запрос.Текст = "ВЫБРАТЬ
	|	ВТ_НОРМЫ.Магазин КАК Магазин,
	|	ВТ_НОРМЫ.Филиал КАК Филиал,
	|	ВТ_НОРМЫ.ФорматМагазина КАК ФорматМагазина,
	|	ВТ_НОРМЫ.Номенклатура КАК Номенклатура,
	|	ВТ_НОРМЫ.Количество КАК Норма,
	|	ВТ_НОРМЫ.Цена КАК Цена
	|ПОМЕСТИТЬ ВТ_НОРМЫ2
	|ИЗ
	|	ВТ_НОРМЫ КАК ВТ_НОРМЫ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОСТМАГ.Магазин КАК Магазин,
	|	ВТ_ОСТМАГ.Номенклатура КАК Номенклатура,
	|	ВТ_ОСТМАГ.СвободныеОстатки КАК СвободныеОстатки
	|ПОМЕСТИТЬ ВТ_ОСТМАГ2
	|ИЗ
	|	ВТ_ОСТМАГ КАК ВТ_ОСТМАГ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НОРМЫ2.Магазин КАК Магазин,
	|	ВТ_НОРМЫ2.Филиал КАК Филиал,
	|	ВТ_НОРМЫ2.ФорматМагазина КАК ФорматМагазина,
	|	ВТ_НОРМЫ2.Номенклатура КАК Номенклатура,
	|	ВТ_НОРМЫ2.Норма КАК Норма,
	|	ВТ_НОРМЫ2.Цена КАК Цена,
	|	ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) КАК СвободныеОстатки,
	|	ВТ_НОРМЫ2.Норма - ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) КАК Заказать
	|ИЗ
	|	ВТ_НОРМЫ2 КАК ВТ_НОРМЫ2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОСТМАГ2 КАК ВТ_ОСТМАГ2
	|		ПО ВТ_НОРМЫ2.Магазин = ВТ_ОСТМАГ2.Магазин
	|			И ВТ_НОРМЫ2.Номенклатура = ВТ_ОСТМАГ2.Номенклатура
	|ГДЕ
	|	ВТ_НОРМЫ2.Норма - ЕСТЬNULL(ВТ_ОСТМАГ2.СвободныеОстатки, 0) > 0
	|ИТОГИ
	|	СУММА(Норма),
	|	СУММА(СвободныеОстатки),
	|	СУММА(Заказать)
	|ПО
	|	Филиал,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_НОРМЫ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ОСТМАГ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ОСТМАГ";
	
	
	//Таб=саУНФ_ОбщийМодуль.ПоказатьВременнуюТаблицу(МенеджерВременныхТаблиц,"ВТ_ОСТМАГ") ;
	
	Возврат Запрос.Выполнить();
	
	
	
КонецФункции // ()

Функция ОстаткиВФилиалах(МенеджерВременныхТаблиц,Организация)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц =  МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",Организация);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВТ_ВСЕФИЛИАЛЫ.Филиал КАК ФИЛИАЛЫ
	|ПОМЕСТИТЬ ВТ_ВСЕФИЛИАЛЫ2
	|ИЗ
	|	ВТ_ВСЕФИЛИАЛЫ КАК ВТ_ВСЕФИЛИАЛЫ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВСЯНОМЕНКЛАТУРА.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2
	|ИЗ
	|	ВТ_ВСЯНОМЕНКЛАТУРА КАК ВТ_ВСЯНОМЕНКЛАТУРА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапасыОстатки.СтруктурнаяЕдиница КАК Филиал,
	|	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА 0
	|			ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
	|		КОНЕЦ) КАК СвободныеОстаткиФилиал
	|ИЗ
	|	РегистрНакопления.Запасы.Остатки(
	|			,
	|			Организация = &Организация
	|				И Партия = ЗНАЧЕНИЕ(Справочник.ПартииНоменклатуры.ПустаяСсылка)) КАК ЗапасыОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЕФИЛИАЛЫ2 КАК ВТ_ВСЕФИЛИАЛЫ2
	|		ПО ЗапасыОстатки.СтруктурнаяЕдиница = ВТ_ВСЕФИЛИАЛЫ2.ФИЛИАЛЫ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВСЯНОМЕНКЛАТУРА2 КАК ВТ_ВСЯНОМЕНКЛАТУРА2
	|		ПО ЗапасыОстатки.Номенклатура = ВТ_ВСЯНОМЕНКЛАТУРА2.Номенклатура
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЗапасыОстатки.ЗаказПокупателя <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА 0
	|			ИНАЧЕ ЗапасыОстатки.КоличествоОстаток
	|		КОНЕЦ <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗапасыОстатки.СтруктурнаяЕдиница,
	|	ЗапасыОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВСЕФИЛИАЛЫ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВСЯНОМЕНКЛАТУРА2";
	
	//ВТ_ОСТНОМФИЛ - для сбора недостач в филиале
	Возврат  Запрос.Выполнить();
КонецФункции // ()

#КонецОбласти


#Область  РасчетПотребностей
	

Функция РаспределитьПотребностиМагазинов(РезультатМагазины,РезультатФилиалы)
	ВыборкаФилиал	=	РезультатФилиалы.Выбрать();
	
	СтруктураМагазины = Новый Структура();
	
	
	ТаблицаРаспределения2      		=  саУНФ_АтозаказВызовСервера.ПодготовитьТаблицуРаспределения(); 
	ТаблицаДефицитаВФилиале		=	саУНФ_АтозаказВызовСервера.ПодготовитьТаблицуРаспределения(); 
	
	СтруктураПоиска = Новый Структура("Филиал,Номенклатура","","");
	
	ВыборкаФилиалыНоменклатура=РезультатМагазины.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); //ФИЛИАЛЫ	
	Пока ВыборкаФилиалыНоменклатура.Следующий() Цикл
		СтруктураПоиска.Филиал =  ВыборкаФилиалыНоменклатура.Филиал;
		
		ВыборкаНоменклатура =	ВыборкаФилиалыНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); //НОМЕНКЛАТУРА
		Пока ВыборкаНоменклатура.Следующий() Цикл
			СтруктураПоиска.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			
			КОбеспечению   =   ВыборкаНоменклатура.Заказать;
			КРаспределению         =   0;
			
			Пока ВыборкаФилиал.НайтиСледующий(СтруктураПоиска) Цикл
				КРаспределению    =   ВыборкаФилиал.СвободныеОстаткиФилиал;
			КонецЦикла;
			ВыборкаФилиал.Сбросить();
			
			//-----------------------------------------------------------------------------------------------------------
			//соберем чего не хватает в филиалах
			Если КОбеспечению >КРаспределению  Тогда
				НоваяСтрокаФилиал	=	ТаблицаДефицитаВФилиале.Добавить();
				НоваяСтрокаФилиал.Филиал	=	ВыборкаФилиалыНоменклатура.Филиал;
				НоваяСтрокаФилиал.КОбеспечению = КОбеспечению - КРаспределению;
				НоваяСтрокаФилиал.Номенклатура	= ВыборкаНоменклатура.Номенклатура;	
			КонецЕсли; 
			//----------------------------------------------------------------------------------------------------------
			
			ВыборкаРТТ     =   ВыборкаНоменклатура.Выбрать(); 
			Пока ВыборкаРТТ.Следующий()   И КРаспределению>0 Цикл //ПО МАГАЗИНАМ  (МАГАЗИНЫ,МАГАЗИНЫ)
				Распределить		=	МИН(ВыборкаРТТ.Заказать,КРаспределению);
				КРаспределению 	= 	КРаспределению - Распределить;
				
				НоваяСтрока               =   ТаблицаРаспределения2.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаРТТ);  
				
				НоваяСтрока.КОбеспечению  						=   ВыборкаРТТ.Заказать;
				НоваяСтрока.ОбеспечитьЗаСчетФилиала   	=   Распределить;
			КонецЦикла;		
			
		КонецЦикла; 
	КонецЦикла; 
	
	
	СтруктураМагазины.Вставить("ТаблицаРаспределения2",ТаблицаРаспределения2);
	СтруктураМагазины.Вставить("ТаблицаДефицитаВФилиале",ТаблицаДефицитаВФилиале);
	Возврат  СтруктураМагазины;
	
КонецФункции // ()


Процедура ЗаказМелочевки() Экспорт
	Если НачалоДня(ТекущаяДата())=Дата(2022,1,14) Тогда
	     Возврат;
	КонецЕсли; 
    Организация	=	УправлениеНебольшойФирмойПовтИсп.ОрганизацияПоУмолчанию();
	Поставщик=Справочники.Контрагенты.НайтиПоКоду("УУ-000271");
	МВТ = Новый МенеджерВременныхТаблиц;
    СтруктураПараметров=саУНФ_АтозаказВызовСервера.ОбщиеПараметрыАвтозаказа();
	Если ДеньНедели(ТекущаяДата())<>СтруктураПараметров.ДеньНедели Тогда
		     Возврат;
	КонецЕсли;	
	
	РезультатМагазины=МагазиныДляЗаказаПоставщику(Организация,Поставщик,МВТ);
	Если  РезультатМагазины.Пустой() Тогда
			Возврат;
	КонецЕсли; 

	саУНФ_АтозаказВызовСервера.СоздатьЗаказПоставщику(Организация,РезультатМагазины,Поставщик);

	саУНФ_АтозаказВызовСервера.ОчисткаВременныхТаблиц(МВТ);


КонецПроцедуры
 

Процедура РассчитатьПотребности() Экспорт
//	Если НачалоДня(ТекущаяДата())=Дата(2022,1,7,0,0,0) Тогда
//	       Возврат;
//	КонецЕсли;   
// + МурашкоВ 06.06.2022
	// в выходой не должно сработать
	Если НЕ саУНФ_АтозаказВызовСервера.ОпределитьРабочийЛиДень() Тогда
		Возврат;
	КонецЕсли; 
	// - МурашкоВ 06.06.2022

	//+В рабочей раскомментировать
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.са_УНФ_АвтозаказРТТ);
	СнятьРезервВРТТ(); 
	//-В рабочей раскомментировать
	
	
	//ЗаказМелочевки();
	
	
	 
	ОсновнойСклад = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("УУ-000071"); 
	Организация	=	УправлениеНебольшойФирмойПовтИсп.ОрганизацияПоУмолчанию();
	Поставщик=Справочники.Контрагенты.НайтиПоКоду("УУ-000271"); 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЕстьДоставка = НормыПоМАП(МенеджерВременныхТаблиц,Организация,Поставщик);
	Если НЕ  ЕстьДоставка Тогда
	        Возврат;
	КонецЕсли; 
	//раскоментить  после теста
	СделатьНепроведеннымиЗаказы(МенеджерВременныхТаблиц);
	//
	
	ОстаткиВМагазинах(МенеджерВременныхТаблиц,Организация);
	
	РезультатМагазины         = ПолучитьНедостатки(МенеджерВременныхТаблиц);
	Если РезультатМагазины.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	РезультатФилиалы 	=  ОстаткиВФилиалах(МенеджерВременныхТаблиц,Организация);
	
	СтруктураМагазины = РаспределитьПотребностиМагазинов(РезультатМагазины,РезультатФилиалы);
	
	ТаблицаРаспределения2   =	СтруктураМагазины.ТаблицаРаспределения2;
	Если ТаблицаРаспределения2.Количество()>0 Тогда
		  СоздатьЗаказыПокупателя(ТаблицаРаспределения2,Организация);
	КонецЕсли; 
	
	ТаблицаДефицитаВФилиале =   СтруктураМагазины.ТаблицаДефицитаВФилиале;
	Если ТаблицаДефицитаВФилиале.Количество()>0 Тогда
		саУНФ_АтозаказВызовСервера.ЗаписатьНедостачиВРегистр(ТаблицаДефицитаВФилиале,Организация);
	КонецЕсли;
	
	 //очистим временные таблицы
	саУНФ_АтозаказВызовСервера.ОчисткаВременныхТаблиц(МенеджерВременныхТаблиц); 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

